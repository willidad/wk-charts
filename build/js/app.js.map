{"version":3,"file":"build\\js\\app.js","sources":["app/config/d3ChartConstants.coffee","app/container/brush.coffee","app/container/brushed.coffee","app/container/chart.coffee","app/container/layout.coffee","app/container/selection.coffee","app/filters/ttFormat.coffee","app/layouts/area.coffee","app/layouts/bubble.coffee","app/layouts/clusteredBar.coffee","app/layouts/gaugeChart.coffee","app/layouts/geoMap.coffee","app/layouts/horizontalArea.coffee","app/layouts/horizontalClusteredBar.coffee","app/layouts/horizontalLine.coffee","app/layouts/line.coffee","app/layouts/pieChart.coffee","app/layouts/scatter.coffee","app/layouts/simpleBar.coffee","app/layouts/spider.coffee","app/layouts/stackedArea.coffee","app/layouts/stackedBar.coffee","app/models/behaviorBrush.coffee","app/models/behaviorSelect.coffee","app/models/behaviorTooltip.coffee","app/models/behaviors.coffee","app/models/chart.coffee","app/models/container.coffee","app/models/layout.coffee","app/models/legend.coffee","app/models/scale.coffee","app/models/scaleList.coffee","app/scales/color.coffee","app/scales/scaleUtils.coffee","app/scales/shape.coffee","app/scales/size.coffee","app/scales/x.coffee","app/scales/y.coffee","app/services/selectionSharing.coffee","app/services/timer.coffee","app/util/ResizeSensor.js","app/util/d3.geo.zoom.js","app/util/glow.js","app/util/layerData.coffee","app/util/svgIcon.coffee","app/util/utilities.coffee"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAR,CAAe,UAAf,EAA0B,EAA1B;;AAAA,OACO,CAAC,MAAR,CAAe,UAAf,CAEE,CAAC,QAFH,CAEY,UAFZ,EAEwB;AAAA,EACpB,QAAQ,EAAE,CAAC,KAAK,CAAC,MADG;AAAA,EAEpB,MAAM,EAAE,CAAC,KAAK,CAAC,IAFK;AAAA,EAGpB,KAAK,EAAE,CAAC,KAAK,CAAC,GAHM;AAAA,EAIpB,UAAU,EAAE,CAAC,KAAK,CAAC,QAJC;AAAA,EAKpB,UAAU,EAAE,CAAC,KAAK,CAAC,QALC;AAAA,EAMpB,UAAU,EAAE,CAAC,KAAK,CAAC,QANC;AAAA,EAOpB,WAAW,EAAE,CAAC,KAAK,CAAC,SAPA;AAAA,EAQpB,SAAS,EAAE,CAAC,KAAK,CAAC,OARE;AAAA,EASpB,YAAY,EAAE,CAAC,KAAK,CAAC,UATD;AAAA,EAUpB,YAAY,EAAE,CAAC,KAAK,CAAC,UAVD;AAAA,EAWpB,aAAa,EAAE,CAAC,KAAK,CAAC,WAXF;AAAA,EAYpB,aAAa,EAAE,CAAC,KAAK,CAAC,WAZF;AAAA,EAapB,MAAM,EAAE,CAAC,IAAI,CAAC,KAbM;CAFxB,CAkBE,CAAC,QAlBH,CAkBY,iBAlBZ,EAkB+B,CAC3B,SAD2B,EAE3B,YAF2B,EAG3B,YAH2B,EAI3B,aAJ2B,EAK3B,aAL2B,CAlB/B,CA0BE,CAAC,QA1BH,CA0BY,gBA1BZ,EA0B8B;AAAA,EAC1B,KAAK,EADqB;AAAA,EAE1B,MAAM,EAFoB;AAAA,EAG1B,QAAQ,EAHkB;AAAA,EAI1B,OAAO,EAJmB;AAAA,EAK1B,iBAAgB;AAAA,IAAC,MAAK,EAAN;AAAA,IAAU,OAAM,EAAhB;GALU;AAAA,EAM1B,iBAAgB;AAAA,IAAC,MAAK,EAAN;AAAA,IAAU,OAAM,EAAhB;GANU;AAAA,EAO1B,WAAU,CAPgB;AAAA,EAQ1B,WACE;AAAA,SAAK,CAAL;AAAA,IACA,MAAK,CADL;AAAA,IAEA,QAAO,CAFP;AAAA,IAGA,OAAM,EAHN;GATwB;AAAA,EAa1B,MACE;AAAA,SAAI,EAAJ;AAAA,IACA,QAAO,EADP;AAAA,IAEA,MAAK,EAFL;AAAA,IAGA,OAAM,EAHN;GAdwB;AAAA,EAkB1B,OACE;AAAA,SAAI,EAAJ;AAAA,IACA,QAAO,EADP;AAAA,IAEA,MAAK,EAFL;AAAA,IAGA,OAAM,EAHN;GAnBwB;CA1B9B,CAmDE,CAAC,QAnDH,CAmDY,UAnDZ,EAmDwB,CACpB,QADoB,EAEpB,OAFoB,EAGpB,eAHoB,EAIpB,aAJoB,EAKpB,QALoB,EAMpB,SANoB,CAnDxB,CA4DE,CAAC,QA5DH,CA4DY,YA5DZ,EA4D0B;AAAA,EACtB,eAAe,OADO;AAAA,EAEtB,GACE;AAAA,mBAAe,CAAC,KAAD,EAAQ,QAAR,CAAf;AAAA,IACA,YAAY;AAAA,MAAC,QAAO,QAAR;KADZ;AAAA,IAEA,qBAAqB,QAFrB;AAAA,IAGA,WAAW,YAHX;AAAA,IAIA,SAAS,OAJT;AAAA,IAKA,gBAAe,CAAC,SAAD,EAAY,QAAZ,CALf;AAAA,IAMA,sBAAsB,SANtB;AAAA,IAOA,aACE;AAAA,WAAK,KAAL;AAAA,MACA,QAAQ,QADR;KARF;GAHoB;AAAA,EAatB,GACE;AAAA,mBAAe,CAAC,MAAD,EAAS,OAAT,CAAf;AAAA,IACA,YAAY;AAAA,MAAC,OAAM,OAAP;KADZ;AAAA,IAEA,qBAAqB,MAFrB;AAAA,IAGA,WAAW,UAHX;AAAA,IAIA,SAAS,QAJT;AAAA,IAKA,gBAAe,CAAC,SAAD,EAAY,QAAZ,CALf;AAAA,IAMA,sBAAsB,SANtB;AAAA,IAOA,aACE;AAAA,YAAM,OAAN;AAAA,MACA,OAAO,OADP;KARF;GAdoB;CA5D1B,CAqFE,CAAC,QArFH,CAqFY,aArFZ,EAqF2B;AAAA,EACvB,UAAS,GADc;CArF3B,CAwFE,CAAC,QAxFH,CAwFY,aAxFZ,EAwF2B,oBAxF3B,CA0FE,CAAC,QA1FH,CA0FY,YA1FZ,EA0F0B;EACtB;AAAA,YAAQ,GAAR;AAAA,IACA,QAAQ,GADR;AAAA,IAEA,YAAY,OAFZ;AAAA,IAGA,WAAW,MAHX;AAAA,IAIA,YAAY,OAJZ;GADsB;CA1F1B,CAkGE,CAAC,QAlGH,CAkGY,gBAlGZ,EAkG8B;AAAA,EAC1B,MAAM,UADoB;AAAA,EAE1B,QAAU,MAFgB;CAlG9B,CADA;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,OAArC,EAA8C,SAAC,IAAD,EAAO,gBAAP,EAAyB,QAAzB;AAC5C,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,CAAC,QAAD,EAAW,SAAX,EAAsB,IAAtB,EAA4B,IAA5B,CAFJ;AAAA,IAGL,OACE;AAAA,mBAAa,GAAb;AAAA,MACA,gBAAgB,GADhB;AAAA,MAEA,gBAAgB,GAFhB;AAAA,MAGA,QAAQ,GAHR;KAJG;AAAA,IASL,MAAK,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,WAAxB;AACH;AAAA,cAAQ,WAAY,GAApB;AAAA,MACA,SAAS,WAAY,GADrB;AAAA,MAEA,IAAI,WAAY,GAFhB;AAAA,MAGA,IAAI,WAAY,GAHhB;AAAA,MAIA,SAAS,MAJT;AAAA,MAKA,SAAS,MALT;AAAA,MAMA,eAAe,MANf;AAAA,MAOA,sBAAsB,MAPtB;AAAA,MAQA,eAAe,MAAU,EARzB;AAAA,MASA,cAAc,MATd;AAAA,MAWA,QAAQ,KAAK,CAAC,QAAN,EAAgB,CAAC,KAXzB;AAYA,UAAG,MAAU,EAAb;AAEE,iBAAS,MAAM,CAAC,MAAP,EAAe,CAAC,SAAhB,CAA0B,CAAC,GAAD,EAAM,GAAN,CAA1B,CAAT;AAAA,QACA,KAAK,CAAC,CAAN,CAAQ,MAAM,CAAC,CAAf,CADA;AAAA,QAEA,KAAK,CAAC,CAAN,CAAQ,MAAM,CAAC,CAAf,CAFA,CAFF;OAAA;AAME,aAAK,CAAC,CAAN,CAAQ,CAAR;AAAA,QACA,KAAK,CAAC,CAAN,CAAQ,CAAR,CADA,CANF;OAZA;AAAA,MAoBA,KAAK,CAAC,MAAN,CAAa,IAAb,CApBA;AAAA,MAsBA,KAAK,CAAC,MAAN,EAAc,CAAC,EAAf,CAAkB,OAAlB,EAA2B,SAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB;AACzB,YAAG,KAAK,CAAC,WAAT;AACE,eAAK,CAAC,WAAN,GAAoB,QAApB,CADF;SAAA;AAEA,YAAG,KAAK,CAAC,cAAT;AACE,eAAK,CAAC,cAAN,GAAuB,UAAvB,CADF;SAFA;AAIA,YAAG,KAAK,CAAC,cAAT;AACE,eAAK,CAAC,cAAN,GAAuB,MAAvB,CADF;SAJA;eAMA,KAAK,CAAC,MAAN,GAPyB;MAAA,CAA3B,CAtBA;AAAA,MA+BA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,YAAtB,EAAoC,SAAC,IAAD;eAClC,KAAK,CAAC,IAAN,CAAW,IAAX,EADkC;MAAA,CAApC,CA/BA;aAmCA,KAAK,CAAC,QAAN,CAAe,OAAf,EAAwB,SAAC,GAAD;AACtB,YAAG,CAAC,CAAC,QAAF,CAAW,GAAX,KAAoB,GAAG,CAAC,MAAJ,GAAa,CAApC;iBACE,KAAK,CAAC,UAAN,CAAiB,GAAjB,EADF;SAAA;iBAGE,KAAK,CAAC,UAAN,CAAiB,MAAjB,EAHF;SADsB;MAAA,CAAxB,EApCG;IAAA,CATA;GAAP,CAD4C;AAAA,CAA9C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,SAArC,EAAgD,SAAC,IAAD,EAAM,gBAAN,EAAwB,MAAxB;AAC9C;AAAA,cAAY,CAAZ;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,CAAC,QAAD,EAAW,UAAX,EAAuB,IAAvB,EAA6B,IAA7B,CAFJ;AAAA,IAGL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,WAAxB;AACJ;AAAA,cAAQ,WAAY,GAApB;AAAA,MACA,SAAS,WAAY,GADrB;AAAA,MAEA,IAAI,WAAY,GAFhB;AAAA,MAGA,IAAI,WAAY,GAHhB;AAAA,MAKA,OAAO,KAAK,CALZ;AAAA,MAMA,cAAc,MANd;AAAA,MAQA,UAAU,SAAC,MAAD;AACR;AAAA,cAAM,CAAC,KAAP,CAAc,YAAQ,CAAC,IAAI,CAAC,EAAL,EAAD,CAAtB;AACA,YAAG,KAAH;AAAiB,iBAAjB;SADA;AAAA,QAGA,IAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB,CAAC,KAApB,EAA2B,CAAC,MAA5B,CAAmC,MAAnC,CAHA;AAIA;AAAA;uBAAA;cAA8B,CAAC,CAAC,MAAF,EAAU,CAAC,QAAX,CAAoB,IAApB;AAC5B,aAAC,CAAC,SAAF,EAAa,CAAC,KAAd,CAAoB,IAApB,EAA0B,IAA1B;WADF;AAAA,SAJA;eAMA,MAAM,CAAC,IAAP,CAAa,YAAQ,CAAC,IAAI,CAAC,EAAL,EAAD,CAArB,EAPQ;MAAA,CARV;AAAA,MAiBA,KAAK,CAAC,QAAN,CAAe,SAAf,EAA0B,SAAC,GAAD;AACxB,YAAG,CAAC,CAAC,QAAF,CAAW,GAAX,KAAoB,GAAG,CAAC,MAAJ,GAAa,CAApC;AACE,wBAAc,GAAd;iBACA,gBAAgB,CAAC,QAAjB,CAA0B,WAA1B,EAAuC,OAAvC,EAFF;SAAA;iBAIE,cAAc,OAJhB;SADwB;MAAA,CAA1B,CAjBA;aAwBA,KAAK,CAAC,GAAN,CAAU,UAAV,EAAsB;eACpB,gBAAgB,CAAC,UAAjB,CAA4B,WAA5B,EAAyC,OAAzC,EADoB;MAAA,CAAtB,EAzBI;IAAA,CAHD;GAAP,CAF8C;AAAA,CAAhD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,OAArC,EAA8C,SAAC,IAAD,EAAO,KAAP,EAAc,SAAd;AAC5C;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,OAFJ;AAAA,IAGL,OACE;AAAA,YAAM,GAAN;KAJG;AAAA,IAKL,YAAY;AACV;AAAA,WAAK,OAAL;AACA,aAAO,EAAP,CAFU;IAAA,CALP;AAAA,IASL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,UAAxB;AACJ;AAAA,WAAK,UAAL;AAAA,MAEA,YAAY,KAFZ;AAAA,MAGA,kBAAkB,MAHlB;AAAA,MAIA,OAAO,CAAC,QAAR,CAAiB,EAAE,CAAC,EAAH,EAAjB,CAJA;AAAA,MAMA,EAAE,CAAC,SAAH,EAAc,CAAC,OAAf,CAAuB,OAAQ,GAA/B,CANA;AAAA,MAQA,EAAE,CAAC,SAAH,EAAc,CAAC,SAAf,EARA;AAAA,MAUA,KAAK,CAAC,QAAN,CAAe,UAAf,EAA2B,SAAC,GAAD;AACzB,YAAG,QAAS,MAAT,IAAuB,CAAC,QAAO,EAAP,IAAa,QAAO,MAArB,CAA1B;iBACE,EAAE,CAAC,WAAH,CAAe,IAAf,EADF;SAAA;iBAGE,EAAE,CAAC,WAAH,CAAe,KAAf,EAHF;SADyB;MAAA,CAA3B,CAVA;AAAA,MAgBA,KAAK,CAAC,QAAN,CAAe,mBAAf,EAAoC,SAAC,GAAD;AAClC,YAAG,OAAQ,CAAC,CAAC,QAAF,CAAW,IAAX,CAAR,IAA6B,QAAQ,CAAxC;iBACE,EAAE,CAAC,iBAAH,CAAqB,GAArB,EADF;SADkC;MAAA,CAApC,CAhBA;aAoBA,KAAK,CAAC,QAAN,CAAe,WAAf,EAA4B,SAAC,GAAD;AAC1B,YAAG,QAAS,MAAT,IAAuB,QAAS,OAAnC;AACE,sBAAY,IAAZ,CADF;SAAA;AAGE,sBAAY,KAAZ,CAHF;SAAA;AAIA,YAAG,eAAH;AACE,4BADF;SAJA;eAOA,kBAAkB,KAAK,CAAC,MAAN,CAAa,MAAb,EAAqB,SAAC,GAAD;AACrC,cAAG,GAAH;mBACE,EAAE,CAAC,SAAH,EAAc,CAAC,OAAf,CAAuB,GAAvB,EADF;WADqC;QAAA,CAArB,EAGhB,SAHgB,EARQ;MAAA,CAA5B,EArBI;IAAA,CATD;GAAP,CAF4C;AAAA,CAA9C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,QAArC,EAA+C,SAAC,IAAD,EAAO,MAAP,EAAe,SAAf;AAC7C;AAAA,cAAY,CAAZ;AACA,SAAO;AAAA,IACL,UAAU,IADL;AAAA,IAEL,SAAS,CAAC,QAAD,EAAU,QAAV,CAFJ;AAAA,IAIL,YAAY,SAAC,QAAD;AACV;AAAA,WAAK,QAAL;AACA,aAAO,EAAP,CAFU;IAAA,CAJP;AAAA,IAOL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,WAAxB;AAEJ;AAAA,WAAK,WAAY,GAAjB;AAAA,MACA,QAAQ,WAAY,GADpB;AAAA,MAEA,EAAE,CAAC,KAAH,CAAS,KAAT,CAFA;AAAA,MAIA,OAAO,CAAC,QAAR,CAAiB,EAAE,CAAC,EAAH,EAAjB,CAJA;AAAA,MAOA,KAAK,CAAC,SAAN,CAAgB,EAAhB,CAPA;AAAA,MAQA,KAAK,CAAC,SAAN,EAAiB,CAAC,SAAlB,CAA4B,EAA5B,CARA;aASA,EAAE,CAAC,SAAH,CAAa,KAAK,CAAC,SAAN,EAAb,EAXI;IAAA,CAPD;GAAP,CAF6C;AAAA,CAA/C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,WAArC,EAAkD,SAAC,IAAD;AAChD;AAAA,UAAQ,CAAR;AAEA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,OACE;AAAA,sBAAgB,GAAhB;KAHG;AAAA,IAIL,SAAS,QAJJ;AAAA,IAML,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,MAAxB;aAEJ,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,qBAAtB,EAA6C;AAE3C;AAAA,qBAAa,MAAM,CAAC,QAAP,EAAiB,CAAC,QAA/B;AAAA,QACA,UAAU,CAAC,MAAX,CAAkB,IAAlB,CADA;eAEA,UAAU,CAAC,EAAX,CAAc,UAAd,EAA0B,SAAC,eAAD;AACxB,eAAK,CAAC,cAAN,GAAuB,eAAvB;iBACA,KAAK,CAAC,MAAN,GAFwB;QAAA,CAA1B,EAJ2C;MAAA,CAA7C,EAFI;IAAA,CAND;GAAP,CAHgD;AAAA,CAAlD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,MAA3B,CAAkC,UAAlC,EAA8C,SAAC,IAAD,EAAM,cAAN;AAC5C,SAAO,SAAC,KAAD,EAAQ,MAAR;AACL;AAAA,QAAG,iBAAgB,QAAhB,IAA6B,KAAK,CAAC,UAAtC;AACE,WAAK,EAAE,CAAC,IAAI,CAAC,MAAR,CAAe,cAAc,CAAC,IAA9B,CAAL;AACA,aAAO,GAAG,KAAH,CAAP,CAFF;KAAA;AAGA,QAAG,iBAAgB,QAAhB,IAA4B,MAAI,CAAM,MAAN,CAAnC;AACE,WAAK,EAAE,CAAC,MAAH,CAAU,cAAc,CAAC,MAAzB,CAAL;AACA,aAAO,GAAG,MAAH,CAAP,CAFF;KAHA;AAMA,WAAO,KAAP,CAPK;EAAA,CAAP,CAD4C;AAAA,CAA9C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,MAArC,EAA6C,SAAC,IAAD;AAC3C;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAGL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAEJ;AAAA,kBAAY,EAAZ;AAAA,MACA,UAAU,EADV;AAAA,MAEA,WAAW,MAFX;AAAA,MAGA,eAAe,MAHf;AAAA,MAIA,WAAW,MAJX;AAAA,MAKA,aAAa,EALb;AAAA,MAMA,eAAe,KANf;AAAA,MAOA,SAAS,CAPT;AAAA,MAQA,MAAM,SAAS,UARf;AAAA,MASA,OAAO,MATP;AAAA,MAaA,aAAa,SAAC,GAAD;AACX;AAAA,mBAAW,OAAO,CAAC,GAAR,CAAY,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAC,CAAC,GAAR;AAAA,YAAa,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAC,CAAC,KAAM,KAAI,CAAC,CAAtC,CAAnB;AAAA,YAA6D,OAAM;AAAA,cAAC,oBAAoB,CAAC,CAAC,KAAvB;aAAnE;YAAP;QAAA,CAAZ,CAAX;AAAA,QACA,IAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EADd;AAAA,QAEA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA/C,CAFf;eAGA,IAAC,OAAD,GAAU,IAAC,OAAM,CAAC,MAAR,CAAe,QAAf,EAJC;MAAA,CAbb;AAAA,MAmBA,eAAe,SAAC,GAAD;AACb,mBAAW,IAAI,CAAC,SAAL,CAAgB,aAAU,GAA1B,CAAgC,CAAC,IAAjC,CAAsC,OAAtC,EAA+C,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAA/C,CAAX;AAAA,QACA,QAAQ,CAAC,KAAT,EAAgB,CAAC,MAAjB,CAAwB,QAAxB,CAAiC,CAAC,IAAlC,CAAuC,OAAvC,EAAgD,YAAS,GAAzD,CACE,CAAC,IADH,CACQ,GADR,EACgB,YAAH,GAAqB,CAArB,GAA4B,CADzC,CAEE,CAAC,KAFH,CAES,MAFT,EAEiB,SAAC,CAAD;iBAAM,CAAC,CAAC,MAAR;QAAA,CAFjB,CAGE,CAAC,KAHH,CAGS,cAHT,EAGyB,GAHzB,CAIE,CAAC,KAJH,CAIS,QAJT,EAImB,OAJnB,CAKE,CAAC,KALH,CAKS,gBALT,EAK0B,MAL1B,CADA;AAAA,QAOA,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAoB,SAAC,CAAD;iBAAO,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,CAAC,CAAC,KAAM,KAAI,CAAC,CAAlC,EAAP;QAAA,CAApB,CAPA;AAAA,QAQA,QAAQ,CAAC,IAAT,EAAe,CAAC,MAAhB,EARA;eASA,IAAI,CAAC,IAAL,CAAU,WAAV,EAAwB,eAAW,CAAC,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA3C,IAAgD,MAAjD,CAAX,GAAmE,GAA3F,EAVa;MAAA,CAnBf;AAAA,MAiCA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AAEL;AAAA,oBAAY,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAZ;AAAA,QACA,UAAU,SAAS,CAAC,GAAV,CAAc;iBAAA,SAAC,GAAD;mBAAS;AAAA,cAAC,KAAI,GAAL;AAAA,cAAU,OAAM,KAAK,CAAC,KAAN,GAAc,GAAd,CAAhB;AAAA,cAAoC,OAAM,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;uBAAM;AAAA,kBAAC,GAAE,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAH;AAAA,kBAAc,GAAE,CAAC,CAAC,UAAF,CAAa,CAAb,EAAgB,GAAhB,CAAhB;kBAAN;cAAA,CAAT,CAA1C;cAAT;UAAA;QAAA,QAAd,CADV;AAAA,QAGA,SAAY,CAAC,CAAC,SAAF,EAAH,GAAsB,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,KAAwB,CAA9C,GAAqD,CAH9D;AAKA,YAAG,QAAH;AAAiB,kBAAQ,CAAC,IAAT,CAAc,IAAd,EAAjB;SALA;AAAA,QAOA,OAAO,EAAE,CAAC,GAAG,CAAC,IAAP,EACP,CAAC,CADM,CACJ,SAAC,CAAD;iBAAQ,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAR;QAAA,CADI,CAEP,CAAC,EAFM,CAEH,SAAC,CAAD;iBAAQ,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAR;QAAA,CAFG,CAGP,CAAC,EAHM,CAGH,SAAC,CAAD;iBAAQ,CAAC,CAAC,KAAF,GAAU,CAAV,EAAR;QAAA,CAHG,CAPP;AAAA,QAYA,SAAS,IAAI,CAAC,SAAL,CAAe,QAAf,CACP,CAAC,IADM,CACD,OADC,EACQ,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CADR,CAZT;AAAA,QAcA,MAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CACE,CAAC,IADH,CACQ,OADR,EACiB,OADjB,CAEE,CAAC,MAFH,CAEU,MAFV,CAGE,CAAC,IAHH,CAGQ,OAHR,EAGgB,MAHhB,CAIE,CAAC,IAJH,CAIQ,WAJR,EAIsB,eAAY,MAAZ,GAAmB,GAJzC,CAKE,CAAC,KALH,CAKS,QALT,EAKmB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CALnB,CAME,CAAC,KANH,CAMS,MANT,EAMiB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CANjB,CAOE,CAAC,KAPH,CAOS,SAPT,EAOoB,CAPpB,CAQE,CAAC,KARH,CAQS,gBART,EAQ2B,MAR3B,CAdA;AAAA,QAuBA,MAAM,CAAC,MAAP,CAAc,OAAd,CAAsB,CAAC,UAAvB,EAAmC,CAAC,QAApC,CAA6C,OAAO,CAAC,QAArD,CACE,CAAC,IADH,CACQ,GADR,EACa,SAAC,CAAD;iBAAO,KAAK,CAAC,CAAC,KAAP,EAAP;QAAA,CADb,CAEE,CAAC,KAFH,CAES,SAFT,EAEoB,GAFpB,CAEwB,CAAC,KAFzB,CAE+B,gBAF/B,EAEiD,MAFjD,CAvBA;eA0BA,MAAM,CAAC,IAAP,EAAa,CAAC,UAAd,EAA0B,CAAC,QAA3B,CAAoC,OAAO,CAAC,QAA5C,CACE,CAAC,KADH,CACS,SADT,EACoB,CADpB,CAEE,CAAC,MAFH,GA5BK;MAAA,CAjCP;AAAA,MAiEA,QAAQ,SAAC,IAAD,EAAO,OAAP,EAAe,CAAf,EAAiB,CAAjB,EAAmB,KAAnB;AACN;AAAA,iBAAS,IAAI,CAAC,SAAL,CAAe,QAAf,CAAT;eACA,MAAM,CAAC,MAAP,CAAc,OAAd,CACE,CAAC,IADH,CACQ,GADR,EACa,SAAC,CAAD;iBAAO,KAAK,CAAC,CAAC,KAAP,EAAP;QAAA,CADb,EAFM;MAAA,CAjER;AAAA,MAyEA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,WAAD,CAAY,OAAZ,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,QAAzB,CAAkC,CAAC,cAAnC,CAAkD,IAAlD,CAFA;AAAA,QAGA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAAkC,CAAC,UAAnC,CAA8C,QAA9C,CAHA;AAAA,QAIA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAJ3B;AAAA,QAKA,QAAQ,CAAC,WAAT,CAAqB,UAAU,CAAC,CAAhC,CALA;AAAA,QAMA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,UAA5B,CANA;AAAA,QAOA,QAAQ,CAAC,EAAT,CAAa,cAAW,GAAxB,EAA+B,UAA/B,CAPA;eAQA,QAAQ,CAAC,EAAT,CAAa,gBAAa,GAA1B,EAAiC,YAAjC,EAT+B;MAAA,CAAjC,CAzEA;AAAA,MAoFA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,CApFA;AAAA,MAqFA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC,KAAjC,CArFA;aAyFA,KAAK,CAAC,QAAN,CAAe,SAAf,EAA0B,SAAC,GAAD;AACxB,YAAG,QAAO,EAAP,IAAa,QAAO,MAAvB;iBACE,eAAe,KADjB;SAAA;iBAGE,eAAe,MAHjB;SADwB;MAAA,CAA1B,EA3FI;IAAA,CAHD;GAAP,CAF2C;AAAA,CAA7C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,QAArC,EAA+C,SAAC,IAAD,EAAO,KAAP;AAC7C;AAAA,eAAa,CAAb;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAIL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,MAAxB;AAGJ;AAAA,iBAAW,MAAX;AAAA,MACA,aAAa,EADb;AAAA,MAEA,MAAM,WAAW,YAFjB;AAAA,MAGA,YAAY,MAHZ;AAAA,MAOA,UAAU,SAAC,IAAD;AACR;AAAA;aAAA;oCAAA;AACE,4BAAC,OAAM,CAAC,IAAR,CAAa;AAAA,YAAC,MAAM,KAAK,CAAC,SAAN,EAAP;AAAA,YAA0B,OAAO,KAAK,CAAC,cAAN,CAAqB,IAArB,CAAjC;AAAA,YAA6D,OAAU,UAAS,OAAZ,GAAyB;AAAA,cAAC,oBAAmB,KAAK,CAAC,GAAN,CAAU,IAAV,CAApB;aAAzB,GAAmE,MAAvI;WAAb,GADF;AAAA;wBADQ;MAAA,CAPV;AAAA,MAaA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB,EAA6B,IAA7B;AAEL;AAAA,kBAAU,IAAC,UAAD,CAAW,SAAX,CAAqB,CAAC,IAAtB,CAA2B,IAA3B,EAAiC,SAAC,CAAD;iBAAO,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAP;QAAA,CAAjC,CAAV;AAAA,QACA,OAAO,CAAC,KAAR,EAAe,CAAC,MAAhB,CAAuB,QAAvB,CAAgC,CAAC,IAAjC,CAAsC,OAAtC,EAA8C,mBAA9C,CACE,CAAC,KADH,CACS,SADT,EACoB,CADpB,CAEE,CAAC,IAFH,CAEQ,QAAQ,CAAC,OAFjB,CAGE,CAAC,IAHH,CAGQ,SAHR,CADA;AAAA,QAKA,OACE,CAAC,KADH,CACS,MADT,EACiB,SAAC,CAAD;iBAAO,KAAK,CAAC,GAAN,CAAU,CAAV,EAAP;QAAA,CADjB,CAEE,CAAC,UAFH,EAEe,CAAC,QAFhB,CAEyB,OAAO,CAAC,QAFjC,CAGI,CAAC,IAHL,CAGU;AAAA,UACJ,GAAI,SAAC,CAAD;mBAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAP;UAAA,CADA;AAAA,UAEJ,IAAI,SAAC,CAAD;mBAAO,CAAC,CAAC,GAAF,CAAM,CAAN,EAAP;UAAA,CAFA;AAAA,UAGJ,IAAI,SAAC,CAAD;mBAAO,CAAC,CAAC,GAAF,CAAM,CAAN,EAAP;UAAA,CAHA;SAHV,CAQI,CAAC,KARL,CAQW,SARX,EAQsB,CARtB,CALA;eAcA,OAAO,CAAC,IAAR,EACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEI,CAAC,KAFL,CAEW,SAFX,EAEqB,CAFrB,CAEuB,CAAC,MAFxB,GAhBK;MAAA,CAbP;AAAA,MAmCA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,WAAtB,EAAmC;AACjC,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAoB,MAApB,CAAX,CAAb;AAAA,QACA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAFA;AAAA,QAGA,WAAW,MAAM,CAAC,QAAP,EAAiB,CAAC,OAH7B;AAAA,QAIA,YAAY,MAAM,CAAC,QAAP,EAAiB,CAAC,QAJ9B;eAKA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,EANiC;MAAA,CAAnC,CAnCA;aA2CA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,MAAtB,EAA8B,IAA9B,EA9CI;IAAA,CAJD;GAAP,CAF6C;AAAA,CAA/C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,cAArC,EAAqD,SAAC,IAAD,EAAO,KAAP;AAEnD;AAAA,qBAAmB,CAAnB;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,SAFJ;AAAA,IAIL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAEJ;AAAA,YAAO,iBAAa,CAAC,kBAAD,CAApB;AAAA,MAEA,SAAS,IAFT;AAAA,MAGA,eAAe,EAHf;AAAA,MAIA,WAAW,EAJX;AAAA,MAKA,aAAa,EALb;AAAA,MASA,YAAY,SAAC,KAAD,EAAQ,GAAR;AACV;AAAA,YAAI,CAAJ;AACA,eAAM,IAAI,KAAK,CAAC,MAAhB;AACE,cAAG,KAAM,GAAE,CAAC,GAAT,KAAgB,GAAnB;AACE,mBAAO,KAAM,GAAb,CADF;WAAA;AAAA,UAEA,GAFA,CADF;QAAA,CAFU;MAAA,CATZ;AAAA,MAgBA,gBAAgB,SAAC,MAAD,EAAS,IAAT,EAAe,QAAf;AACd;AAAA,YAAI,UAAU,MAAV,EAAkB,IAAlB,CAAJ;AACA,YAAG,CAAH;AACE,cAAI,CAAJ;AACA,iBAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAnB;AACE,gBAAG,CAAC,CAAC,MAAO,GAAE,CAAC,QAAZ,KAAwB,QAA3B;AACE,qBAAO,CAAC,CAAC,MAAO,GAAhB,CADF;aAAA;AAAA,YAEA,GAFA,CADF;UAAA,CAFF;SAFc;MAAA,CAhBhB;AAAA,MAyBA,YAAY,SAAC,GAAD,EAAM,MAAN;AACV;AAAA,eAAO,UAAU,MAAV,EAAkB,GAAlB,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,EAA7C;SAFU;MAAA,CAzBZ;AAAA,MA6BA,YAAY,SAAC,GAAD,EAAM,MAAN;AACV;AAAA,eAAO,UAAU,MAAV,EAAkB,GAAlB,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,MAAO,OAAM,CAAC,MAAP,GAAc,CAAd,CAAgB,CAAC,CAAxB,GAA4B,MAAO,OAAM,CAAC,MAAP,GAAc,CAAd,CAAgB,CAAC,KAAxB,GAAgC,KAAzG;SAFU;MAAA,CA7BZ;AAAA,MAiCA,YAAY,SAAC,IAAD,EAAO,QAAP,EAAiB,MAAjB;AACV;AAAA,eAAO,cAAc,MAAd,EAAsB,IAAtB,EAA4B,QAA5B,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,EAA7C;SAFU;MAAA,CAjCZ;AAAA,MAqCA,YAAY,SAAC,IAAD,EAAO,QAAP,EAAiB,MAAjB;AACV;AAAA,eAAO,cAAc,MAAd,EAAsB,IAAtB,EAA4B,QAA5B,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,UAAU,MAAV,EAAiB,IAAjB,CAAsB,CAAC,MAApE;SAFU;MAAA,CArCZ;AAAA,MA2CA,WAAW,MA3CX;AAAA,MA4CA,aAAa,EA5Cb;AAAA,MA8CA,UAAU,SAAC,IAAD;AACR;AAAA,mBAAW,IAAI,CAAC,MAAM,CAAC,GAAZ,CAAgB,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAC,CAAC,QAAR;AAAA,YAAkB,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAC,CAAC,KAA3B,CAAxB;AAAA,YAA2D,OAAO;AAAA,cAAC,oBAAoB,CAAC,CAAC,KAAvB;aAAlE;YAAP;QAAA,CAAhB,CAAX;AAAA,QACA,IAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EADd;AAAA,QAEA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,IAAI,CAAC,GAA9B,CAFf;eAGA,IAAC,OAAD,GAAU,IAAC,OAAM,CAAC,MAAR,CAAe,QAAf,EAJF;MAAA,CA9CV;AAAA,MAsDA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AAIL;AAAA,uBAAe,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAf;AAAA,QACA,WAAW,CAAC,CAAC,KAAF,CAAQ,IAAR,CADX;AAAA,QAGA,eAAe,KAAK,CAAC,IAAN,CAAW,YAAX,EAAwB,YAAxB,EAAqC,CAArC,CAHf;AAAA,QAIA,aAAa,KAAK,CAAC,IAAN,CAAW,YAAX,EAAyB,YAAzB,EAAuC,EAAvC,CAJb;AAAA,QAKA,eAAe,KAAK,CAAC,IAAN,CAAW,QAAX,EAAqB,QAArB,EAA8B,CAA9B,CALf;AAAA,QAMA,aAAa,KAAK,CAAC,IAAN,CAAW,QAAX,EAAoB,QAApB,EAA6B,EAA7B,CANb;AAAA,QAQA,WAAW,EAAE,CAAC,KAAK,CAAC,OAAT,EAAkB,CAAC,MAAnB,CAA0B,CAAC,CAAC,SAAF,CAAY,IAAZ,CAA1B,CAA4C,CAAC,UAA7C,CAAwD,CAAC,CAAD,EAAG,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,EAAH,CAAxD,EAAmF,GAAnF,CARX;AAAA,QAUA,UAAU,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;AAAO;iBAAA,IAAI;AAAA,YAC5B,KAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,CADwB;AAAA,YACZ,MAAK,CADO;AAAA,YACJ,GAAE,CAAC,CAAC,GAAF,CAAM,CAAN,CADE;AAAA,YACQ,OAAO,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,CAAoB,CAAC,CAAC,KAAF,CAAQ,CAAR,CAApB,CADf;AAAA,YAE5B,QAAQ,YAAY,CAAC,GAAb,CAAiB,SAAC,CAAD;qBAAO;AAAA,gBAAC,UAAU,CAAX;AAAA,gBAAc,OAAM,KAAK,CAAC,KAAN,GAAc,CAAd,CAApB;AAAA,gBAAsC,KAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,CAA1C;AAAA,gBAAsD,OAAO,CAAE,GAA/D;AAAA,gBAAmE,GAAE,SAAS,CAAT,CAArE;AAAA,gBAAkF,GAAG,CAAC,CAAC,KAAF,GAAU,CAAE,GAAZ,CAArF;AAAA,gBAAsG,QAAO,CAAC,CAAC,KAAF,GAAU,CAAV,IAAe,CAAC,CAAC,KAAF,GAAU,CAAE,GAAZ,CAA5H;AAAA,gBAA6I,OAAM,QAAQ,CAAC,SAAT,CAAmB,CAAnB,CAAnJ;gBAAP;YAAA,CAAjB,CAFoB;YAAX;QAAA,CAAT,CAVV;AAeA,YAAG,OAAH;AACE,mBAAS,IAAC,UAAD,CAAW,QAAX,CAAT,CADF;SAfA;AAAA,QAkBA,SAAS,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAArB,CAlBT;AAoBA,YAAG,UAAU,CAAC,MAAX,KAAqB,CAAxB;AACE,gBAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CACE,CAAC,IADH,CACQ,OADR,EACiB,OADjB,CACyB,CAAC,IAD1B,CAC+B,QAAQ,CAAC,OADxC,CAEE,CAAC,IAFH,CAEQ,WAFR,EAEoB,SAAC,CAAD;mBAAQ,eAAY,CAAC,CAAC,CAAd,GAAgB,iBAAxB;UAAA,CAFpB,CAGE,CAAC,KAHH,CAGS;AAAA,YAAC,SAAS,CAAV;WAHT,EADF;SAAA;AAOE,gBAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CACE,CAAC,IADH,CACQ,OADR,EACiB,OADjB,CACyB,CAAC,IAD1B,CAC+B,QAAQ,CAAC,OADxC,CAEE,CAAC,IAFH,CAEQ,WAFR,EAEqB,SAAC,CAAD;mBAAO,eAAW,CAAC,UAAU,UAAW,EAAC,CAAC,GAAF,CAArB,EAA6B,UAA7B,CAAD,CAAX,GAAqD,kBAA5D;UAAA,CAFrB,EAPF;SApBA;AAAA,QA+BA,MACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEI,CAAC,IAFL,CAEU,WAFV,EAEsB,SAAC,CAAD;iBAAQ,eAAY,CAAC,CAAC,CAAd,GAAgB,iBAAxB;QAAA,CAFtB,CAGI,CAAC,KAHL,CAGW,SAHX,EAGsB,CAHtB,CA/BA;AAAA,QAoCA,MAAM,CAAC,IAAP,EACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEI,CAAC,IAFL,CAEU,WAFV,EAEsB,SAAC,CAAD;AAChB;iBACC,eAAW,CAAC,UAAU,YAAa,EAAC,CAAC,GAAF,CAAvB,EAA+B,OAA/B,CAAD,CAAX,GAAoD,GAApD,GAAsD,CAAC,CAAC,CAAC,KAAF,GAAU,CAAV,CAAD,CAAtD,GAAoE,eAFrD;QAAA,CAFtB,CAKI,CAAC,MALL,EApCA;AAAA,QA2CA,aAAa,CA3Cb;AAAA,QA6CA,OAAO,MAAM,CAAC,SAAP,CAAiB,MAAjB,CACL,CAAC,IADI,CAEH,SAAC,CAAD;iBAAO,CAAC,CAAC,OAAT;QAAA,CAFG,EAGH,SAAC,CAAD;iBAAO,CAAC,CAAC,QAAF,GAAa,GAAb,GAAmB,CAAC,CAAC,IAA5B;QAAA,CAHG,CA7CP;AAmDA,YAAG,UAAU,CAAC,MAAX,KAAqB,CAAxB;AACE,cAAI,CAAC,KAAL,EAAY,CAAC,MAAb,CAAoB,MAApB,CACA,CAAC,IADD,CACM,OADN,EACe,gBADf,EADF;SAAA;AAIE,cAAI,CAAC,KAAL,EAAY,CAAC,MAAb,CAAoB,MAApB,CACE,CAAC,IADH,CACQ,OADR,EACiB,gBADjB,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEa,SAAC,CAAD;mBAAO,UAAU,CAAC,CAAC,GAAZ,EAAiB,UAAW,EAAC,CAAC,QAAF,CAA5B,EAAyC,UAAzC,EAAP;UAAA,CAFb,CAGE,CAAC,IAHH,CAGQ,OAHR,EAGkB,CAHlB,CAIE,CAAC,IAJH,CAIQ,QAJR,EAIkB,CAJlB,CAKE,CAAC,IALH,CAKQ,GALR,EAKa,CAAC,CAAC,KAAF,GAAU,CAAV,CALb,EAJF;SAnDA;AAAA,QA+DA,IAAI,CAAC,KAAL,CAAW,MAAX,EAAmB,SAAC,CAAD;iBAAO,KAAK,CAAC,KAAN,GAAc,CAAC,CAAC,QAAhB,EAAP;QAAA,CAAnB,CAAoD,CAAC,UAArD,EAAiE,CAAC,QAAlE,CAA2E,OAAO,CAAC,QAAnF,CACE,CAAC,IADH,CACQ,OADR,EACiB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CADjB,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEa,SAAC,CAAD;iBAAO,CAAC,CAAC,EAAT;QAAA,CAFb,CAGE,CAAC,IAHH,CAGQ,GAHR,EAGa,SAAC,CAAD;iBAAO,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,KAAF,GAAU,CAAV,CAAT,EAAuB,CAAC,CAAC,CAAzB,EAAP;QAAA,CAHb,CAIE,CAAC,IAJH,CAIQ,QAJR,EAIkB,SAAC,CAAD;iBAAO,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,MAAX,EAAP;QAAA,CAJlB,CA/DA;AAAA,QAqEA,IAAI,CAAC,IAAL,EACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEE,CAAC,IAFH,CAEQ,OAFR,EAEgB,CAFhB,CAGE,CAAC,IAHH,CAGQ,QAHR,EAGkB,CAHlB,CAIE,CAAC,IAJH,CAIQ,GAJR,EAIa,SAAC,CAAD;AACT;iBACA,UAAU,CAAC,CAAC,GAAZ,EAAiB,YAAa,EAAC,CAAC,QAAF,CAA9B,EAA2C,OAA3C,EAFS;QAAA,CAJb,CAOE,CAAC,IAPH,CAOQ,GAPR,EAOa,CAAC,CAAC,KAAF,GAAU,CAAV,CAPb,CAQE,CAAC,MARH,EArEA;AAAA,QA+EA,eAAe,YA/Ef;AAAA,QAgFA,aAAa,OAhFb;eAiFA,WAAW,SArFN;MAAA,CAtDP;AAAA,MA+IA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,KAAzB,CAA+B,CAAC,cAAhC,CAA+C,IAA/C,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAFA;AAAA,QAGA,IAAC,WAAD,CAAY,OAAZ,CAHA;AAAA,QAIA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAJ3B;eAKA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,EAN+B;MAAA,CAAjC,CA/IA;AAAA,MAuJA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,CAvJA;aAwJA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC,IAAjC,EA1JI;IAAA,CAJD;GAAP,CAHmD;AAAA,CAArD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,OAArC,EAA8C,SAAC,IAAD,EAAO,KAAP;AAC5C,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,SAFJ;AAAA,IAGL,YAAY,SAAC,MAAD,EAAS,MAAT;AACV;AAAA,WAAK;AAAA,QAAC,WAAW,YAAZ;AAAA,QAA0B,IAAG,KAAK,CAAC,KAAN,EAA7B;OAAL;AAAA,MACA,MAAM,CAAC,IAAP,CAAY,UAAZ,EAAwB,EAAE,CAAC,EAA3B,CADA;AAEA,aAAO,EAAP,CAHU;IAAA,CAHP;AAAA,IAQL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,MAAxB;AAEJ;AAAA,mBAAa,IAAb;AAAA,MAIA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AACL;AAAA,YAAI,CAAC,IAAL,CAAU,qBAAV;AAAA,QAEA,MAAM,CAAC,IAAD,CAFN;AAAA,QAIA,UAAU,CAAC,CAAC,KAAF,EAAS,CAAC,MAAV,EAJV;AAAA,QAKA,cAAc,OAAO,CAAC,IAAR,CAAa,KAAK,CAAC,KAAN,EAAa,CAAC,MAAd,EAAb,CALd;AAAA,QAMA,WAAW,CAAC,OAAZ,CAAoB,OAAQ,GAA5B,CANA;AAAA,QAOA,WAAW,CAAC,IAAZ,CAAiB,OAAQ,GAAzB,CAPA;AAAA,QAQA,SAAS,EART;AASA,aAAS,2GAAT;AACE,gBAAM,CAAC,IAAP,CAAY;AAAA,YAAC,MAAK,YAAa,KAAE,CAAF,CAAnB;AAAA,YAAwB,IAAG,YAAa,GAAxC;WAAZ,EADF;AAAA,SATA;AAAA,QAcA,MAAM,IAAC,UAAD,CAAW,MAAX,CAdN;AAAA,QAeA,MAAM,GAAG,CAAC,IAAJ,CAAS,MAAT,EAAiB,SAAC,CAAD,EAAI,CAAJ;iBAAU,EAAV;QAAA,CAAjB,CAfN;AAgBA,YAAG,UAAH;AACE,aAAG,CAAC,KAAJ,EAAW,CAAC,MAAZ,CAAmB,MAAnB,CAA0B,CAAC,IAA3B,CAAgC,OAAhC,EAAyC,KAAzC,CACE,CAAC,IADH,CACQ,GADR,EACa,CADb,CACe,CAAC,IADhB,CACqB,OADrB,EAC8B,EAD9B,CAEE,CAAC,KAFH,CAES,SAFT,EAEoB,CAFpB,EADF;SAAA;AAKE,aAAG,CAAC,KAAJ,EAAW,CAAC,MAAZ,CAAmB,MAAnB,CAA0B,CAAC,IAA3B,CAAgC,OAAhC,EAAyC,KAAzC,CACE,CAAC,IADH,CACQ,GADR,EACa,CADb,CACe,CAAC,IADhB,CACqB,OADrB,EAC8B,EAD9B,EALF;SAhBA;AAAA,QAwBA,GAAG,CAAC,UAAJ,EAAgB,CAAC,QAAjB,CAA0B,OAAO,CAAC,QAAlC,CACE,CAAC,IADH,CACQ,QADR,EACiB,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAF,GAAU,CAAV,IAAe,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,EAAF,GAAO,CAAC,CAAC,IAAnB,EAAtB;QAAA,CADjB,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEY,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,EAAZ,EAAP;QAAA,CAFZ,CAGE,CAAC,KAHH,CAGS,MAHT,EAGiB,SAAC,CAAD;iBAAO,KAAK,CAAC,KAAN,GAAc,CAAC,CAAC,IAAhB,EAAP;QAAA,CAHjB,CAIE,CAAC,KAJH,CAIS,SAJT,EAIoB,CAJpB,CAxBA;AAAA,QA8BA,GAAG,CAAC,IAAJ,EAAU,CAAC,MAAX,EA9BA;AAAA,QAkCA,YAAY,SAAC,CAAD;AACV,WAAC,CAAC,MAAF,CAAS,MAAT,CAAgB,CAAC,IAAjB,CAAsB,OAAtB,EAA+B,EAA/B,CAAkC,CAAC,IAAnC,CAAwC,QAAxC,EAAkD,CAAlD,CAAoD,CAAC,KAArD,CAA2D,MAA3D,EAAmE,OAAnE;iBACA,CAAC,CAAC,MAAF,CAAS,QAAT,CAAkB,CAAC,IAAnB,CAAwB,GAAxB,EAA6B,EAA7B,CAAgC,CAAC,IAAjC,CAAsC,IAAtC,EAA4C,EAA5C,CAA+C,CAAC,IAAhD,CAAqD,IAArD,EAA0D,CAA1D,CAA4D,CAAC,KAA7D,CAAmE,QAAnE,EAA6E,OAA7E,EAFU;QAAA,CAlCZ;AAAA,QAsCA,SAAS,IAAC,UAAD,CAAW,SAAX,CAtCT;AAAA,QAuCA,SAAS,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,SAAC,CAAD;iBAAO,SAAP;QAAA,CAAjB,CAvCT;AAAA,QAwCA,MAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CAA0B,CAAC,IAA3B,CAAgC,OAAhC,EAAwC,QAAxC,CAAiD,CAAC,IAAlD,CAAuD,SAAvD,CAxCA;AA0CA,YAAG,UAAH;AACE,gBAAM,CAAC,IAAP,CAAY,WAAZ,EAAyB,SAAC,CAAD;mBAAQ,iBAAa,CAAC,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAZ,CAAD,CAAb,GAAiC,IAAzC;UAAA,CAAzB,CAAqE,CAAC,KAAtE,CAA4E,SAA5E,EAAuF,CAAvF,EADF;SA1CA;AAAA,QA6CA,MACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEI,CAAC,IAFL,CAEU,WAFV,EAEuB,SAAC,CAAD;iBAAQ,iBAAa,CAAC,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAZ,CAAD,CAAb,GAAiC,IAAzC;QAAA,CAFvB,CAGI,CAAC,KAHL,CAGW,MAHX,EAGkB,SAAC,CAAD;iBAAO,KAAK,CAAC,KAAN,GAAc,CAAC,CAAC,KAAhB,EAAP;QAAA,CAHlB,CAGgD,CAAC,KAHjD,CAGuD,SAHvD,EAGkE,CAHlE,CA7CA;eAkDA,aAAa,MAnDR;MAAA,CAJP;AAAA,MA4DA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,WAAtB,EAAmC;AACjC,YAAI,CAAC,cAAL,CAAoB,CAAC,GAAD,EAAM,OAAN,CAApB;eACA,IAAC,QAAD,CAAS,OAAT,CAAiB,CAAC,cAAlB,CAAiC,IAAjC,EAFiC;MAAA,CAAnC,CA5DA;aAgEA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,MAAtB,EAA8B,IAA9B,EAlEI;IAAA,CARD;GAAP,CAD4C;AAAA,CAA9C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,QAArC,EAA+C,SAAC,IAAD,EAAO,KAAP;AAC7C;AAAA,YAAU,CAAV;AAAA,EAEA,YAAY,SAAC,GAAD;AACV;AAAA,QAAG,GAAH;AACE,UAAI,GAAG,CAAC,IAAJ,EAAU,CAAC,OAAX,CAAmB,UAAnB,EAA+B,EAA/B,CAAkC,CAAC,KAAnC,CAAyC,GAAzC,CAA6C,CAAC,GAA9C,CAAkD,SAAC,CAAD;eAAO,CAAC,CAAC,OAAF,CAAU,kBAAV,EAA8B,EAA9B,EAAP;MAAA,CAAlD,CAAJ;AAAA,MACA,IAAI,CAAC,CAAC,GAAF,CAAM,SAAC,CAAD;AAAO,YAAG,MAAM,CAAN,CAAH;iBAAiB,EAAjB;SAAA;iBAAwB,GAAxB;SAAP;MAAA,CAAN,CADJ;AAEO,UAAG,CAAC,CAAC,MAAF,KAAY,CAAf;AAAsB,eAAO,CAAE,GAAT,CAAtB;OAAA;eAAuC,EAAvC;OAHT;KADU;EAAA,CAFZ;AAQA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAGL,OAAO;AAAA,MACL,SAAS,GADJ;AAAA,MAEL,YAAY,GAFP;KAHF;AAAA,IAQL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,MAAxB;AAEJ;AAAA,iBAAW,MAAX;AAAA,MACA,YAAY,MADZ;AAAA,MAEA,aAAa,EAFb;AAAA,MAGA,MAAM,WAAW,SAHjB;AAAA,MAIA,eAAe,EAAE,CAAC,GAAH,EAJf;AAAA,MAMA,SAAS,CANT;AAAA,MAOA,UAAU,CAAC,CAAD,EAAG,CAAH,CAPV;AAAA,MAQA,UAAU,EARV;AAAA,MAYA,UAAU,SAAC,IAAD;AAER;AAAA,cAAM,YAAY,CAAC,GAAb,CAAiB,IAAI,CAAC,UAAW,QAAQ,GAAR,CAAjC,CAAN;eACA,IAAC,OAAM,CAAC,IAAR,CAAa;AAAA,UAAC,MAAK,GAAG,CAAC,EAAV;AAAA,UAAc,OAAM,GAAG,CAAC,GAAxB;SAAb,EAHQ;MAAA,CAZV;AAAA,MAkBA,UAAU,EAlBV;AAAA,MAoBA,cAAc,EAAE,CAAC,GAAG,CAAC,YAAP,EApBd;AAAA,MAqBA,SAAS,CArBT;AAAA,MAsBA,UAAU,CAtBV;AAAA,MAuBA,QAAQ,MAvBR;AAAA,MAwBA,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAP,EACN,CAAC,UADK,CACM,WADN,CAGN,CAAC,EAHK,CAGF,aAHE,EAGa;AACjB,UAAE,CAAC,KAAK,CAAC,WAAW,CAAC,cAArB;eACA,OAAO,CAAC,IAAR,CAAa,GAAb,EAAkB,KAAlB,EAFiB;MAAA,CAHb,CAxBR;AAAA,MA+BA,WAAW,MA/BX;AAAA,MAiCA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AACL;AAAA,iBAAS,OAAO,CAAC,KAAjB;AAAA,QACA,UAAU,OAAO,CAAC,MADlB;AAEA,YAAG,QAAS,IAAK,GAAE,CAAC,cAAR,CAAuB,OAAQ,GAA/B,CAAZ;AACE;yBAAA;AACE,wBAAY,CAAC,GAAb,CAAiB,CAAE,QAAQ,GAAR,CAAnB,EAAgC,CAAhC,EADF;AAAA,WADF;SAFA;AAMA,YAAG,QAAH;AAEE,qBAAW,CAAC,SAAZ,CAAsB,CAAC,SAAO,CAAR,EAAW,UAAQ,CAAnB,CAAtB;AAAA,UACA,UAAU,IAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,CAAC,IAAvB,CAA4B,QAAQ,CAAC,QAArC,EAA+C,SAAC,CAAD;mBAAO,CAAC,CAAC,UAAW,QAAQ,GAAR,EAApB;UAAA,CAA/C,CADV;AAAA,UAEA,OACE,CAAC,KADH,EACU,CAAC,MADX,CACkB,UADlB,CAEI,CAAC,KAFL,CAEW,MAFX,EAEkB,WAFlB,CAE8B,CAAC,KAF/B,CAEqC,QAFrC,EAE+C,UAF/C,CAGI,CAAC,IAHL,CAGU,QAAQ,CAAC,OAHnB,CAII,CAAC,IAJL,CAIU,SAJV,CAKI,CAAC,IALL,CAKU,KALV,CAFA;AAAA,UASA,OACE,CAAC,IADH,CACQ,GADR,EACa,KADb,CAEE,CAAC,KAFH,CAES,MAFT,EAEiB,SAAC,CAAD;AACb;AAAA,kBAAM,YAAY,CAAC,GAAb,CAAiB,CAAC,CAAC,UAAW,QAAQ,GAAR,CAA9B,CAAN;mBACA,KAAK,CAAC,GAAN,CAAU,GAAV,EAFa;UAAA,CAFjB,CATA;iBAgBA,OAAO,CAAC,IAAR,EAAc,CAAC,MAAf,GAlBF;SAPK;MAAA,CAjCP;AAAA,MA8DA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,WAAtB,EAAmC;AACjC,qBAAa,IAAC,UAAD,CAAW,CAAC,OAAD,CAAX,CAAb;eACA,UAAU,CAAC,KAAK,CAAC,cAAjB,CAAgC,IAAhC,EAFiC;MAAA,CAAnC,CA9DA;AAAA,MAkEA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,MAAtB,EAA8B,IAA9B,CAlEA;AAAA,MAmEA,WAAW,MAAM,CAAC,QAAP,EAAiB,CAAC,OAnE7B;AAAA,MAoEA,YAAY,MAAM,CAAC,QAAP,EAAiB,CAAC,QApE9B;AAAA,MAqEA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,CArEA;AAAA,MAyEA,KAAK,CAAC,MAAN,CAAa,YAAb,EAA2B,SAAC,GAAD;AACzB,YAAG,QAAS,MAAZ;AACE,cAAI,CAAC,GAAL,CAAS,2BAAT,EAAsC,GAAtC;AACA,cAAG,EAAE,CAAC,GAAG,CAAC,cAAP,CAAsB,GAAG,CAAC,UAA1B,CAAH;AACE,0BAAc,EAAE,CAAC,GAAI,IAAG,CAAC,UAAJ,CAAP,EAAd;AAAA,YACA,WAAW,CAAC,MAAZ,CAAmB,GAAG,CAAC,MAAvB,CAA8B,CAAC,KAA/B,CAAqC,GAAG,CAAC,KAAzC,CAA+C,CAAC,MAAhD,CAAuD,GAAG,CAAC,MAA3D,CAAkE,CAAC,SAAnE,CAA6E,GAAG,CAAC,SAAjF,CADA;AAAA,YAEA,UAAU,GAAG,CAAC,KAFd;AAGA,gBAAG,WAAW,CAAC,SAAf;AACE,yBAAW,CAAC,SAAZ,CAAsB,GAAG,CAAC,SAA1B,EADF;aAHA;AAAA,YAKA,SAAS,WAAW,CAAC,KAAZ,EALT;AAAA,YAMA,UAAU,WAAW,CAAC,MAAZ,EANV;AAAA,YAOA,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAP,EAAa,CAAC,UAAd,CAAyB,WAAzB,CAPR;AAAA,YAQA,KAAK,CAAC,UAAN,CAAiB,WAAjB,CARA;mBAUA,MAAM,CAAC,SAAP,EAAkB,CAAC,MAAnB,GAXF;WAFF;SADyB;MAAA,CAA3B,EAgBE,IAhBF,CAzEA;aA2FA,KAAK,CAAC,MAAN,CAAa,SAAb,EAAwB,SAAC,GAAD;AACtB,YAAG,QAAS,MAAT,IAAuB,QAAS,EAAnC;AACE,qBAAW,GAAX;iBACA,MAAM,CAAC,SAAP,EAAkB,CAAC,MAAnB,GAFF;SADsB;MAAA,CAAxB,EA7FI;IAAA,CARD;GAAP,CAT6C;AAAA,CAA/C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,gBAArC,EAAuD,SAAC,IAAD;AACrD;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAGL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAEJ;AAAA,kBAAY,EAAZ;AAAA,MACA,UAAU,EADV;AAAA,MAEA,WAAW,MAFX;AAAA,MAGA,eAAe,MAHf;AAAA,MAIA,WAAW,MAJX;AAAA,MAKA,aAAa,EALb;AAAA,MAMA,eAAe,KANf;AAAA,MAOA,SAAS,CAPT;AAAA,MAQA,MAAM,SAAS,UARf;AAAA,MAYA,aAAa,SAAC,GAAD;AACX;AAAA,mBAAW,OAAO,CAAC,GAAR,CAAY,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAC,CAAC,GAAR;AAAA,YAAa,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAC,CAAC,KAAM,KAAI,CAAC,CAAtC,CAAnB;AAAA,YAA6D,OAAM;AAAA,cAAC,oBAAoB,CAAC,CAAC,KAAvB;aAAnE;YAAP;QAAA,CAAZ,CAAX;AAAA,QACA,IAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EADd;AAAA,QAEA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA/C,CAFf;eAGA,IAAC,OAAD,GAAU,IAAC,OAAM,CAAC,MAAR,CAAe,QAAf,EAJC;MAAA,CAZb;AAAA,MAkBA,eAAe,SAAC,GAAD;AACb,mBAAW,IAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,CAAC,IAAzB,CAA8B,OAA9B,EAAuC,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAAvC,CAAX;AAAA,QACA,QAAQ,CAAC,KAAT,EAAgB,CAAC,MAAjB,CAAwB,QAAxB,CACA,CAAC,IADD,CACM,GADN,EACc,YAAH,GAAqB,CAArB,GAA4B,CADvC,CAEA,CAAC,KAFD,CAEO,MAFP,EAEe,SAAC,CAAD;iBAAM,CAAC,CAAC,MAAR;QAAA,CAFf,CAGA,CAAC,KAHD,CAGO,cAHP,EAGuB,GAHvB,CAIA,CAAC,KAJD,CAIO,QAJP,EAIiB,OAJjB,CAKA,CAAC,KALD,CAKO,gBALP,EAKwB,MALxB,CADA;AAAA,QAOA,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAoB,SAAC,CAAD;iBAAO,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,CAAC,CAAC,KAAM,KAAI,CAAC,CAAlC,EAAP;QAAA,CAApB,CAPA;AAAA,QAQA,QAAQ,CAAC,IAAT,EAAe,CAAC,MAAhB,EARA;eASA,IAAI,CAAC,IAAL,CAAU,WAAV,EAAwB,kBAAc,CAAC,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA3C,IAAgD,MAAjD,CAAd,GAAsE,GAA9F,EAVa;MAAA,CAlBf;AAAA,MAgCA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AACL;AAAA,oBAAY,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAZ;AAAA,QACA,UAAU,SAAS,CAAC,GAAV,CAAc;iBAAA,SAAC,GAAD;mBAAS;AAAA,cAAC,KAAI,GAAL;AAAA,cAAU,OAAM,KAAK,CAAC,KAAN,GAAc,GAAd,CAAhB;AAAA,cAAoC,OAAM,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;uBAAM;AAAA,kBAAC,GAAE,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAH;AAAA,kBAAc,GAAE,CAAC,CAAC,UAAF,CAAa,CAAb,EAAgB,GAAhB,CAAhB;kBAAN;cAAA,CAAT,CAA1C;cAAT;UAAA;QAAA,QAAd,CADV;AAAA,QAGA,SAAY,CAAC,CAAC,SAAF,EAAH,GAAsB,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,KAAwB,CAA9C,GAAqD,CAH9D;AAKA,YAAG,QAAH;AAAiB,kBAAQ,CAAC,IAAT,CAAc,IAAd,EAAjB;SALA;AAAA,QAOA,OAAO,EAAE,CAAC,GAAG,CAAC,IAAP,EACP,CAAC,CADM,CACJ,SAAC,CAAD;iBAAS,OAAO,CAAC,KAAR,GAAgB,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAzB;QAAA,CADI,CAEP,CAAC,EAFM,CAEH,SAAC,CAAD;iBAAQ,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAR;QAAA,CAFG,CAGP,CAAC,EAHM,CAGH,SAAC,CAAD;iBAAQ,CAAC,CAAC,KAAF,GAAU,CAAV,EAAR;QAAA,CAHG,CAPP;AAAA,QAYA,SAAS,IAAI,CAAC,SAAL,CAAe,QAAf,CACP,CAAC,IADM,CACD,OADC,EACQ,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CADR,CAZT;AAAA,QAcA,MAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CACE,CAAC,IADH,CACQ,OADR,EACiB,OADjB,CAEE,CAAC,MAFH,CAEU,MAFV,CAGE,CAAC,IAHH,CAGQ,OAHR,EAGgB,MAHhB,CAIE,CAAC,KAJH,CAIS,QAJT,EAImB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CAJnB,CAKE,CAAC,KALH,CAKS,MALT,EAKiB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CALjB,CAME,CAAC,KANH,CAMS,SANT,EAMoB,CANpB,CAOE,CAAC,KAPH,CAOS,gBAPT,EAO2B,MAP3B,CAdA;AAAA,QAsBA,MAAM,CAAC,MAAP,CAAc,OAAd,CACE,CAAC,IADH,CACQ,WADR,EACsB,iBAAa,CAAC,OAAO,CAAC,KAAR,GAAgB,MAAjB,CAAb,GAAqC,cAD3D,CAEE,CAAC,UAFH,EAEe,CAAC,QAFhB,CAEyB,OAAO,CAAC,QAFjC,CAGE,CAAC,IAHH,CAGQ,GAHR,EAGa,SAAC,CAAD;iBAAO,KAAK,CAAC,CAAC,KAAP,EAAP;QAAA,CAHb,CAIE,CAAC,KAJH,CAIS,SAJT,EAIoB,GAJpB,CAIwB,CAAC,KAJzB,CAI+B,gBAJ/B,EAIiD,MAJjD,CAtBA;eA2BA,MAAM,CAAC,IAAP,EAAa,CAAC,UAAd,EAA0B,CAAC,QAA3B,CAAoC,OAAO,CAAC,QAA5C,CACE,CAAC,KADH,CACS,SADT,EACoB,CADpB,CAEE,CAAC,MAFH,GA5BK;MAAA,CAhCP;AAAA,MAkEA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,WAAD,CAAY,OAAZ,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,QAAzB,CAAkC,CAAC,cAAnC,CAAkD,IAAlD,CAFA;AAAA,QAGA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAAkC,CAAC,UAAnC,CAA8C,QAA9C,CAHA;AAAA,QAIA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAJ3B;AAAA,QAKA,QAAQ,CAAC,WAAT,CAAqB,UAAU,CAAC,CAAhC,CALA;AAAA,QAMA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,UAA5B,CANA;AAAA,QAOA,QAAQ,CAAC,EAAT,CAAa,cAAW,GAAxB,EAA+B,UAA/B,CAPA;eAQA,QAAQ,CAAC,EAAT,CAAa,gBAAa,GAA1B,EAAiC,YAAjC,EAT+B;MAAA,CAAjC,CAlEA;AAAA,MA6EA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,CA7EA;aAiFA,KAAK,CAAC,QAAN,CAAe,SAAf,EAA0B,SAAC,GAAD;AACxB,YAAG,QAAO,EAAP,IAAa,QAAO,MAAvB;iBACE,eAAe,KADjB;SAAA;iBAGE,eAAe,MAHjB;SADwB;MAAA,CAA1B,EAnFI;IAAA,CAHD;GAAP,CAFqD;AAAA,CAAvD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,wBAArC,EAA+D,SAAC,IAAD,EAAO,KAAP;AAE7D;AAAA,sBAAoB,CAApB;AAEA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,SAFJ;AAAA,IAIL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAEJ;AAAA,YAAO,kBAAc,CAAC,mBAAD,CAArB;AAAA,MAEA,SAAS,IAFT;AAAA,MAGA,eAAe,EAHf;AAAA,MAIA,WAAW,EAJX;AAAA,MAKA,aAAa,EALb;AAAA,MASA,YAAY,SAAC,KAAD,EAAQ,GAAR;AACV;AAAA,YAAI,CAAJ;AACA,eAAM,IAAI,KAAK,CAAC,MAAhB;AACE,cAAG,KAAM,GAAE,CAAC,GAAT,KAAgB,GAAnB;AACE,mBAAO,KAAM,GAAb,CADF;WAAA;AAAA,UAEA,GAFA,CADF;QAAA,CAFU;MAAA,CATZ;AAAA,MAgBA,gBAAgB,SAAC,MAAD,EAAS,IAAT,EAAe,QAAf;AACd;AAAA,YAAI,UAAU,MAAV,EAAkB,IAAlB,CAAJ;AACA,YAAG,CAAH;AACE,cAAI,CAAJ;AACA,iBAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAnB;AACE,gBAAG,CAAC,CAAC,MAAO,GAAE,CAAC,QAAZ,KAAwB,QAA3B;AACE,qBAAO,CAAC,CAAC,MAAO,GAAhB,CADF;aAAA;AAAA,YAEA,GAFA,CADF;UAAA,CAFF;SAFc;MAAA,CAhBhB;AAAA,MAyBA,YAAY,SAAC,GAAD,EAAM,MAAN;AACV;AAAA,eAAO,UAAU,MAAV,EAAkB,GAAlB,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,EAA7C;SAFU;MAAA,CAzBZ;AAAA,MA6BA,YAAY,SAAC,GAAD,EAAM,MAAN;AACV;AAAA,eAAO,UAAU,MAAV,EAAkB,GAAlB,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,MAAO,OAAM,CAAC,MAAP,GAAc,CAAd,CAAgB,CAAC,CAAxB,GAA4B,MAAO,OAAM,CAAC,MAAP,GAAc,CAAd,CAAgB,CAAC,KAAxB,GAAgC,KAAzG;SAFU;MAAA,CA7BZ;AAAA,MAiCA,YAAY,SAAC,IAAD,EAAO,QAAP,EAAiB,MAAjB;AACV;AAAA,eAAO,cAAc,MAAd,EAAsB,IAAtB,EAA4B,QAA5B,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,EAA7C;SAFU;MAAA,CAjCZ;AAAA,MAqCA,YAAY,SAAC,IAAD,EAAO,QAAP,EAAiB,MAAjB;AACV;AAAA,eAAO,cAAc,MAAd,EAAsB,IAAtB,EAA4B,QAA5B,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,MAAO,OAAM,CAAC,MAAP,GAAc,CAAd,CAAgB,CAAC,CAAxB,GAA4B,MAAO,OAAM,CAAC,MAAP,GAAc,CAAd,CAAgB,CAAC,KAAxB,GAAgC,KAAzG;SAFU;MAAA,CArCZ;AAAA,MA4CA,WAAW,MA5CX;AAAA,MA6CA,aAAa,EA7Cb;AAAA,MA+CA,UAAU,SAAC,IAAD;AACR;AAAA,mBAAW,IAAI,CAAC,MAAM,CAAC,GAAZ,CAAgB,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAC,CAAC,QAAR;AAAA,YAAkB,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAC,CAAC,KAA3B,CAAxB;AAAA,YAA2D,OAAO;AAAA,cAAC,oBAAoB,CAAC,CAAC,KAAvB;aAAlE;YAAP;QAAA,CAAhB,CAAX;AAAA,QACA,IAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EADd;AAAA,QAEA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,IAAI,CAAC,GAA9B,CAFf;eAGA,IAAC,OAAD,GAAU,IAAC,OAAM,CAAC,MAAR,CAAe,QAAf,EAJF;MAAA,CA/CV;AAAA,MAuDA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AAIL;AAAA,uBAAe,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAf;AAAA,QACA,WAAW,CAAC,CAAC,KAAF,CAAQ,IAAR,CADX;AAAA,QAQA,WAAW,EAAE,CAAC,KAAK,CAAC,OAAT,EAAkB,CAAC,MAAnB,CAA0B,CAAC,CAAC,SAAF,CAAY,IAAZ,CAA1B,CAA4C,CAAC,UAA7C,CAAwD,CAAC,CAAD,EAAG,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,EAAH,CAAxD,EAAmF,GAAnF,CARX;AAAA,QAUA,UAAU,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;AAAO;iBAAA,IAAI;AAAA,YAC5B,KAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,CADwB;AAAA,YACZ,MAAK,CADO;AAAA,YACJ,GAAE,CAAC,CAAC,GAAF,CAAM,CAAN,CADE;AAAA,YACQ,OAAO,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,CAAoB,CAAC,CAAC,KAAF,CAAQ,CAAR,CAApB,CADf;AAAA,YAE5B,QAAQ,YAAY,CAAC,GAAb,CAAiB,SAAC,CAAD;qBAAO;AAAA,gBAAC,UAAU,CAAX;AAAA,gBAAc,OAAM,KAAK,CAAC,KAAN,GAAc,CAAd,CAApB;AAAA,gBAAsC,KAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,CAA1C;AAAA,gBAAsD,OAAO,CAAE,GAA/D;AAAA,gBAAmE,GAAE,SAAS,CAAT,CAArE;AAAA,gBAAkF,GAAG,CAAC,CAAC,KAAF,GAAU,CAAE,GAAZ,CAArF;AAAA,gBAAsG,OAAM,CAAC,CAAC,KAAF,GAAU,CAAV,IAAe,CAAC,CAAC,KAAF,GAAU,CAAE,GAAZ,CAA3H;AAAA,gBAA4I,QAAO,QAAQ,CAAC,SAAT,CAAmB,CAAnB,CAAnJ;gBAAP;YAAA,CAAjB,CAFoB;YAAX;QAAA,CAAT,CAVV;AAeA,YAAG,OAAH;AACE,mBAAS,IAAC,UAAD,CAAW,QAAX,CAAT,CADF;SAfA;AAAA,QAkBA,SAAS,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAArB,CAlBT;AAoBA,YAAG,UAAU,CAAC,MAAX,KAAqB,CAAxB;AACE,gBAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CACE,CAAC,IADH,CACQ,OADR,EACiB,OADjB,CACyB,CAAC,IAD1B,CAC+B,QAAQ,CAAC,OADxC,CAEE,CAAC,IAFH,CAEQ,WAFR,EAEoB,SAAC,CAAD;mBAAQ,iBAAc,CAAC,CAAC,CAAhB,GAAkB,eAA1B;UAAA,CAFpB,CAGE,CAAC,KAHH,CAGS;AAAA,YAAC,SAAS,CAAV;WAHT,EADF;SApBA;AAyBA;AAAA;;;;;WAzBA;AAAA,QA+BA,MACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEI,CAAC,IAFL,CAEU,WAFV,EAEsB,SAAC,CAAD;iBAAQ,kBAAe,CAAC,CAAC,CAAjB,GAAmB,eAA3B;QAAA,CAFtB,CAGI,CAAC,KAHL,CAGW,SAHX,EAGsB,CAHtB,CA/BA;AAmCA;AAAA;;;;;WAnCA;AAAA,QAyCA,aAAa,CAzCb;AAAA,QA2CA,OAAO,MAAM,CAAC,SAAP,CAAiB,MAAjB,CACL,CAAC,IADI,CAEH,SAAC,CAAD;iBAAO,CAAC,CAAC,OAAT;QAAA,CAFG,EAGH,SAAC,CAAD;iBAAO,CAAC,CAAC,QAAF,GAAa,GAAb,GAAmB,CAAC,CAAC,IAA5B;QAAA,CAHG,CA3CP;AAiDA,YAAG,UAAU,CAAC,MAAX,KAAqB,CAAxB;AACE,cAAI,CAAC,KAAL,EAAY,CAAC,MAAb,CAAoB,MAApB,CACA,CAAC,IADD,CACM,OADN,EACe,KADf,EADF;SAjDA;AAoDA;AAAA;;;;;;;;WApDA;eA8DA,IAAI,CAAC,KAAL,CAAW,MAAX,EAAmB,SAAC,CAAD;iBAAO,KAAK,CAAC,KAAN,GAAc,CAAC,CAAC,QAAhB,EAAP;QAAA,CAAnB,CAAoD,CAAC,UAArD,EAAiE,CAAC,QAAlE,CAA2E,OAAO,CAAC,QAAnF,CACE,CAAC,IADH,CACQ,OADR,EACiB,SAAC,CAAD;iBAAO,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,KAAX,EAAP;QAAA,CADjB,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEa,SAAC,CAAD;iBAAO,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,KAAF,GAAU,CAAV,CAAT,EAAuB,CAAC,CAAC,CAAzB,EAAP;QAAA,CAFb,CAGE,CAAC,IAHH,CAGQ,GAHR,EAGa,SAAC,CAAD;iBAAO,CAAC,CAAC,EAAT;QAAA,CAHb,CAIE,CAAC,IAJH,CAIQ,QAJR,EAIkB,SAAC,CAAD;iBAAO,CAAC,CAAC,OAAT;QAAA,CAJlB,EA9DA;AAmEA;AAAA;;;;;;;;;;;;WAvEK;MAAA,CAvDP;AAAA,MA6IA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,KAAzB,CAA+B,CAAC,cAAhC,CAA+C,IAA/C,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAFA;AAAA,QAGA,IAAC,WAAD,CAAY,OAAZ,CAHA;AAAA,QAIA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAJ3B;eAKA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,EAN+B;MAAA,CAAjC,CA7IA;aAqJA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,EAvJI;IAAA,CAJD;GAAP,CAJ6D;AAAA,CAA/D;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,gBAArC,EAAuD,SAAC,IAAD;AACrD;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAGL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAEJ;AAAA,kBAAY,EAAZ;AAAA,MACA,UAAU,EADV;AAAA,MAEA,WAAW,MAFX;AAAA,MAGA,eAAe,MAHf;AAAA,MAIA,WAAW,MAJX;AAAA,MAKA,eAAe,KALf;AAAA,MAMA,aAAa,EANb;AAAA,MAOA,SAAS,CAPT;AAAA,MAQA,MAAM,SAAS,UARf;AAAA,MAUA,WAAW,SAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,IAVX;AAAA,MAcA,UAAU,SAAC,GAAD,EAAM,KAAN,EAAa,KAAb;AACR;AAAA,mBAAW,EAAE,CAAC,MAAH,CAAU,KAAV,CAAX;AAAA,QACA,aAAa,QAAQ,CAAC,IAAT,CAAc,OAAd,CADb;AAAA,QAEA,SAAS,EAAE,CAAC,MAAH,CAAU,KAAK,CAAC,aAAhB,CAFT;AAAA,QAGA,eAAe,MAAM,CAAC,MAAP,CAAc,GAAd,CAHf;AAAA,QAIA,YAAY,CAAC,MAAb,CAAoB,MAApB,CAA2B,CAAC,IAA5B,CAAiC;AAAA,UAAC,IAAG,CAAJ;AAAA,UAAO,IAAG,UAAV;SAAjC,CAAuD,CAAC,KAAxD,CAA8D;AAAA,UAAC,kBAAiB,MAAlB;AAAA,UAA0B,QAAO,WAAjC;AAAA,UAA8C,gBAAe,CAA7D;SAA9D,CAJA;AAAA,QAKA,WAAW,YAAY,CAAC,SAAb,CAAuB,QAAvB,CAAgC,CAAC,IAAjC,CAAsC,OAAtC,EAA8C,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAA9C,CALX;AAAA,QAMA,QAAQ,CAAC,KAAT,EAAgB,CAAC,MAAjB,CAAwB,QAAxB,CAAiC,CAAC,IAAlC,CAAuC,GAAvC,EAA4C,CAA5C,CAA8C,CAAC,IAA/C,CAAoD,MAApD,EAA4D,SAAC,CAAD;iBAAM,CAAC,CAAC,MAAR;QAAA,CAA5D,CAA0E,CAAC,IAA3E,CAAgF,cAAhF,EAAgG,GAAhG,CAAoG,CAAC,IAArG,CAA0G,QAA1G,EAAoH,OAApH,CAA4H,CAAC,KAA7H,CAAmI,gBAAnI,EAAoJ,MAApJ,CANA;eAQA,YAAY,CAAC,IAAb,CAAkB,WAAlB,EAAgC,iBAAa,CAAC,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA3C,IAA8C,MAA/C,CAAb,GAAmE,GAAnG,EATQ;MAAA,CAdV;AAAA,MAyBA,aAAa,SAAC,GAAD;AACX;AAAA,mBAAW,OAAO,CAAC,GAAR,CAAY,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAC,CAAC,GAAR;AAAA,YAAa,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAC,CAAC,KAAM,KAAI,CAAC,CAAtC,CAAnB;AAAA,YAA6D,OAAM;AAAA,cAAC,oBAAoB,CAAC,CAAC,KAAvB;aAAnE;YAAP;QAAA,CAAZ,CAAX;AAAA,QACA,IAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EADd;AAAA,QAEA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA/C,CAFf;eAGA,IAAC,OAAD,GAAU,IAAC,OAAM,CAAC,MAAR,CAAe,QAAf,EAJC;MAAA,CAzBb;AAAA,MA+BA,eAAe,SAAC,GAAD;AACb,mBAAW,IAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,CAAC,IAAzB,CAA8B,OAA9B,EAAuC,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAAvC,CAAX;AAAA,QACA,QAAQ,CAAC,KAAT,EAAgB,CAAC,MAAjB,CAAwB,QAAxB,CACA,CAAC,IADD,CACM,GADN,EACc,YAAH,GAAqB,CAArB,GAA4B,CADvC,CAEA,CAAC,KAFD,CAEO,MAFP,EAEe,SAAC,CAAD;iBAAM,CAAC,CAAC,MAAR;QAAA,CAFf,CAGA,CAAC,KAHD,CAGO,cAHP,EAGuB,GAHvB,CAIA,CAAC,KAJD,CAIO,QAJP,EAIiB,OAJjB,CAKA,CAAC,KALD,CAKO,gBALP,EAKwB,MALxB,CADA;AAAA,QAOA,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAoB,SAAC,CAAD;iBAAO,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,CAAC,CAAC,KAAM,KAAI,CAAC,CAAlC,EAAP;QAAA,CAApB,CAPA;AAAA,QAQA,QAAQ,CAAC,IAAT,EAAe,CAAC,MAAhB,EARA;eASA,IAAI,CAAC,IAAL,CAAU,WAAV,EAAwB,iBAAa,CAAC,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA3C,IAAgD,MAAjD,CAAb,GAAqE,GAA7F,EAVa;MAAA,CA/Bf;AAAA,MA4CA,aAAa,SAAC,OAAD,EAAU,OAAV;AACX,mBAAW,OAAX;AAAA,QACA,QAAQ,OAAR,CADA;AAAA,QAEA,OAAO,CAAC,YAAR,CAAqB,IAArB,CAFA;AAAA,QAGA,OAAO,CAAC,aAAR,CAAsB,IAAtB,CAHA;AAAA,QAIA,OAAO,CAAC,EAAR,CAAY,UAAO,GAAnB,EAA0B,MAA1B,CAJA;AAAA,QAKA,OAAO,CAAC,EAAR,CAAY,WAAQ,GAApB,EAA2B,OAA3B,CALA;eAMA,OAAO,CAAC,EAAR,CAAY,WAAQ,GAApB,EAA2B,OAA3B,EAPW;MAAA,CA5Cb;AAAA,MAsDA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AACL;AAAA,oBAAY,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAZ;AAAA,QACA,UAAU,SAAS,CAAC,GAAV,CAAc;iBAAA,SAAC,GAAD;mBAAS;AAAA,cAAC,KAAI,GAAL;AAAA,cAAU,OAAM,KAAK,CAAC,KAAN,GAAc,GAAd,CAAhB;AAAA,cAAoC,OAAM,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;uBAAM;AAAA,kBAAC,GAAE,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAH;AAAA,kBAAc,GAAE,CAAC,CAAC,UAAF,CAAa,CAAb,EAAgB,GAAhB,CAAhB;kBAAN;cAAA,CAAT,CAA1C;cAAT;UAAA;QAAA,QAAd,CADV;AAAA,QAGA,SAAY,CAAC,CAAC,SAAF,EAAH,GAAsB,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,KAAwB,CAA9C,GAAqD,CAH9D;AAKA,YAAG,QAAH;AAAiB,kBAAQ,CAAC,IAAT,CAAc,IAAd,EAAjB;SALA;AAAA,QAOA,OAAO,EAAE,CAAC,GAAG,CAAC,IAAP,EACL,CAAC,CADI,CACF,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAP;QAAA,CADE,CAEL,CAAC,CAFI,CAEF,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAP;QAAA,CAFE,CAPP;AAAA,QAWA,SAAS,IAAI,CAAC,SAAL,CAAe,QAAf,CACP,CAAC,IADM,CACD,OADC,EACQ,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CADR,CAXT;AAAA,QAaA,MAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CACE,CAAC,IADH,CACQ,OADR,EACiB,OADjB,CAEE,CAAC,MAFH,CAEU,MAFV,CAGE,CAAC,IAHH,CAGQ,OAHR,EAGgB,MAHhB,CAIE,CAAC,KAJH,CAIS,QAJT,EAImB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CAJnB,CAKE,CAAC,KALH,CAKS,SALT,EAKoB,CALpB,CAME,CAAC,KANH,CAMS,gBANT,EAM2B,MAN3B,CAbA;AAAA,QAoBA,MAAM,CAAC,MAAP,CAAc,OAAd,CACE,CAAC,IADH,CACQ,WADR,EACsB,iBAAc,MAAd,GAAqB,GAD3C,CAEE,CAAC,UAFH,EAEe,CAAC,QAFhB,CAEyB,OAAO,CAAC,QAFjC,CAGI,CAAC,IAHL,CAGU,GAHV,EAGe,SAAC,CAAD;iBAAO,KAAK,CAAC,CAAC,KAAP,EAAP;QAAA,CAHf,CAII,CAAC,KAJL,CAIW,SAJX,EAIsB,CAJtB,CAIwB,CAAC,KAJzB,CAI+B,gBAJ/B,EAIiD,MAJjD,CApBA;eAyBA,MAAM,CAAC,IAAP,EAAa,CAAC,UAAd,EAA0B,CAAC,QAA3B,CAAoC,OAAO,CAAC,QAA5C,CACE,CAAC,KADH,CACS,SADT,EACoB,CADpB,CAEE,CAAC,MAFH,GA1BK;MAAA,CAtDP;AAAA,MAsFA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,WAAD,CAAY,OAAZ,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,QAAzB,CAAkC,CAAC,cAAnC,CAAkD,IAAlD,CAFA;AAAA,QAGA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAAkC,CAAC,UAAnC,CAA8C,QAA9C,CAHA;AAAA,QAIA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAJ3B;AAAA,QAKA,QAAQ,CAAC,WAAT,CAAqB,UAAU,CAAC,CAAhC,CALA;AAAA,QAMA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,UAA5B,CANA;AAAA,QAOA,QAAQ,CAAC,EAAT,CAAa,cAAW,GAAxB,EAA+B,UAA/B,CAPA;eAQA,QAAQ,CAAC,EAAT,CAAa,gBAAa,GAA1B,EAAiC,YAAjC,EAT+B;MAAA,CAAjC,CAtFA;AAAA,MAiGA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,CAjGA;aAqGA,KAAK,CAAC,QAAN,CAAe,SAAf,EAA0B,SAAC,GAAD;AACxB,YAAG,QAAO,EAAP,IAAa,QAAO,MAAvB;iBACE,eAAe,KADjB;SAAA;iBAGE,eAAe,MAHjB;SADwB;MAAA,CAA1B,EAvGI;IAAA,CAHD;GAAP,CAFqD;AAAA,CAAvD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,MAArC,EAA6C,SAAC,IAAD,EAAO,QAAP,EAAiB,KAAjB,EAAwB,MAAxB;AAC3C;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAGL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAEJ;AAAA,mBAAa,EAAb;AAAA,MACA,UAAU,EADV;AAAA,MAEA,kBAAkB,CAFlB;AAAA,MAIA,WAAW,MAJX;AAAA,MAKA,eAAe,MALf;AAAA,MAMA,WAAW,MANX;AAAA,MAOA,eAAe,KAPf;AAAA,MAQA,aAAa,EARb;AAAA,MASA,SAAS,CATT;AAAA,MAUA,MAAM,SAAS,UAVf;AAAA,MAWA,OAAO,MAXP;AAAA,MAYA,UAAU,MAZV;AAAA,MAiBA,aAAa,SAAC,GAAD;AACX;AAAA,mBAAW,OAAO,CAAC,GAAR,CAAY,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAC,CAAC,GAAR;AAAA,YAAa,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAC,CAAC,KAAM,KAAI,CAAC,CAAtC,CAAnB;AAAA,YAA6D,OAAM;AAAA,cAAC,oBAAoB,CAAC,CAAC,KAAvB;aAAnE;YAAP;QAAA,CAAZ,CAAX;AAAA,QACA,IAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EADd;AAAA,QAEA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA/C,CAFf;eAGA,IAAC,OAAD,GAAU,IAAC,OAAM,CAAC,MAAR,CAAe,QAAf,EAJC;MAAA,CAjBb;AAAA,MAuBA,eAAe,SAAC,GAAD;AACb,mBAAW,IAAI,CAAC,SAAL,CAAgB,aAAU,GAA1B,CAAgC,CAAC,IAAjC,CAAsC,OAAtC,EAA+C,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAA/C,CAAX;AAAA,QACA,QAAQ,CAAC,KAAT,EAAgB,CAAC,MAAjB,CAAwB,QAAxB,CAAiC,CAAC,IAAlC,CAAuC,OAAvC,EAAgD,YAAS,GAAzD,CACE,CAAC,IADH,CACQ,GADR,EACgB,YAAH,GAAqB,CAArB,GAA4B,CADzC,CAEE,CAAC,KAFH,CAES,MAFT,EAEiB,SAAC,CAAD;iBAAM,CAAC,CAAC,MAAR;QAAA,CAFjB,CAGE,CAAC,KAHH,CAGS,cAHT,EAGyB,GAHzB,CAIE,CAAC,KAJH,CAIS,QAJT,EAImB,OAJnB,CAKE,CAAC,KALH,CAKS,gBALT,EAK0B,MAL1B,CADA;AAAA,QAOA,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAoB,SAAC,CAAD;iBAAO,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,CAAC,CAAC,KAAM,KAAI,CAAC,CAAlC,EAAP;QAAA,CAApB,CAPA;AAAA,QAQA,QAAQ,CAAC,IAAT,EAAe,CAAC,MAAhB,EARA;eASA,IAAI,CAAC,IAAL,CAAU,WAAV,EAAwB,eAAW,CAAC,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,OAAQ,GAAE,CAAC,KAAM,KAAI,CAAC,CAA3C,IAAgD,MAAjD,CAAX,GAAmE,GAA3F,EAVa;MAAA,CAvBf;AAAA,MAqCA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AAEL;AAAA,YAAG,QAAW,CAAC,IAAf;AACE,uBAAa,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAb;AAAA,UACA,UAAU,UAAU,CAAC,GAAX,CAAe,SAAC,GAAD;mBACvB;AAAA,cACE,KAAI,GADN;AAAA,cAEE,OAAM,KAAK,CAAC,KAAN,GAAc,GAAd,CAFR;AAAA,cAGE,OAAO,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;uBACd;AAAA,kBACE,GAAG,CAAC,CAAC,KAAF,CAAQ,CAAR,CADL;AAAA,kBAEE,GAAG,CAAC,CAAC,UAAF,CAAa,CAAb,EAAgB,GAAhB,CAFL;AAAA,kBAGE,OAAO,KAAK,CAAC,KAAN,GAAc,GAAd,CAHT;AAAA,kBAIE,KAAK,GAJP;kBADc;cAAA,CAAT,CAHT;cADuB;UAAA,CAAf,CADV,CADF;SAAA;AAAA,QAgBA,SAAY,CAAC,CAAC,SAAF,EAAH,GAAsB,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,KAAwB,CAA9C,GAAqD,CAhB9D;AAkBA,YAAG,QAAH;AAAiB,kBAAQ,CAAC,IAAT,CAAc,IAAd,EAAjB;SAlBA;AAAA,QAoBA,UAAU,SAAC,KAAD,EAAQ,QAAR;AACR;AAAA,cAAG,YAAH;AACE,gBAAI,KAAK,CAAC,SAAN,CAAgB,SAAhB,CAA0B,CAAC,IAA3B,CACA,SAAC,CAAD;qBAAO,CAAC,CAAC,MAAT;YAAA,CADA,EAEA,SAAC,CAAD;qBAAO,CAAC,CAAC,EAAT;YAAA,CAFA,CAAJ;AAAA,YAIA,CAAC,CAAC,KAAF,EAAS,CAAC,MAAV,CAAiB,QAAjB,CAA0B,CAAC,IAA3B,CAAgC,OAAhC,EAAwC,mBAAxC,CACE,CAAC,IADH,CACQ,GADR,EACa,CADb,CAEE,CAAC,KAFH,CAES,MAFT,EAEiB,SAAC,CAAD;qBAAO,CAAC,CAAC,MAAT;YAAA,CAFjB,CAGE,CAAC,KAHH,CAGS,gBAHT,EAG0B,MAH1B,CAIE,CAAC,KAJH,CAIS,SAJT,EAIoB,eAJpB,CAJA;AAAA,YASA,CAAC,CAAC,UAAF,EAAc,CAAC,QAAf,CAAwB,QAAxB,CACE,CAAC,IADH,CACQ,IADR,EACc,SAAC,CAAD;qBAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAP;YAAA,CADd,CAEE,CAAC,IAFH,CAEQ,IAFR,EAEc,SAAC,CAAD;qBAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,IAAiB,OAAxB;YAAA,CAFd,CAGE,CAAC,KAHH,CAGS,SAHT,EAGoB,CAHpB,CATA;mBAaA,CAAC,CAAC,IAAF,EAAQ,CAAC,UAAT,EAAqB,CAAC,QAAtB,CAA+B,QAA/B,CAAwC,CAAC,KAAzC,CAA+C,SAA/C,EAA0D,CAA1D,CAA4D,CAAC,MAA7D,GAdF;WADQ;QAAA,CApBV;AAAA,QAqCA,OAAO,EAAE,CAAC,GAAG,CAAC,IAAP,EACL,CAAC,CADI,CACF,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAP;QAAA,CADE,CAEL,CAAC,CAFI,CAEF,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAP;QAAA,CAFE,CArCP;AAAA,QAyCA,SAAS,IAAI,CAAC,SAAL,CAAe,QAAf,CACP,CAAC,IADM,CACD,OADC,EACQ,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CADR,CAzCT;AAAA,QA2CA,QAAQ,MAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CAA0B,CAAC,IAA3B,CAAgC,OAAhC,EAAyC,OAAzC,CA3CR;AAAA,QA4CA,KAAK,CAAC,MAAN,CAAa,MAAb,CACE,CAAC,IADH,CACQ,OADR,EACgB,MADhB,CAEE,CAAC,KAFH,CAES,QAFT,EAEmB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CAFnB,CAGE,CAAC,KAHH,CAGS,SAHT,EAGoB,eAHpB,CAIE,CAAC,KAJH,CAIS,gBAJT,EAI2B,MAJ3B,CA5CA;AAAA,QAiDA,MAAM,CAAC,MAAP,CAAc,OAAd,CAAsB,CAAC,IAAvB,CAA4B,WAA5B,EAA0C,eAAY,MAAZ,GAAmB,GAA7D,CAAgE,CAAC,UAAjE,EAA6E,CAAC,QAA9E,CAAuF,OAAO,CAAC,QAA/F,CACE,CAAC,IADH,CACQ,GADR,EACa,SAAC,CAAD;iBAAO,KAAK,CAAC,CAAC,KAAP,EAAP;QAAA,CADb,CAEE,CAAC,KAFH,CAES,SAFT,EAEoB,CAFpB,CAEsB,CAAC,KAFvB,CAE6B,gBAF7B,EAE+C,MAF/C,CAjDA;AAAA,QAqDA,MAAM,CAAC,IAAP,EAAa,CAAC,UAAd,EAA0B,CAAC,QAA3B,CAAoC,OAAO,CAAC,QAA5C,CACE,CAAC,KADH,CACS,SADT,EACoB,CADpB,CAEE,CAAC,MAFH,EArDA;AAAA,QAyDA,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,OAAO,CAAC,QAA7B,CAzDA;eA2DA,kBAAkB,EA7Db;MAAA,CArCP;AAAA,MAoGA,QAAQ,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AACN;AAAA,iBAAS,IAAI,CAAC,SAAL,CAAe,QAAf,CAAT;AAAA,QACA,MAAM,CAAC,MAAP,CAAc,OAAd,CACE,CAAC,IADH,CACQ,GADR,EACa,SAAC,CAAD;iBAAO,KAAK,CAAC,CAAC,KAAP,EAAP;QAAA,CADb,CADA;eAGA,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,CAArB,EAJM;MAAA,CApGR;AAAA,MA4GA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,WAAD,CAAY,OAAZ,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,QAAzB,CAAkC,CAAC,cAAnC,CAAkD,IAAlD,CAFA;AAAA,QAGA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAAkC,CAAC,UAAnC,CAA8C,QAA9C,CAHA;AAAA,QAIA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAJ3B;AAAA,QAKA,QAAQ,CAAC,WAAT,CAAqB,UAAU,CAAC,CAAhC,CALA;AAAA,QAMA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,UAA5B,CANA;AAAA,QAOA,QAAQ,CAAC,EAAT,CAAa,cAAW,GAAxB,EAA+B,UAA/B,CAPA;eAQA,QAAQ,CAAC,EAAT,CAAa,gBAAa,GAA1B,EAAiC,YAAjC,EAT+B;MAAA,CAAjC,CA5GA;AAAA,MAuHA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,CAvHA;AAAA,MAwHA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC,KAAjC,CAxHA;aA4HA,KAAK,CAAC,QAAN,CAAe,SAAf,EAA0B,SAAC,GAAD;AACxB,YAAG,QAAO,EAAP,IAAa,QAAO,MAAvB;iBACE,eAAe,KADjB;SAAA;iBAGE,eAAe,MAHjB;SADwB;MAAA,CAA1B,EA9HI;IAAA,CAHD;GAAP,CAF2C;AAAA,CAA7C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,KAArC,EAA4C,SAAC,IAAD,EAAO,KAAP;AAC1C;AAAA,YAAU,CAAV;AAEA,SAAO;AAAA,IACP,UAAU,IADH;AAAA,IAEP,SAAS,SAFF;AAAA,IAGP,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,MAAxB;AAIJ;AAAA,YAAO,QAAI,CAAC,SAAD,CAAX;AAAA,MAEA,OAAO,IAFP;AAAA,MAGA,UAAU,EAHV;AAAA,MAIA,aAAa,EAJb;AAAA,MAKA,YAAY,MALZ;AAAA,MAMA,WAAW,MANX;AAAA,MAUA,UAAU,SAAC,IAAD;AACR,YAAC,WAAD,GAAc,UAAU,CAAC,KAAK,CAAC,SAAjB,EAAd;AAAA,QACA,IAAC,YAAD,GAAe,UAAU,CAAC,IAAI,CAAC,SAAhB,EADf;eAEA,IAAC,OAAM,CAAC,IAAR,CAAa;AAAA,UAAC,MAAM,UAAU,CAAC,KAAK,CAAC,cAAjB,CAAgC,IAAI,CAAC,IAArC,CAAP;AAAA,UAAmD,OAAO,UAAU,CAAC,IAAI,CAAC,cAAhB,CAA+B,IAAI,CAAC,IAApC,CAA1D;AAAA,UAAqG,OAAM;AAAA,YAAC,oBAAoB,UAAU,CAAC,KAAK,CAAC,GAAjB,CAAqB,IAAI,CAAC,IAA1B,CAArB;WAA3G;SAAb,EAHQ;MAAA,CAVV;AAAA,MAiBA,cAAc,IAjBd;AAAA,MAmBA,OAAO,SAAC,CAAD;AACL,YAAG,WAAH;iBACE,CAAC,CAAC,KAAF,CAAQ,SAAR,EAAmB,CAAnB,EADF;SADK;MAAA,CAnBP;AAAA,MAuBA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB,EAA6B,IAA7B;AAGL;AAAA,YAAG,KAAH;AACE,iBAAO,IAAC,UAAD,CAAW,MAAX,CAAP,CADF;SAAA;AAAA,QAGA,IAAI,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,KAAjB,EAAwB,OAAO,CAAC,MAAhC,IAA0C,CAA1C,GAA8C,EAHlD;AAAA,QAKA,MAAM,EAAE,CAAC,GAAG,CAAC,GAAP,EACJ,CAAC,WADG,CACS,CADT,CAEJ,CAAC,WAFG,CAES,CAFT,CALN;AAAA,QASA,MAAM,EAAE,CAAC,MAAM,CAAC,GAAV,EACJ,CAAC,IADG,CACE,IADF,CAEJ,CAAC,KAFG,CAEG,IAAI,CAAC,KAFR,CATN;AAAA,QAaA,WAAW,SAAC,CAAD;AACT;AAAA,cAAI,EAAE,CAAC,WAAH,CAAe,IAAI,CAAC,QAApB,EAA8B,CAA9B,CAAJ;AAAA,UACA,IAAI,CAAC,QAAL,GAAgB,EAAE,CAAF,CADhB;AAEA,iBAAO,SAAC,CAAD;mBACL,IAAI,EAAE,CAAF,CAAJ,EADK;UAAA,CAAP,CAHS;QAAA,CAbX;AAAA,QAmBA,SAAS,IAAI,CAAC,IAAL,EAnBT;AAAA,QAoBA,SAAS,IAAI,IAAJ,CApBT;AAAA,QAsBA,eAAe,SAAC,CAAD,EAAI,CAAJ,EAAO,IAAP;AAEb;AAAA,mBAAS,KAAK,CAAC,KAAK,CAAC,MAAZ,EAAT;AAAA,UACA,SAAS,MAAM,CAAC,OAAP,CAAe,IAAI,CAAJ,CAAf,CADT;AAAA,UAEA,IAAI,QAAQ,MAAR,EAAgB,MAAhB,EAAwB,IAAxB,CAFJ;AAIA,iBAAO,KAAK,CAAZ,CANa;QAAA,CAtBf;AAAA,QAgCA,eAAe,SAAC,GAAD,EAAM,GAAN;AACb;AAAA;wBAAA;AACE,gBAAG,KAAK,CAAC,KAAN,CAAY,CAAC,CAAC,IAAd,MAAuB,GAA1B;AACE,qBAAO,CAAP,CADF;aADF;AAAA,WADa;QAAA,CAhCf;AAAA,QAqCA,UAAU,SAAC,GAAD,EAAM,CAAN;AACR;AAAA,iBAAO,aAAa,GAAb,EAAkB,MAAlB,CAAP;AACA,cAAG,IAAH;mBAAa;AAAA,cAAC,YAAW,IAAI,CAAC,QAAjB;AAAA,cAA2B,UAAS,IAAI,CAAC,QAAzC;cAAb;WAAA,MAAqE,IAAG,MAAM,CAAC,MAAP,GAAe,CAAlB;mBAAyB;AAAA,cAAC,YAAW,CAAZ;AAAA,cAAe,UAAS,CAAxB;cAAzB;WAAA;mBAAyD,EAAzD;WAF7D;QAAA,CArCV;AAAA,QAyCA,UAAU,SAAC,GAAD,EAAK,CAAL;AACR;AAAA,iBAAO,aAAa,GAAb,EAAkB,MAAlB,CAAP;AACA,cAAG,IAAH;AACE,aAAC,CAAC,UAAF,GAAe,IAAI,CAAC,UAApB;AAAA,YACA,CAAC,CAAC,QAAF,GAAa,IAAI,CAAC,UADlB,CADF;WAAA;AAIE,aAAC,CAAC,UAAF,GAAe,IAAI,CAAC,EAAL,GAAU,CAAzB;AAAA,YACA,CAAC,CAAC,QAAF,GAAa,IAAI,CAAC,EAAL,GAAU,CADvB,CAJF;WADA;AAOA,iBAAO,CAAP,CARQ;QAAA,CAzCV;AAAA,QAmDA,UAAU,KAAK,CAAC,KAAN,CAAY,IAAZ,CAnDV;AAAA,QAqDA,cAAc,KAAK,CAAC,IAAN,CAAW,OAAX,EAAoB,OAApB,EAA6B,CAA7B,CArDd;AAAA,QAsDA,YAAY,KAAK,CAAC,IAAN,CAAW,OAAX,EAAoB,OAApB,EAA6B,EAA7B,CAtDZ;AAAA,QA4DA,OAAO,IACL,CAAC,IADI,CACC,MADD,EACQ,SAAC,CAAD;iBAAO,KAAK,CAAC,KAAN,CAAY,CAAC,CAAC,IAAd,EAAP;QAAA,CADR,CA5DP;AAAA,QA+DA,IAAI,CAAC,KAAL,EAAY,CAAC,MAAb,CAAoB,MAApB,CACE,CAAC,IADH,CACQ,SAAC,CAAD;iBAAO,IAAI,CAAC,QAAL,GAAgB,QAAQ,SAAU,MAAK,CAAC,KAAN,CAAY,CAAC,CAAC,IAAd,EAAlB,EAAwC,CAAxC,EAAvB;QAAA,CADR,CAEE,CAAC,IAFH,CAEQ,OAFR,EAEgB,gBAFhB,CAGE,CAAC,KAHH,CAGS,MAHT,EAGiB,SAAC,CAAD;iBAAQ,KAAK,CAAC,GAAN,CAAU,CAAC,CAAC,IAAZ,EAAR;QAAA,CAHjB,CAIE,CAAC,IAJH,CAIQ,IAJR,CAKE,CAAC,IALH,CAKQ,QAAQ,CAAC,OALjB,CAME,CAAC,IANH,CAMQ,SANR,CA/DA;AAAA,QAuEA,IACE,CAAC,IADH,CACQ,WADR,EACsB,eAAW,CAAC,OAAO,CAAC,KAAR,GAAgB,CAAjB,CAAX,GAA8B,GAA9B,GAAgC,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,CAAhC,GAAoD,GAD1E,CAEE,CAAC,UAFH,EAEe,CAAC,QAFhB,CAEyB,OAAO,CAAC,QAFjC,CAGI,CAAC,KAHL,CAGW,SAHX,EAGsB,CAHtB,CAII,CAAC,SAJL,CAIe,GAJf,EAImB,QAJnB,CAvEA;AAAA,QA6EA,IAAI,CAAC,IAAL,EAAW,CAAC,KAAZ,CAAkB,SAAC,CAAD;iBAAO,QAAQ,WAAY,MAAK,CAAC,KAAN,CAAY,CAAC,CAAC,IAAd,EAApB,EAAyC,CAAzC,EAAP;QAAA,CAAlB,CACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEE,CAAC,SAFH,CAEa,GAFb,EAEiB,QAFjB,CAGA,CAAC,MAHD,EA7EA;AAAA,QAkFA,UAAU,OAlFV;eAmFA,cAAc,MAtFT;MAAA,CAvBP;AAAA,MAiHA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,WAAtB,EAAmC;AACjC,qBAAa,IAAI,CAAC,SAAL,CAAe,CAAC,MAAD,EAAS,OAAT,CAAf,CAAb;AAAA,QACA,WAAW,MAAM,CAAC,QAAP,EAAiB,CAAC,OAD7B;AAAA,QAEA,YAAY,MAAM,CAAC,QAAP,EAAiB,CAAC,QAF9B;eAGA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,EAJiC;MAAA,CAAnC,CAjHA;aAuHA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,MAAtB,EAA8B,IAA9B,EA3HI;IAAA,CAHC;GAAP,CAH0C;AAAA,CAA5C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,SAArC,EAAgD,SAAC,IAAD,EAAO,KAAP;AAC9C;AAAA,eAAa,CAAb;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,SAFJ;AAAA,IAGL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,MAAxB;AAEJ;AAAA,iBAAW,MAAX;AAAA,MACA,YAAY,MADZ;AAAA,MAEA,MAAM,YAAY,YAFlB;AAAA,MAGA,aAAa,EAHb;AAAA,MAKA,UAAU,SAAC,IAAD;AACR;AAAA;aAAA;oCAAA;AACE,4BAAC,OAAM,CAAC,IAAR,CAAa;AAAA,YACX,MAAM,KAAK,CAAC,SAAN,EADK;AAAA,YAEX,OAAO,KAAK,CAAC,cAAN,CAAqB,IAArB,CAFI;AAAA,YAGX,OAAU,UAAS,OAAZ,GAAyB;AAAA,cAAC,oBAAmB,KAAK,CAAC,GAAN,CAAU,IAAV,CAApB;aAAzB,GAAmE,MAH/D;AAAA,YAIX,MAAS,UAAS,OAAZ,GAAyB,EAAE,CAAC,GAAG,CAAC,MAAP,EAAe,CAAC,IAAhB,CAAqB,KAAK,CAAC,GAAN,CAAU,IAAV,CAArB,CAAqC,CAAC,IAAtC,CAA2C,EAA3C,GAAzB,GAA+E,MAJ1E;AAAA,YAKX,SAAU,UAAS,OAAZ,GAAyB,cAAzB,GAA6C,EALzC;WAAb,GADF;AAAA;wBADQ;MAAA,CALV;AAAA,MAiBA,cAAc,IAjBd;AAAA,MAqBA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB,EAA6B,IAA7B,EAAmC,KAAnC;AAEL;AAAA,eAAO,SAAC,CAAD;AACL,cAAG,WAAH;AACE,aAAC,CAAC,KAAF,CAAQ,MAAR,EAAgB,KAAK,CAAC,GAAtB,CACA,CAAC,IADD,CACM,WADN,EACmB,SAAC,CAAD;qBAAO,eAAW,CAAC,CAAC,CAAC,GAAF,CAAM,CAAN,CAAD,CAAX,GAAqB,GAArB,GAAuB,CAAC,CAAC,CAAC,GAAF,CAAM,CAAN,CAAD,CAAvB,GAAiC,IAAxC;YAAA,CADnB,CAC8D,CAAC,KAD/D,CACqE,SADrE,EACgF,CADhF,EADF;WAAA;iBAGA,cAAc,MAJT;QAAA,CAAP;AAAA,QAMA,SAAS,IAAC,UAAD,CAAW,SAAX,CACP,CAAC,IADM,CACD,IADC,CANT;AAAA,QAQA,MAAM,CAAC,KAAP,EACE,CAAC,MADH,CACU,MADV,CACiB,CAAC,IADlB,CACuB,OADvB,EACgC,mBADhC,CAEE,CAAC,IAFH,CAEQ,WAFR,EAEqB,SAAC,CAAD;iBAAO,eAAW,CAAC,CAAC,CAAC,GAAF,CAAM,CAAN,CAAD,CAAX,GAAqB,GAArB,GAAuB,CAAC,CAAC,CAAC,GAAF,CAAM,CAAN,CAAD,CAAvB,GAAiC,IAAxC;QAAA,CAFrB,CAGE,CAAC,IAHH,CAGQ,IAHR,CAIE,CAAC,IAJH,CAIQ,QAAQ,CAAC,OAJjB,CAKE,CAAC,IALH,CAKQ,SALR,CARA;AAAA,QAcA,MACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEa,EAAE,CAAC,GAAG,CAAC,MAAP,EAAe,CAAC,IAAhB,CAAqB,SAAC,CAAD;iBAAO,KAAK,CAAC,GAAN,CAAU,CAAV,EAAP;QAAA,CAArB,CAAyC,CAAC,IAA1C,CAA+C,SAAC,CAAD;iBAAO,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,IAAI,CAAC,GAAL,CAAS,CAAT,EAArB;QAAA,CAA/C,CAFb,CAGE,CAAC,KAHH,CAGS,MAHT,EAGiB,KAAK,CAAC,GAHvB,CAIE,CAAC,IAJH,CAIQ,WAJR,EAIqB,SAAC,CAAD;iBAAO,eAAW,CAAC,CAAC,CAAC,GAAF,CAAM,CAAN,CAAD,CAAX,GAAqB,GAArB,GAAuB,CAAC,CAAC,CAAC,GAAF,CAAM,CAAN,CAAD,CAAvB,GAAiC,IAAxC;QAAA,CAJrB,CAIgE,CAAC,KAJjE,CAIuE,SAJvE,EAIkF,CAJlF,CAdA;eAoBA,MAAM,CAAC,IAAP,EAAa,CAAC,MAAd,GAtBK;MAAA,CArBP;AAAA,MAgDA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,WAAtB,EAAmC;AACjC,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAoB,MAApB,EAA4B,OAA5B,CAAX,CAAb;AAAA,QACA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,QAAzB,CAAkC,CAAC,cAAnC,CAAkD,IAAlD,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAAkC,CAAC,UAAnC,CAA8C,QAA9C,CAFA;AAAA,QAGA,WAAW,MAAM,CAAC,QAAP,EAAiB,CAAC,OAH7B;AAAA,QAIA,YAAY,MAAM,CAAC,QAAP,EAAiB,CAAC,QAJ9B;eAKA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,EANiC;MAAA,CAAnC,CAhDA;aAwDA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,MAAtB,EAA8B,IAA9B,EA1DI;IAAA,CAHD;GAAP,CAF8C;AAAA,CAAhD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,WAArC,EAAkD,SAAC,IAAD,EAAO,KAAP;AAChD;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACP,UAAU,GADH;AAAA,IAEP,SAAS,SAFF;AAAA,IAIP,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAEJ;AAAA,YAAO,cAAU,CAAC,UAAD,CAAjB;AAAA,MAEA,OAAO,IAFP;AAAA,MAGA,YAAY,EAHZ;AAAA,MAIA,UAAU,EAJV;AAAA,MAKA,aAAa,EALb;AAAA,MAMA,YAAY,MANZ;AAAA,MAUA,YAAY,SAAC,GAAD,EAAM,MAAN;AACV;AAAA;yBAAA;AACE,cAAG,CAAC,CAAC,GAAF,KAAS,GAAZ;AACE,mBAAO,CAAP,CADF;WADF;AAAA,SADU;MAAA,CAVZ;AAAA,MAeA,WAAW,SAAC,GAAD,EAAM,MAAN;AACT;AAAA,eAAO,UAAU,GAAV,EAAe,MAAf,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,EAA7C;SAFS;MAAA,CAfX;AAAA,MAmBA,WAAW,SAAC,GAAD,EAAM,MAAN;AACT;AAAA,eAAO,UAAU,GAAV,EAAe,MAAf,CAAP;AACA,YAAG,IAAH;iBAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,KAAnC;SAAA;iBAA6C,MAAO,OAAM,CAAC,MAAP,GAAgB,CAAhB,CAAkB,CAAC,CAA1B,GAA8B,MAAO,OAAM,CAAC,MAAP,GAAgB,CAAhB,CAAkB,CAAC,KAA1B,GAAkC,KAA7G;SAFS;MAAA,CAnBX;AAAA,MA0BA,WAAW,MA1BX;AAAA,MA4BA,UAAU,SAAC,IAAD;AACR,YAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EAAd;AAAA,QACA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,SAAb,EADf;eAEA,IAAC,OAAM,CAAC,IAAR,CAAa;AAAA,UAAC,MAAM,UAAU,CAAC,KAAK,CAAC,cAAjB,CAAgC,IAAI,CAAC,IAArC,CAAP;AAAA,UAAmD,OAAO,UAAU,CAAC,CAAC,CAAC,cAAb,CAA4B,IAAI,CAAC,IAAjC,CAA1D;AAAA,UAAkG,OAAM;AAAA,YAAC,oBAAoB,UAAU,CAAC,KAAK,CAAC,GAAjB,CAAqB,IAAI,CAAC,IAA1B,CAArB;WAAxG;SAAb,EAHQ;MAAA,CA5BV;AAAA,MAmCA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AAEL;AAAA,YAAG,KAAH;AACE,iBAAO,IAAC,UAAD,CAAW,OAAX,CAAP,CADF;SAAA;AAAA,QAIA,SAAS,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAN;AAAA,YAAS,KAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAb;AAAA,YAAyB,OAAM,CAAC,CAAC,KAAF,CAAQ,CAAR,CAA/B;AAAA,YAA2C,GAAE,CAAC,CAAC,GAAF,CAAM,CAAN,CAA7C;AAAA,YAAuD,GAAE,CAAC,CAAC,GAAF,CAAM,CAAN,CAAzD;AAAA,YAAmE,OAAM,KAAK,CAAC,GAAN,CAAU,CAAV,CAAzE;AAAA,YAAuF,OAAM,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,CAAoB,CAAC,CAAC,KAAF,CAAQ,CAAR,CAApB,CAA7F;YAAP;QAAA,CAAT,CAJT;AAAA,QAKA,UAAU,MAAM,CAAC,GAAP,CAAW,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAAX,CALV;AAAA,QAOA,cAAc,KAAK,CAAC,IAAN,CAAW,OAAX,EAAoB,OAApB,EAA6B,CAA7B,CAPd;AAAA,QAQA,YAAY,KAAK,CAAC,IAAN,CAAW,OAAX,EAAoB,OAApB,EAA6B,EAA7B,CARZ;AAAA,QAUA,OAAO,IAAI,CAAC,IAAL,CAAU,MAAV,EAAkB,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAAlB,CAVP;AAYA,YAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACE,cAAI,CAAC,KAAL,EAAY,CAAC,MAAb,CAAoB,MAApB,CACE,CAAC,IADH,CACQ,OADR,EACiB,gBADjB,CAEE,CAAC,KAFH,CAES,SAFT,EAEoB,CAFpB,CAGE,CAAC,IAHH,CAGQ,QAAQ,CAAC,OAHjB,CAIE,CAAC,IAJH,CAIQ,SAJR,EADF;SAAA;AAOE,cAAI,CAAC,KAAL,EAAY,CAAC,MAAb,CAAoB,MAApB,CACE,CAAC,IADH,CACQ,OADR,EACiB,gBADjB,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEa,SAAC,CAAD;mBAAO,SAAS,SAAU,EAAC,CAAC,GAAF,CAAnB,EAA2B,SAA3B,EAAP;UAAA,CAFb,CAGE,CAAC,IAHH,CAGQ,OAHR,EAGiB,CAHjB,CAIE,CAAC,IAJH,CAIQ,QAAQ,CAAC,OAJjB,CAKE,CAAC,IALH,CAKQ,SALR,EAPF;SAZA;AAAA,QA0BA,IAAI,CAAC,KAAL,CAAW,MAAX,EAAmB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CAAnB,CAAkC,CAAC,UAAnC,EAA+C,CAAC,QAAhD,CAAyD,OAAO,CAAC,QAAjE,CACE,CAAC,IADH,CACQ,GADR,EACa,SAAC,CAAD;iBAAO,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,KAAF,GAAU,CAAV,CAAT,EAAuB,CAAC,CAAC,CAAzB,EAAP;QAAA,CADb,CAEE,CAAC,IAFH,CAEQ,OAFR,EAEiB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CAFjB,CAGE,CAAC,IAHH,CAGQ,QAHR,EAGkB,SAAC,CAAD;iBAAO,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,KAAF,GAAU,CAAV,IAAe,CAAC,CAAC,CAA1B,EAAP;QAAA,CAHlB,CAIE,CAAC,IAJH,CAIQ,GAJR,EAIa,SAAC,CAAD;iBAAO,CAAC,CAAC,EAAT;QAAA,CAJb,CAKE,CAAC,KALH,CAKS,SALT,EAKoB,CALpB,CA1BA;AAAA,QAiCA,IAAI,CAAC,IAAL,EACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEa,SAAC,CAAD;iBAAO,SAAS,WAAY,EAAC,CAAC,GAAF,CAArB,EAA6B,MAA7B,EAAP;QAAA,CAFb,CAGE,CAAC,IAHH,CAGQ,OAHR,EAGiB,CAHjB,CAIE,CAAC,MAJH,EAjCA;AAAA,QAuCA,YAAY,MAvCZ;eAwCA,UAAU,QA1CL;MAAA,CAnCP;AAAA,MAiFA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,OAAzB,CAAiC,CAAC,cAAlC,CAAiD,IAAjD,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAFA;AAAA,QAGA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAH3B;AAAA,QAIA,YAAY,IAAI,CAAC,QAAL,EAAe,CAAC,QAJ5B;eAKA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,EAN+B;MAAA,CAAjC,CAjFA;aAyFA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,EA3FI;IAAA,CAJC;GAAP,CAFgD;AAAA,CAAlD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,QAArC,EAA+C,SAAC,IAAD,EAAO,KAAP;AAC7C;AAAA,eAAa,CAAb;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAIL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,MAAxB;AAGJ;AAAA,iBAAW,MAAX;AAAA,MACA,aAAa,EADb;AAAA,MAEA,MAAM,WAAW,YAFjB;AAAA,MAGA,OAAO,EAAE,CAAC,GAAG,CAAC,IAAP,EAHP;AAAA,MAIA,QAAQ,MAJR;AAAA,MAQA,UAAU,SAAC,IAAD;eACR,IAAC,OAAD,GAAU,KAAK,CAAC,GAAN,CAAU,SAAC,CAAD;iBAAQ;AAAA,YAAC,MAAK,UAAU,CAAC,CAAC,CAAC,KAAb,CAAmB,CAAnB,CAAN;AAAA,YAA6B,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAE,MAA3B,CAAnC;AAAA,YAAsE,OAAO;AAAA,cAAC,oBAAmB,UAAU,CAAC,KAAK,CAAC,KAAjB,GAAyB,IAAzB,CAApB;aAA7E;YAAR;QAAA,CAAV,EADF;MAAA,CARV;AAAA,MAaA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AACL;AAAA,gBAAQ,IAAR;AAAA,QACA,IAAI,CAAC,GAAL,CAAS,IAAT,CADA;AAAA,QAGA,UAAU,OAAO,CAAC,KAAR,GAAc,CAHxB;AAAA,QAIA,UAAU,OAAO,CAAC,MAAR,GAAe,CAJzB;AAAA,QAKA,SAAS,EAAE,CAAC,GAAH,CAAO,CAAC,OAAD,EAAU,OAAV,CAAP,IAA6B,GALtC;AAAA,QAMA,WAAW,EANX;AAAA,QAOA,UAAU,IAAI,CAAC,MAPf;AAAA,QAQA,MAAM,IAAI,CAAC,EAAL,GAAU,CAAV,GAAc,OARpB;AAAA,QASA,OAAO,MAAM,OATb;AAAA,QAWA,QAAQ,IAAI,CAAC,MAAL,CAAY,OAAZ,CAXR;AAYA,YAAG,KAAK,CAAC,KAAN,EAAH;AACE,kBAAQ,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,CAAC,IAAjB,CAAsB,OAAtB,EAA+B,MAA/B,CAAR,CADF;SAZA;AAAA,QAeA,QAAQ,CAAC,CAAC,KAAF,EAAS,CAAC,KAAV,CAAgB,CAAC,CAAC,KAAF,EAAhB,CAfR;AAAA,QAgBA,CAAC,CAAC,KAAF,EAAS,CAAC,KAAV,CAAgB,CAAC,MAAD,EAAQ,CAAR,CAAhB,CAhBA;AAAA,QAiBA,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,KAAF,EAAX,CAAqB,CAAC,MAAtB,CAA6B,OAA7B,CAAqC,CAAC,UAAtC,CAAiD,KAAjD,CAAuD,CAAC,UAAxD,CAAmE,CAAC,CAAC,UAAF,EAAnE,CAjBA;AAAA,QAkBA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,CAAC,IAAjB,CAAsB,WAAtB,EAAoC,eAAY,OAAZ,GAAoB,GAApB,GAAsB,CAAC,UAAQ,MAAT,CAAtB,GAAsC,GAA1E,CAlBA;AAAA,QAmBA,CAAC,CAAC,KAAF,EAAS,CAAC,KAAV,CAAgB,CAAC,CAAD,EAAG,MAAH,CAAhB,CAnBA;AAAA,QAqBA,QAAQ,IAAI,CAAC,SAAL,CAAe,WAAf,CAA2B,CAAC,IAA5B,CAAiC,IAAjC,EAAsC,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAT;QAAA,CAAtC,CArBR;AAAA,QAsBA,KAAK,CAAC,KAAN,EACE,CAAC,MADH,CACU,MADV,CACiB,CAAC,IADlB,CACuB,OADvB,EACgC,UADhC,CAEE,CAAC,KAFH,CAES,QAFT,EAEmB,UAFnB,CAtBA;AAAA,QA0BA,KACE,CAAC,IADH,CACQ;AAAA,UAAC,IAAG,CAAJ;AAAA,UAAO,IAAG,CAAV;AAAA,UAAa,IAAG,CAAhB;AAAA,UAAmB,IAAG,MAAtB;SADR,CAEE,CAAC,IAFH,CAEQ,WAFR,EAEoB,SAAC,CAAD,EAAG,CAAH;iBAAU,eAAY,OAAZ,GAAoB,IAApB,GAAwB,OAAxB,GAAgC,UAAhC,GAAyC,CAAC,OAAO,CAAR,CAAzC,GAAmD,IAA7D;QAAA,CAFpB,CA1BA;AAAA,QA8BA,KAAK,CAAC,IAAN,EAAY,CAAC,MAAb,EA9BA;AAAA,QAiCA,WAAW,EAAE,CAAC,GAAG,CAAC,IAAP,EAAa,CAAC,CAAd,CAAgB,SAAC,CAAD;iBAAO,CAAC,CAAC,EAAT;QAAA,CAAhB,CAA2B,CAAC,CAA5B,CAA8B,SAAC,CAAD;iBAAK,CAAC,CAAC,EAAP;QAAA,CAA9B,CAjCX;AAAA,QAkCA,WAAW,IAAI,CAAC,SAAL,CAAe,WAAf,CAA2B,CAAC,IAA5B,CAAiC,KAAjC,CAlCX;AAAA,QAmCA,QAAQ,CAAC,KAAT,EAAgB,CAAC,MAAjB,CAAwB,MAAxB,CAA+B,CAAC,IAAhC,CAAqC,OAArC,EAA8C,UAA9C,CACE,CAAC,KADH,CACS,MADT,EACiB,MADjB,CACwB,CAAC,KADzB,CAC+B,QAD/B,EACyC,WADzC,CAnCA;AAAA,QAsCA,QACE,CAAC,IADH,CACQ,GADR,EACY,SAAC,CAAD;AACR;AAAA,cAAI,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD,EAAI,CAAJ;mBAAU;AAAA,cAAC,GAAE,IAAI,CAAC,GAAL,CAAS,MAAI,CAAb,IAAkB,CAAC,CAAC,KAAF,GAAU,CAAV,CAArB;AAAA,cAAkC,GAAE,IAAI,CAAC,GAAL,CAAS,MAAI,CAAb,IAAkB,CAAC,CAAC,KAAF,GAAU,CAAV,CAAtD;cAAV;UAAA,CAAT,CAAJ;iBACA,SAAS,CAAT,IAAc,IAFN;QAAA,CADZ,CAIE,CAAC,IAJH,CAIQ,WAJR,EAIsB,eAAY,OAAZ,GAAoB,IAApB,GAAwB,OAAxB,GAAgC,GAJtD,CAtCA;AAAA,QA4CA,QAAQ,CAAC,IAAT,EAAe,CAAC,MAAhB,EA5CA;AAAA,QA8CA,aAAa,IAAI,CAAC,SAAL,CAAe,WAAf,CAA2B,CAAC,IAA5B,CAAiC,IAAjC,EAAsC,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAF,CAAQ,CAAR,EAAP;QAAA,CAAtC,CA9Cb;AAAA,QA+CA,UAAU,CAAC,KAAX,EAAkB,CAAC,MAAnB,CAA0B,MAA1B,CACE,CAAC,IADH,CACQ,OADR,EACiB,UADjB,CAEE,CAAC,KAFH,CAES,MAFT,EAEiB,OAFjB,CAGE,CAAC,IAHH,CAGQ,IAHR,EAGc,OAHd,CAIE,CAAC,IAJH,CAIQ,aAJR,EAIuB,QAJvB,CA/CA;AAAA,QAoDA,UACE,CAAC,IADH,CACQ;AAAA,UACF,GAAG,SAAC,CAAD,EAAI,CAAJ;mBAAU,UAAU,IAAI,CAAC,GAAL,CAAS,MAAM,CAAf,IAAoB,CAAC,SAAS,QAAV,EAAxC;UAAA,CADD;AAAA,UAEF,GAAG,SAAC,CAAD,EAAI,CAAJ;mBAAU,UAAU,IAAI,CAAC,GAAL,CAAS,MAAM,CAAf,IAAoB,CAAC,SAAS,QAAV,EAAxC;UAAA,CAFD;SADR,CAKE,CAAC,IALH,CAKQ,SAAC,CAAD;iBAAO,CAAC,CAAC,KAAF,CAAQ,CAAR,EAAP;QAAA,CALR,CApDA;AAAA,QA6DA,WAAW,EAAE,CAAC,GAAG,CAAC,IAAP,EAAa,CAAC,CAAd,CAAgB,SAAC,CAAD;iBAAO,CAAC,CAAC,EAAT;QAAA,CAAhB,CAA2B,CAAC,CAA5B,CAA8B,SAAC,CAAD;iBAAO,CAAC,CAAC,EAAT;QAAA,CAA9B,CA7DX;AAAA,QA+DA,WAAW,IAAI,CAAC,SAAL,CAAe,WAAf,CAA2B,CAAC,IAA5B,CAAiC,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAjC,CA/DX;AAAA,QAgEA,QAAQ,CAAC,KAAT,EAAgB,CAAC,MAAjB,CAAwB,MAAxB,CAA+B,CAAC,IAAhC,CAAqC,OAArC,EAA8C,UAA9C,CACE,CAAC,KADH,CACS;AAAA,UACL,QAAO,SAAC,CAAD;mBAAO,KAAK,CAAC,KAAN,GAAc,CAAd,EAAP;UAAA,CADF;AAAA,UAEL,MAAK,SAAC,CAAD;mBAAO,KAAK,CAAC,KAAN,GAAc,CAAd,EAAP;UAAA,CAFA;AAAA,UAGL,gBAAgB,GAHX;AAAA,UAIL,gBAAgB,CAJX;SADT,CAOE,CAAC,IAPH,CAOQ,QAAQ,CAAC,OAPjB,CAhEA;eAwEA,QAAQ,CAAC,IAAT,CAAc,GAAd,EAAmB,SAAC,CAAD;AACf;AAAA,cAAI,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD,EAAI,CAAJ;mBAAU;AAAA,cAAC,GAAE,IAAI,CAAC,GAAL,CAAS,MAAI,CAAb,IAAkB,CAAC,CAAC,KAAF,GAAU,CAAE,GAAZ,CAArB;AAAA,cAAqC,GAAE,IAAI,CAAC,GAAL,CAAS,MAAI,CAAb,IAAkB,CAAC,CAAC,KAAF,GAAU,CAAE,GAAZ,CAAzD;cAAV;UAAA,CAAT,CAAJ;iBACA,SAAS,CAAT,IAAc,IAFC;QAAA,CAAnB,CAIE,CAAC,IAJH,CAIQ,WAJR,EAIsB,eAAY,OAAZ,GAAoB,IAApB,GAAwB,OAAxB,GAAgC,GAJtD,EAzEK;MAAA,CAbP;AAAA,MA+FA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,WAAtB,EAAmC;AACjC,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,UAAU,CAAC,CAAC,CAAC,UAAb,CAAwB,KAAxB,CADA;AAAA,QAEA,UAAU,CAAC,CAAC,CAAC,cAAb,CAA4B,IAA5B,CAFA;AAAA,QAIA,WAAW,MAAM,CAAC,QAAP,EAAiB,CAAC,OAJ7B;eAKA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,EANiC;MAAA,CAAnC,CA/FA;aAuGA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,MAAtB,EAA8B,IAA9B,EA1GI;IAAA,CAJD;GAAP,CAF6C;AAAA,CAA/C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,aAArC,EAAoD,SAAC,IAAD,EAAO,KAAP;AAClD;AAAA,oBAAkB,CAAlB;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAGL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAEJ;AAAA,cAAQ,EAAE,CAAC,MAAM,CAAC,KAAV,EAAR;AAAA,MACA,SAAS,MADT;AAAA,MAEA,SAAS,IAFT;AAAA,MAGA,eAAe,KAHf;AAAA,MAIA,YAAY,EAJZ;AAAA,MAKA,YAAY,EALZ;AAAA,MAMA,YAAY,EANZ;AAAA,MAOA,YAAY,EAPZ;AAAA,MAQA,eAAe,EARf;AAAA,MASA,OAAO,MATP;AAAA,MAUA,cAAc,EAVd;AAAA,MAWA,YAAY,EAXZ;AAAA,MAYA,WAAW,MAZX;AAAA,MAaA,eAAe,MAbf;AAAA,MAcA,WAAW,MAdX;AAAA,MAeA,aAAa,EAfb;AAAA,MAgBA,SAAS,MAhBT;AAAA,MAiBA,OAAO,CAjBP;AAAA,MAkBA,MAAM,SAAS,iBAlBf;AAAA,MAsBA,aAAa,SAAC,GAAD;AACX;AAAA,mBAAW,SAAS,CAAC,GAAV,CAAc,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAC,CAAC,GAAR;AAAA,YAAa,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAC,CAAC,KAAM,KAAI,CAAC,EAAtC,CAAnB;AAAA,YAA8D,OAAO;AAAA,cAAC,oBAAoB,CAAC,CAAC,KAAvB;aAArE;YAAP;QAAA,CAAd,CAAX;AAAA,QACA,IAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EADd;AAAA,QAEA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,SAAU,GAAE,CAAC,KAAM,KAAI,CAAC,CAAjD,CAFf;eAGA,IAAC,OAAD,GAAU,IAAC,OAAM,CAAC,MAAR,CAAe,QAAf,EAJC;MAAA,CAtBb;AAAA,MA4BA,eAAe,SAAC,GAAD;AACb,mBAAW,IAAI,CAAC,SAAL,CAAgB,aAAU,GAA1B,CAAgC,CAAC,IAAjC,CAAsC,SAAtC,EAAiD,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CAAjD,CAAX;AAAA,QACA,QAAQ,CAAC,KAAT,EAAgB,CAAC,MAAjB,CAAwB,QAAxB,CAAiC,CAAC,IAAlC,CAAuC,OAAvC,EAAgD,YAAS,GAAzD,CACE,CAAC,IADH,CACQ,GADR,EACgB,YAAH,GAAqB,CAArB,GAA4B,CADzC,CAEE,CAAC,KAFH,CAES,MAFT,EAEiB,SAAC,CAAD;iBAAM,CAAC,CAAC,MAAR;QAAA,CAFjB,CAGE,CAAC,KAHH,CAGS,cAHT,EAGyB,GAHzB,CAIE,CAAC,KAJH,CAIS,QAJT,EAImB,OAJnB,CAKE,CAAC,KALH,CAKS,gBALT,EAK0B,MAL1B,CADA;AAAA,QAOA,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAoB,SAAC,CAAD;iBAAO,OAAO,CAAC,CAAC,KAAM,KAAI,CAAC,CAAb,GAAiB,CAAC,CAAC,KAAM,KAAI,CAAC,EAArC,EAAP;QAAA,CAApB,CAPA;AAAA,QAQA,QAAQ,CAAC,IAAT,EAAe,CAAC,MAAhB,EARA;eAUA,IAAI,CAAC,IAAL,CAAU,WAAV,EAAwB,eAAW,CAAC,UAAU,CAAC,CAAC,CAAC,KAAb,GAAqB,SAAU,GAAE,CAAC,KAAM,KAAI,CAAC,CAA7C,IAAgD,IAAjD,CAAX,GAAiE,GAAzF,EAXa;MAAA,CA5Bf;AAAA,MA2CA,gBAAgB,SAAC,GAAD,EAAM,MAAN;AACd;AAAA;yBAAA;AACE,cAAG,CAAC,CAAC,GAAF,KAAS,GAAZ;AACE,mBAAO,CAAP,CADF;WADF;AAAA,SADc;MAAA,CA3ChB;AAAA,MAgDA,SAAS,KAAK,CAAC,MAAN,CAAa,SAAC,CAAD;eAAK,CAAC,CAAC,MAAP;MAAA,CAAb,CAA0B,CAAC,CAA3B,CAA6B,SAAC,CAAD;eAAO,CAAC,CAAC,GAAT;MAAA,CAA7B,CAhDT;AAoDA;AAAA;;;;;;;;;;;;SApDA;AAAA,MAmEA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;AAIL,oBAAY,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAZ;AAAA,QACA,cAAc,KAAK,CAAC,IAAN,CAAW,YAAX,EAAyB,SAAzB,EAAoC,CAApC,CADd;AAAA,QAEA,YAAY,KAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,YAAtB,EAAoC,EAApC,CAFZ;AAAA,QAIA,YAAY,SAAS,CAAC,GAAV,CAAc;iBAAA,SAAC,CAAD;mBAAO;AAAA,cAAC,KAAK,CAAN;AAAA,cAAS,OAAM,KAAK,CAAC,KAAN,GAAc,CAAd,CAAf;AAAA,cAAiC,OAAO,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;uBAAO;AAAA,kBAAC,GAAG,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAJ;AAAA,kBAAgB,IAAI,EAAE,CAAC,UAAF,CAAa,CAAb,EAAe,CAAf,CAArB;AAAA,kBAAwC,IAAI,CAA5C;kBAAP;cAAA,CAAT,CAAxC;cAAP;UAAA;QAAA,QAAd,CAJZ;AAAA,QAKA,YAAY,OAAO,SAAP,CALZ;AAAA,QAOA,OAAU,CAAC,CAAC,SAAF,EAAH,GAAsB,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,KAAwB,CAA9C,GAAqD,CAP5D;AASA,YAAG,QAAH;AAAiB,kBAAQ,CAAC,IAAT,CAAc,IAAd,EAAjB;SATA;AAWA,YAAG,OAAH;AACE,mBAAS,IAAI,CAAC,SAAL,CAAe,QAAf,CAAT,CADF;SAXA;AAcA,YAAG,WAAU,QAAb;AACE,mBAAS,CAAC,CAAC,KAAF,EAAS,CAAC,IAAV,EAAT;AAAA,UACA,MAAM,CAAC,MAAP,CAAc,CAAC,CAAD,EAAI,CAAJ,CAAd,CADA,CADF;SAAA;AAGK,mBAAS,CAAC,CAAC,KAAF,EAAT,CAHL;SAdA;AAAA,QAmBA,OAAO,EAAE,CAAC,GAAG,CAAC,IAAP,EACL,CAAC,CADI,CACF,SAAC,CAAD;iBAAQ,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,CAAZ,EAAR;QAAA,CADE,CAEL,CAAC,EAFI,CAED,SAAC,CAAD;iBAAQ,OAAO,CAAC,CAAC,EAAF,GAAO,CAAC,CAAC,CAAhB,EAAR;QAAA,CAFC,CAGL,CAAC,EAHI,CAGD,SAAC,CAAD;iBAAQ,OAAO,CAAC,CAAC,EAAT,EAAR;QAAA,CAHC,CAnBP;AAAA,QAwBA,SAAS,MACP,CAAC,IADM,CACD,SADC,EACU,SAAC,CAAD;iBAAO,CAAC,CAAC,IAAT;QAAA,CADV,CAxBT;AA2BA,YAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACE,gBAAM,CAAC,KAAP,EACE,CAAC,MADH,CACU,MADV,CACiB,CAAC,IADlB,CACuB,OADvB,EACgC,MADhC,CAEE,CAAC,KAFH,CAES,MAFT,EAEiB,SAAC,CAAD,EAAI,CAAJ;mBAAU,KAAK,CAAC,KAAN,GAAc,CAAC,CAAC,GAAhB,EAAV;UAAA,CAFjB,CAEgD,CAAC,KAFjD,CAEuD,SAFvD,EAEkE,CAFlE,CAGE,CAAC,KAHH,CAGS,gBAHT,EAG2B,MAH3B,CAIE,CAAC,KAJH,CAIS,SAJT,EAIoB,GAJpB,EADF;SAAA;AAOE,gBAAM,CAAC,KAAP,EACE,CAAC,MADH,CACU,MADV,CACiB,CAAC,IADlB,CACuB,OADvB,EACgC,MADhC,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEa,SAAC,CAAD;AAAO,gBAAG,SAAU,EAAC,CAAC,GAAF,CAAb;qBAAyB,cAAc,SAAU,EAAC,CAAC,GAAF,CAAxB,EAAgC,SAAhC,CAA0C,CAAC,KAApE;aAAA;qBAA8E,KAAK,CAAC,CAAC,KAAK,CAAC,GAAR,CAAY,SAAC,CAAD;uBAAQ;AAAA,kBAAC,GAAG,CAAC,CAAC,CAAN;AAAA,kBAAS,GAAG,CAAZ;AAAA,kBAAe,IAAI,CAAnB;kBAAR;cAAA,CAAZ,CAAL,EAA9E;aAAP;UAAA,CAFb,CAGE,CAAC,KAHH,CAGS,MAHT,EAGiB,SAAC,CAAD,EAAI,CAAJ;mBAAU,KAAK,CAAC,KAAN,GAAc,CAAC,CAAC,GAAhB,EAAV;UAAA,CAHjB,CAIE,CAAC,KAJH,CAIS,gBAJT,EAI2B,MAJ3B,CAKE,CAAC,KALH,CAKS,SALT,EAKoB,GALpB,EAPF;SA3BA;AAAA,QAyCA,MACE,CAAC,IADH,CACQ,WADR,EACsB,eAAY,IAAZ,GAAiB,GADvC,CAEE,CAAC,UAFH,EAEe,CAAC,QAFhB,CAEyB,OAAO,CAAC,QAFjC,CAGI,CAAC,IAHL,CAGU,GAHV,EAGe,SAAC,CAAD;iBAAO,KAAK,CAAC,CAAC,KAAP,EAAP;QAAA,CAHf,CAzCA;AAAA,QA+CA,MAAM,CAAC,IAAP,EAAa,CAAC,UAAd,EAA0B,CAAC,QAA3B,CAAoC,OAAO,CAAC,QAA5C,CACE,CAAC,IADH,CACQ,GADR,EACa,SAAC,CAAD;AACT;AAAA,iBAAO,WAAY,EAAC,CAAC,GAAF,CAAnB;AACA,cAAG,IAAH;mBAAa,KAAK,cAAc,IAAd,EAAoB,SAApB,CAA8B,CAAC,KAAK,CAAC,GAArC,CAAyC,SAAC,CAAD;qBAAO;AAAA,gBAAC,GAAG,CAAC,CAAC,CAAN;AAAA,gBAAS,GAAG,CAAZ;AAAA,gBAAe,IAAI,CAAC,CAAC,EAArB;gBAAP;YAAA,CAAzC,CAAL,EAAb;WAAA;mBAAkG,KAAK,SAAU,UAAS,CAAC,MAAV,GAAmB,CAAnB,CAAqB,CAAC,KAAK,CAAC,GAAtC,CAA0C,SAAC,CAAD;qBAAO;AAAA,gBAAC,GAAG,CAAC,CAAC,CAAN;AAAA,gBAAS,GAAG,CAAZ;AAAA,gBAAe,IAAI,CAAC,CAAC,EAAF,GAAO,CAAC,CAAC,CAA5B;gBAAP;YAAA,CAA1C,CAAL,EAAlG;WAFS;QAAA,CADb,CAKE,CAAC,MALH,EA/CA;AAAA,QAsDA,YAAY,SAAS,CAAC,GAAV,CAAc,SAAC,CAAD;iBAAO;AAAA,YAAC,KAAK,CAAC,CAAC,GAAR;AAAA,YAAa,MAAM,KAAK,CAAC,CAAC,KAAK,CAAC,GAAR,CAAY,SAAC,CAAD;qBAAO;AAAA,gBAAC,GAAG,CAAC,CAAC,CAAN;AAAA,gBAAS,GAAG,CAAZ;AAAA,gBAAe,IAAI,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,EAA3B;gBAAP;YAAA,CAAZ,CAAL,CAAnB;YAAP;QAAA,CAAd,CAtDZ;eAuDA,eAAe,UA3DV;MAAA,CAnEP;AAAA,MAkIA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,WAAD,CAAY,OAAZ,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,OAAzB,CAAiC,CAAC,cAAlC,CAAiD,IAAjD,CAFA;AAAA,QAGA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAAkC,CAAC,UAAnC,CAA8C,QAA9C,CAHA;AAAA,QAIA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAJ3B;AAAA,QAKA,QAAQ,CAAC,WAAT,CAAqB,UAAU,CAAC,CAAhC,CALA;AAAA,QAMA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,UAA5B,CANA;AAAA,QAOA,QAAQ,CAAC,EAAT,CAAa,cAAW,GAAxB,EAA+B,UAA/B,CAPA;eAQA,QAAQ,CAAC,EAAT,CAAa,gBAAa,GAA1B,EAAiC,YAAjC,EAT+B;MAAA,CAAjC,CAlIA;AAAA,MA6IA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,CA7IA;AAAA,MAiJA,KAAK,CAAC,QAAN,CAAe,aAAf,EAA8B,SAAC,GAAD;AAC5B,YAAG,QAAQ,MAAR,YAAgB,YAAhB,YAA8B,QAA9B,YAAwC,QAA3C;AACE,mBAAS,GAAT,CADF;SAAA;AAAA,QAEA,KAAK,CAAC,MAAN,CAAa,MAAb,CAFA;eAGA,IAAI,CAAC,SAAL,EAAgB,CAAC,MAAjB,GAJ4B;MAAA,CAA9B,CAjJA;aAuJA,KAAK,CAAC,QAAN,CAAe,SAAf,EAA0B,SAAC,GAAD;AACxB,YAAG,QAAO,EAAP,IAAa,QAAO,MAAvB;iBACE,eAAe,KADjB;SAAA;iBAGE,eAAe,MAHjB;SADwB;MAAA,CAA1B,EAzJI;IAAA,CAHD;GAAP,CAFkD;AAAA,CAApD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,YAArC,EAAmD,SAAC,IAAD,EAAO,KAAP;AAEjD;AAAA,mBAAiB,CAAjB;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,QAFJ;AAAA,IAGL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,IAAxB;AAIJ;AAAA,YAAO,eAAW,CAAC,gBAAD,CAAlB;AAAA,MAEA,SAAS,IAFT;AAAA,MAIA,QAAQ,EAJR;AAAA,MAKA,UAAU,EALV;AAAA,MAMA,WAAW,EANX;AAAA,MAOA,WAAW,EAPX;AAAA,MAQA,WAAW,aARX;AAAA,MASA,aAAa,EATb;AAAA,MAUA,YAAY,MAVZ;AAAA,MAYA,UAAU,SAAC,IAAD;AACR;AAAA,mBAAW,IAAI,CAAC,MAAM,CAAC,GAAZ,CAAgB,SAAC,CAAD;iBAAO;AAAA,YAAC,MAAK,CAAC,CAAC,QAAR;AAAA,YAAkB,OAAM,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,CAAC,CAAC,KAA3B,CAAxB;AAAA,YAA2D,OAAO;AAAA,cAAC,oBAAoB,CAAC,CAAC,KAAvB;aAAlE;YAAP;QAAA,CAAhB,CAAX;AAAA,QACA,IAAC,WAAD,GAAc,UAAU,CAAC,CAAC,CAAC,SAAb,EADd;AAAA,QAEA,IAAC,YAAD,GAAe,UAAU,CAAC,CAAC,CAAC,WAAb,CAAyB,IAAI,CAAC,GAA9B,CAFf;eAGA,IAAC,OAAD,GAAU,IAAC,OAAM,CAAC,MAAR,CAAe,QAAf,EAJF;MAAA,CAZV;AAAA,MAoBA,YAAY,SAAC,KAAD,EAAQ,GAAR;AACV;AAAA,YAAI,CAAJ;AACA,eAAM,IAAI,KAAK,CAAC,MAAhB;AACE,cAAG,KAAM,GAAE,CAAC,GAAT,KAAgB,GAAnB;AACE,mBAAO,KAAM,GAAb,CADF;WAAA;AAAA,UAEA,GAFA,CADF;QAAA,CAFU;MAAA,CApBZ;AAAA,MA2BA,gBAAgB,SAAC,KAAD,EAAQ,IAAR,EAAc,QAAd;AACd;AAAA,YAAI,UAAU,KAAV,EAAiB,IAAjB,CAAJ;AACA,YAAG,CAAH;AACE,cAAI,CAAJ;AACA,iBAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAnB;AACE,gBAAG,CAAC,CAAC,MAAO,GAAE,CAAC,QAAZ,KAAwB,QAA3B;AACE,qBAAO,CAAC,CAAC,MAAO,GAAhB,CADF;aAAA;AAAA,YAEA,GAFA,CADF;UAAA,CAFF;SAFc;MAAA,CA3BhB;AAAA,MAsCA,OAAO,SAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB,EAA6B,IAA7B,EAAmC,KAAnC;AACL;AAAA,YAAG,OAAH;AACE,mBAAS,IAAC,UAAD,CAAW,QAAX,CAAT,CADF;SAAA;AAAA,QAKA,YAAY,CAAC,CAAC,SAAF,CAAY,IAAZ,CALZ;AAAA,QAMA,QAAQ,CAAC,CAAC,KAAF,CAAQ,IAAR,CANR;AAAA,QAQA,eAAe,KAAK,CAAC,IAAN,CAAW,OAAX,EAAmB,SAAnB,EAA6B,CAA7B,CARf;AAAA,QASA,aAAa,KAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,OAAtB,EAA+B,EAA/B,CATb;AAAA,QAUA,eAAe,KAAK,CAAC,IAAN,CAAW,QAAX,EAAqB,KAArB,EAA2B,CAA3B,CAVf;AAAA,QAWA,aAAa,KAAK,CAAC,IAAN,CAAW,KAAX,EAAiB,QAAjB,EAA0B,EAA1B,CAXb;AAAA,QAaA,QAAQ,EAbR;AAcA;uBAAA;AACE,eAAK,CAAL;AAAA,UACA,IAAI;AAAA,YAAC,KAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAL;AAAA,YAAiB,QAAO,EAAxB;AAAA,YAA4B,MAAK,CAAjC;AAAA,YAAoC,GAAE,CAAC,CAAC,GAAF,CAAM,CAAN,CAAtC;AAAA,YAAgD,OAAM,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,EAAtD;WADJ;AAEA,cAAG,CAAC,CAAC,CAAF,KAAS,MAAZ;AACE,aAAC,CAAC,MAAF,GAAW,SAAS,CAAC,GAAV,CAAc,SAAC,CAAD;AACvB;AAAA,sBAAQ;AAAA,gBAAC,UAAS,CAAV;AAAA,gBAAa,KAAI,CAAC,CAAC,GAAnB;AAAA,gBAAwB,OAAM,CAAE,GAAhC;AAAA,gBAAoC,QAAS,CAAC,CAAC,KAAF,GAAU,CAAV,IAAe,CAAC,CAAC,KAAF,GAAU,EAAG,GAAb,CAA5D;AAAA,gBAA8E,OAAO,CAAC,CAAC,KAAF,EAAS,CAAC,SAAV,EAArF;AAAA,gBAA4G,GAAG,CAAC,CAAC,KAAF,GAAU,MAAM,EAAG,GAAnB,CAA/G;AAAA,gBAAuI,OAAO,KAAK,CAAC,KAAN,GAAc,CAAd,CAA9I;eAAR;AAAA,cACA,MAAM,EAAG,GADT;AAEA,qBAAO,KAAP,CAHuB;YAAA,CAAd,CAAX;AAAA,YAKA,KAAK,CAAC,IAAN,CAAW,CAAX,CALA,CADF;WAHF;AAAA,SAdA;AAAA,QAyBA,SAAS,MACP,CAAC,IADM,CACD,KADC,EACM,SAAC,CAAD;iBAAM,CAAC,CAAC,IAAR;QAAA,CADN,CAzBT;AA4BA,YAAG,QAAQ,CAAC,MAAT,KAAmB,CAAtB;AACE,gBAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CACE,CAAC,IADH,CACQ,OADR,EACiB,OADjB,CACyB,CAAC,IAD1B,CAC+B,WAD/B,EAC2C,SAAC,CAAD;mBAAQ,eAAY,CAAC,CAAC,CAAd,GAAgB,iBAAxB;UAAA,CAD3C,CACmF,CAAC,KADpF,CAC0F,SAD1F,EACoG,CADpG,CACsG,CAAC,IADvG,CAC4G,QAAQ,CAAC,OADrH,EADF;SAAA;AAIE,gBAAM,CAAC,KAAP,EAAc,CAAC,MAAf,CAAsB,GAAtB,CACE,CAAC,IADH,CACQ,OADR,EACiB,OADjB,CACyB,CAAC,IAD1B,CAC+B,WAD/B,EAC2C,SAAC,CAAD;AACvC;AAAA,mBAAO,UAAU,QAAV,EAAoB,UAAW,EAAC,CAAC,GAAF,CAA/B,CAAP;AAAA,YACA,KAAQ,IAAH,GAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,IAAnC,GAA6C,CADlD;AAEA,mBAAQ,eAAY,EAAZ,GAAe,gBAAvB,CAHuC;UAAA,CAD3C,CAKG,CAAC,IALJ,CAKS,QAAQ,CAAC,OALlB,EAJF;SA5BA;AAAA,QAuCA,MACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEE,CAAC,IAFH,CAEQ,WAFR,EAEoB,SAAC,CAAD;AAChB,iBAAQ,eAAY,CAAC,CAAC,CAAd,GAAgB,gBAAxB,CADgB;QAAA,CAFpB,CAG4C,CAAC,KAH7C,CAGmD,SAHnD,EAG8D,CAH9D,CAvCA;AAAA,QA4CA,MAAM,CAAC,IAAP,EACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEE,CAAC,IAFH,CAEQ,WAFR,EAEoB,SAAC,CAAD,EAAI,CAAJ;AAChB;AAAA,iBAAO,UAAU,KAAV,EAAiB,YAAa,EAAC,CAAC,GAAF,CAA9B,CAAP;AAAA,UACA,KAAQ,IAAH,GAAa,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAL,GAAa,IAAnC,GAAgD,KAAK,CAAC,MAAN,GAAe,CAAlB,GAAyB,KAAM,MAAK,CAAC,MAAN,GAAa,CAAb,CAAe,CAAC,CAAtB,GAA0B,KAAM,MAAK,CAAC,MAAN,GAAa,CAAb,CAAe,CAAC,KAAzE,GAAoF,CADtI;AAEA,iBAAQ,eAAY,EAAZ,GAAe,GAAf,GAAiB,CAAC,CAAC,CAAC,KAAF,GAAU,CAAV,CAAD,CAAjB,GAA+B,cAAvC,CAHgB;QAAA,CAFpB,CAME,CAAC,MANH,EA5CA;AAAA,QAoDA,OAAO,MAAM,CAAC,SAAP,CAAiB,MAAjB,CACL,CAAC,IADI,CAEH,SAAC,CAAD;iBAAO,CAAC,CAAC,OAAT;QAAA,CAFG,EAGH,SAAC,CAAD;iBAAO,CAAC,CAAC,QAAF,GAAa,GAAb,GAAmB,CAAC,CAAC,IAA5B;QAAA,CAHG,CApDP;AA0DA,YAAG,QAAQ,CAAC,MAAT,KAAmB,CAAtB;AACE,cAAI,CAAC,KAAL,EAAY,CAAC,MAAb,CAAoB,MAApB,CACE,CAAC,IADH,CACQ,OADR,EACiB,KADjB,CAEE,CAAC,IAFH,CAEQ,SAFR,EADF;SAAA;AAKE,cAAI,CAAC,KAAL,EAAY,CAAC,MAAb,CAAoB,MAApB,CACE,CAAC,IADH,CACQ,OADR,EACiB,gBADjB,CAEE,CAAC,IAFH,CAEQ,GAFR,EAEa,SAAC,CAAD;AACT;AAAA,mBAAO,cAAc,QAAd,EAAwB,CAAC,CAAC,GAA1B,EAA+B,UAAW,EAAC,CAAC,QAAF,CAA1C,CAAP;AACO,gBAAG,IAAH;qBAAa,IAAI,CAAC,EAAlB;aAAA;qBAAyB,CAAC,CAAC,KAAF,GAAU,CAAV,EAAzB;aAFE;UAAA,CAFb,CAME,CAAC,IANH,CAMQ,QANR,EAMkB,CANlB,CAMoB,CAAC,IANrB,CAM0B,OAN1B,EAMkC,SAAC,CAAD;mBAAO,CAAC,CAAC,MAAT;UAAA,CANlC,CAOE,CAAC,IAPH,CAOQ,SAPR,EALF;SA1DA;AAAA,QAyEA,IAAI,CAAC,KAAL,CAAW,MAAX,EAAmB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CAAnB,CACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEI,CAAC,IAFL,CAEU,GAFV,EAEe,SAAC,CAAD;iBAAO,CAAC,CAAC,EAAT;QAAA,CAFf,CAGI,CAAC,IAHL,CAGU,OAHV,EAGmB,SAAC,CAAD;iBAAO,CAAC,CAAC,MAAT;QAAA,CAHnB,CAII,CAAC,IAJL,CAIU,QAJV,EAIoB,SAAC,CAAD;iBAAO,CAAC,CAAC,OAAT;QAAA,CAJpB,CAzEA;AAAA,QA+EA,IAAI,CAAC,IAAL,EACE,CAAC,UADH,EACe,CAAC,QADhB,CACyB,OAAO,CAAC,QADjC,CAEE,CAAC,IAFH,CAEQ,QAFR,EAEiB,CAFjB,CAGE,CAAC,IAHH,CAGQ,GAHR,EAGa,SAAC,CAAD;AACT;AAAA,iBAAO,cAAc,KAAd,EAAqB,CAAC,CAAC,GAAvB,EAA4B,YAAa,EAAC,CAAC,QAAF,CAAzC,CAAP;AACA,cAAG,IAAH;AACE,mBAAO,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,MAArB,CADF;WAAA;AAGE,gBAAI,UAAU,KAAV,EAAiB,CAAC,CAAC,GAAnB,CAAJ;AACA,mBAAO,CAAC,CAAC,MAAO,EAAC,CAAC,MAAM,CAAC,MAAT,GAAkB,CAAlB,CAAoB,CAAC,CAArC,CAJF;WAFS;QAAA,CAHb,CAWE,CAAC,MAXH,EA/EA;AAAA,QA4FA,UAAU,SA5FV;AAAA,QA6FA,WAAW,KA7FX;eA8FA,WAAW,MA/FN;MAAA,CAtCP;AAAA,MA0IA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC;AAC/B,qBAAa,IAAC,UAAD,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,CAAX,CAAb;AAAA,QACA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,UAAd,CAAyB,OAAzB,CAAiC,CAAC,cAAlC,CAAiD,IAAjD,CADA;AAAA,QAEA,IAAC,QAAD,CAAS,GAAT,CAAa,CAAC,cAAd,CAA6B,IAA7B,CAFA;AAAA,QAGA,IAAC,WAAD,CAAY,OAAZ,CAHA;AAAA,QAIA,WAAW,IAAI,CAAC,QAAL,EAAe,CAAC,OAJ3B;AAAA,QAKA,YAAY,IAAI,CAAC,QAAL,EAAe,CAAC,QAL5B;eAMA,QAAQ,CAAC,EAAT,CAAa,WAAQ,GAArB,EAA4B,OAA5B,EAP+B;MAAA,CAAjC,CA1IA;AAAA,MAmJA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,MAApB,EAA4B,IAA5B,CAnJA;aAoJA,IAAI,CAAC,SAAL,EAAgB,CAAC,EAAjB,CAAoB,WAApB,EAAiC,IAAjC,EAxJI;IAAA,CAHD;GAAP,CAHiD;AAAA,CAAnD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,eAAnC,EAAoD,SAAC,IAAD,EAAO,OAAP,EAAgB,gBAAhB,EAAkC,MAAlC;AAElD;AAAA,kBAAgB;AAEd;AAAA,SAAK,aAAL;AAAA,IAEA,UAAU,KAFV;AAAA,IAGA,WAAW,MAHX;AAAA,IAIA,UAAU,MAJV;AAAA,IAKA,YAAY,MALZ;AAAA,IAMA,gBAAgB,MANhB;AAAA,IAOA,QAAQ,MAPR;AAAA,IAQA,SAAS,MART;AAAA,IASA,QAAQ,MATR;AAAA,IAUA,iBAAiB,MAVjB;AAAA,IAWA,WAAW,MAXX;AAAA,IAYA,iBAAiB,MAZjB;AAAA,IAaA,aAAa,MAbb;AAAA,IAcA,eAAgB,MAdhB;AAAA,IAeA,cAAc,MAfd;AAAA,IAgBA,KAAK,MAhBL;AAAA,IAiBA,KAAK,MAjBL;AAAA,IAkBA,WAAW,MAlBX;AAAA,IAmBA,WAAW,KAnBX;AAAA,IAoBA,UAAU,KApBV;AAAA,IAqBA,UAAU,KArBV;AAAA,IAsBA,aAAa,MAtBb;AAAA,IAuBA,gBAAgB,MAvBhB;AAAA,IAwBA,gBAAgB,MAxBhB;AAAA,IAyBA,eAAe,EAAE,CAAC,QAAH,CAAY,YAAZ,EAA0B,OAA1B,EAAmC,UAAnC,CAzBf;AAAA,IA2BA,OAAO,MAAM,QAAQ,SAAS,WAAW,YAAY,aAAa,cAAc,MA3BhF;AAAA,IA+BA,wBAAwB,SAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,MAAnB;AACtB;AAAA,cAAQ,QAAQ,IAAhB;AAAA,MACA,SAAS,SAAS,GADlB;AAIA,UAAG,QAAH;AACE,gBAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,IAAzB,CAA8B,WAA9B,EAA4C,eAAY,IAAZ,GAAiB,GAAjB,GAAoB,GAApB,GAAwB,GAApE,CAAuE,CAAC,MAAxE,CAA+E,MAA/E,CAAsF,CAAC,IAAvF,CAA4F,OAA5F,EAAqG,KAArG;AAAA,QACA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,IAAzB,CAA8B,WAA9B,EAA4C,eAAY,IAAZ,GAAiB,GAAjB,GAAoB,MAApB,GAA2B,GAAvE,CAA0E,CAAC,MAA3E,CAAkF,MAAlF,CAAyF,CAAC,IAA1F,CAA+F,OAA/F,EAAwG,KAAxG,CADA;AAAA,QAEA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,IAAzB,CAA8B,WAA9B,EAA4C,eAAY,IAAZ,GAAiB,GAAjB,GAAoB,GAApB,GAAwB,GAApE,CAAuE,CAAC,MAAxE,CAA+E,MAA/E,CAAsF,CAAC,IAAvF,CAA4F,QAA5F,EAAsG,MAAtG,CAFA;AAAA,QAGA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,IAAzB,CAA8B,WAA9B,EAA4C,eAAY,KAAZ,GAAkB,GAAlB,GAAqB,GAArB,GAAyB,GAArE,CAAwE,CAAC,MAAzE,CAAgF,MAAhF,CAAuF,CAAC,IAAxF,CAA6F,QAA7F,EAAuG,MAAvG,CAHA;AAAA,QAIA,QAAQ,CAAC,SAAT,CAAmB,KAAnB,CAAyB,CAAC,IAA1B,CAA+B,WAA/B,EAA6C,eAAY,KAAZ,GAAkB,GAAlB,GAAqB,GAArB,GAAyB,GAAtE,CAJA;AAAA,QAKA,QAAQ,CAAC,SAAT,CAAmB,KAAnB,CAAyB,CAAC,IAA1B,CAA+B,WAA/B,EAA6C,eAAY,IAAZ,GAAiB,GAAjB,GAAoB,GAApB,GAAwB,GAArE,CALA;AAAA,QAMA,QAAQ,CAAC,SAAT,CAAmB,KAAnB,CAAyB,CAAC,IAA1B,CAA+B,WAA/B,EAA6C,eAAY,KAAZ,GAAkB,GAAlB,GAAqB,MAArB,GAA4B,GAAzE,CANA;AAAA,QAOA,QAAQ,CAAC,SAAT,CAAmB,KAAnB,CAAyB,CAAC,IAA1B,CAA+B,WAA/B,EAA6C,eAAY,IAAZ,GAAiB,GAAjB,GAAoB,MAApB,GAA2B,GAAxE,CAPA;AAAA,QAQA,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,KAAtB,CAA4B,CAAC,IAA7B,CAAkC,QAAlC,EAA4C,MAA5C,CAAmD,CAAC,IAApD,CAAyD,GAAzD,EAA8D,IAA9D,CAAmE,CAAC,IAApE,CAAyE,GAAzE,EAA8E,GAA9E,CARA,CADF;OAJA;AAcA,UAAG,OAAH;AACE,gBAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,IAAzB,CAA8B,WAA9B,EAA4C,eAAY,IAAZ,GAAiB,KAA7D,CAAkE,CAAC,MAAnE,CAA0E,MAA1E,CAAiF,CAAC,IAAlF,CAAuF,QAAvF,EAAiG,MAAjG;AAAA,QACA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,IAAzB,CAA8B,WAA9B,EAA4C,eAAY,KAAZ,GAAkB,KAA9D,CAAmE,CAAC,MAApE,CAA2E,MAA3E,CAAkF,CAAC,IAAnF,CAAwF,QAAxF,EAAkG,MAAlG,CADA;AAAA,QAEA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,MAAzB,CAAgC,MAAhC,CAAuC,CAAC,IAAxC,CAA6C,QAA7C,EAAuD,QAAQ,CAAC,MAAhE,CAFA;AAAA,QAGA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,MAAzB,CAAgC,MAAhC,CAAuC,CAAC,IAAxC,CAA6C,QAA7C,EAAuD,QAAQ,CAAC,MAAhE,CAHA;AAAA,QAIA,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,KAAtB,CAA4B,CAAC,IAA7B,CAAkC,QAAlC,EAA4C,QAAQ,CAAC,MAArD,CAA4D,CAAC,IAA7D,CAAkE,GAAlE,EAAuE,IAAvE,CAA4E,CAAC,IAA7E,CAAkF,GAAlF,EAAuF,CAAvF,CAJA,CADF;OAdA;AAoBA,UAAG,OAAH;AACE,gBAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,IAAzB,CAA8B,WAA9B,EAA4C,iBAAc,GAAd,GAAkB,GAA9D,CAAiE,CAAC,MAAlE,CAAyE,MAAzE,CAAgF,CAAC,IAAjF,CAAsF,OAAtF,EAA+F,KAA/F;AAAA,QACA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,IAAzB,CAA8B,WAA9B,EAA4C,iBAAc,MAAd,GAAqB,GAAjE,CAAoE,CAAC,MAArE,CAA4E,MAA5E,CAAmF,CAAC,IAApF,CAAyF,OAAzF,EAAkG,KAAlG,CADA;AAAA,QAEA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,MAAzB,CAAgC,MAAhC,CAAuC,CAAC,IAAxC,CAA6C,OAA7C,EAAsD,QAAQ,CAAC,KAA/D,CAFA;AAAA,QAGA,QAAQ,CAAC,SAAT,CAAmB,IAAnB,CAAwB,CAAC,MAAzB,CAAgC,MAAhC,CAAuC,CAAC,IAAxC,CAA6C,OAA7C,EAAsD,QAAQ,CAAC,KAA/D,CAHA;eAIA,OAAO,CAAC,IAAR,CAAa,OAAb,EAAsB,QAAQ,CAAC,KAA/B,CAAqC,CAAC,IAAtC,CAA2C,QAA3C,EAAqD,MAArD,CAA4D,CAAC,IAA7D,CAAkE,GAAlE,EAAuE,CAAvE,CAAyE,CAAC,IAA1E,CAA+E,GAA/E,EAAoF,GAApF,EALF;OArBsB;IAAA,CA/BxB;AAAA,IA6DA,qBAAqB;AACnB;AAAA,WAAK,OAAO,CAAC,IAAR,EAAc,CAAC,qBAAf,EAAL;AAAA,MACA,YAAY,CAAC,IAAb,CAAkB,SAAC,CAAD;AACd;AAAA,aAAK,IAAI,CAAC,qBAAL,EAAL;AAAA,QACA,OAAO,EAAE,CAAC,IAAH,GAAU,EAAE,CAAC,KAAH,GAAW,EAAE,CAAC,KAAH,GAAW,CAAhC,IAAsC,EAAE,CAAC,IAAH,GAAU,EAAE,CAAC,KAAH,GAAW,CAArB,GAAyB,EAAE,CAAC,KADzE;AAAA,QAEA,OAAO,EAAE,CAAC,GAAH,GAAS,EAAE,CAAC,MAAH,GAAY,EAAE,CAAC,MAAH,GAAY,CAAjC,IAAuC,EAAE,CAAC,GAAH,GAAS,EAAE,CAAC,MAAH,GAAY,CAArB,GAAyB,EAAE,CAAC,MAF1E;eAGA,EAAE,CAAC,MAAH,CAAU,IAAV,CAAe,CAAC,OAAhB,CAAwB,UAAxB,EAAoC,QAAS,IAA7C,EAJc;MAAA,CAAlB,CADA;AAOA,aAAO,UAAU,CAAC,SAAX,CAAqB,WAArB,CAAiC,CAAC,IAAlC,EAAP,CARmB;IAAA,CA7DrB;AAAA,IAyEA,eAAe,SAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,MAAnB;AACb,UAAG,OAAH;AACE,qBAAa,CAAC,EAAE,CAAC,CAAH,EAAM,CAAC,MAAP,CAAc,IAAd,CAAD,EAAsB,EAAE,CAAC,CAAH,EAAM,CAAC,MAAP,CAAc,KAAd,CAAtB,CAAb;AACA,YAAG,EAAE,CAAC,CAAH,EAAM,CAAC,SAAP,EAAH;AACE,0BAAgB,KAAK,CAAC,GAAN,CAAU,SAAC,CAAD;mBAAO,EAAE,CAAC,CAAH,EAAM,CAAC,KAAP,CAAa,CAAb,EAAP;UAAA,CAAV,CAAiC,CAAC,KAAlC,CAAwC,UAAW,GAAnD,EAAuD,UAAW,GAAX,GAAgB,CAAvE,CAAhB,CADF;SAAA;AAGE,0BAAgB,CAAC,EAAE,CAAC,CAAH,EAAM,CAAC,KAAP,CAAa,KAAM,WAAW,GAAX,CAAnB,CAAD,EAAqC,EAAE,CAAC,CAAH,EAAM,CAAC,KAAP,CAAa,KAAM,WAAW,GAAX,CAAnB,CAArC,CAAhB,CAHF;SADA;AAAA,QAKA,gBAAgB,KAAK,CAAC,KAAN,CAAY,UAAW,GAAvB,EAA2B,UAAW,GAAX,GAAgB,CAA3C,CALhB,CADF;OAAA;AAOA,UAAG,OAAH;AACE,qBAAa,CAAC,EAAE,CAAC,CAAH,EAAM,CAAC,MAAP,CAAc,MAAd,CAAD,EAAwB,EAAE,CAAC,CAAH,EAAM,CAAC,MAAP,CAAc,GAAd,CAAxB,CAAb;AACA,YAAG,EAAE,CAAC,CAAH,EAAM,CAAC,SAAP,EAAH;AACE,0BAAgB,KAAK,CAAC,GAAN,CAAU,SAAC,CAAD;mBAAO,EAAE,CAAC,CAAH,EAAM,CAAC,KAAP,CAAa,CAAb,EAAP;UAAA,CAAV,CAAiC,CAAC,KAAlC,CAAwC,UAAW,GAAnD,EAAuD,UAAW,GAAX,GAAgB,CAAvE,CAAhB,CADF;SAAA;AAGE,0BAAgB,CAAC,EAAE,CAAC,CAAH,EAAM,CAAC,KAAP,CAAa,KAAM,WAAW,GAAX,CAAnB,CAAD,EAAqC,EAAE,CAAC,CAAH,EAAM,CAAC,KAAP,CAAa,KAAM,WAAW,GAAX,CAAnB,CAArC,CAAhB,CAHF;SADA;AAAA,QAKA,gBAAgB,KAAK,CAAC,KAAN,CAAY,UAAW,GAAvB,EAA2B,UAAW,GAAX,GAAgB,CAA3C,CALhB,CADF;OAPA;AAcA,UAAG,QAAH;AACE,qBAAa,EAAb;AAAA,QACA,gBAAgB,EADhB;eAEA,gBAAgB,qBAHlB;OAfa;IAAA,CAzEf;AAAA,IAiGA,aAAa;AAEX,QAAE,CAAC,KAAK,CAAC,cAAT;AAAA,MACA,gBAAgB,EAAE,CAAC,MAAH,CAAU,EAAE,CAAC,KAAK,CAAC,MAAnB,CAA0B,CAAC,KAA3B,EADhB;AAAA,MAEA,WAAW,KAAK,CAAC,OAAN,EAFX;AAAA,MAGA,YAAY,EAAE,CAAC,KAAH,CAAS,KAAT,CAHZ;AAAA,MAIA,WAAW,GAJX;AAAA,MAKA,YAAY,IALZ;AAAA,MAMA,aAAa,KANb;AAAA,MAOA,cAAc,MAPd;AAAA,MAQA,EAAE,CAAC,MAAH,CAAU,KAAV,CAAgB,CAAC,KAAjB,CAAuB,gBAAvB,EAAwC,MAAxC,CAA+C,CAAC,SAAhD,CAA0D,SAA1D,CAAoE,CAAC,KAArE,CAA2E,SAA3E,EAAsF,IAAtF,CARA;AAAA,MASA,EAAE,CAAC,MAAH,CAAU,MAAV,CAAiB,CAAC,KAAlB,CAAwB,QAAxB,EAAkC,EAAE,CAAC,MAAH,CAAU,EAAE,CAAC,KAAK,CAAC,MAAnB,CAA0B,CAAC,KAA3B,CAAiC,QAAjC,CAAlC,CATA;AAAA,MAWA,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,CAAC,EAAnB,CAAsB,iBAAtB,EAAyC,SAAzC,CAAmD,CAAC,EAApD,CAAuD,eAAvD,EAAwE,QAAxE,CAXA;AAAA,MAaA,QAAQ,CAAC,IAAT,CAAc,IAAd,CAbA;AAAA,MAcA,aAAa,MAdb;AAAA,MAeA,eAAe,UAAU,CAAC,SAAX,CAAqB,aAArB,CAff;AAAA,MAgBA,YAAY,CAAC,UAAb,EAhBA;AAAA,MAiBA,MAAM,CAAC,KAAP,EAjBA;aAkBA,MAAM,CAAC,IAAP,GApBW;IAAA,CAjGb;AAAA,IAyHA,WAAW;AAGT,QAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,CAAC,EAAnB,CAAsB,iBAAtB,EAAyC,IAAzC;AAAA,MACA,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,CAAC,EAAnB,CAAsB,eAAtB,EAAuC,IAAvC,CADA;AAAA,MAEA,EAAE,CAAC,MAAH,CAAU,KAAV,CAAgB,CAAC,KAAjB,CAAuB,gBAAvB,EAAwC,KAAxC,CAA8C,CAAC,SAA/C,CAAyD,SAAzD,CAAmE,CAAC,KAApE,CAA0E,SAA1E,EAAqF,IAArF,CAFA;AAAA,MAGA,EAAE,CAAC,MAAH,CAAU,MAAV,CAAiB,CAAC,KAAlB,CAAwB,QAAxB,EAAkC,IAAlC,CAHA;AAIA,UAAG,SAAS,GAAT,KAAgB,CAAhB,IAAqB,QAAQ,IAAR,KAAgB,CAAxC;AAEE,UAAE,CAAC,MAAH,CAAU,KAAV,CAAgB,CAAC,SAAjB,CAA2B,SAA3B,CAAqC,CAAC,KAAtC,CAA4C,SAA5C,EAAuD,MAAvD,EAFF;OAJA;AAAA,MAOA,QAAQ,CAAC,IAAT,CAAc,KAAd,CAPA;AAAA,MAQA,YAAY,CAAC,QAAb,CAAsB,UAAtB,CARA;aASA,MAAM,CAAC,MAAP,GAZS;IAAA,CAzHX;AAAA,IAyIA,YAAY;AACV;AAAA,UAAI,CAAC,IAAL,CAAU,WAAV;AAAA,MACA,MAAM,EAAE,CAAC,KAAH,CAAS,KAAT,CADN;AAAA,MAEA,SAAS,GAAI,GAAJ,GAAS,SAAU,GAF5B;AAAA,MAGA,SAAS,GAAI,GAAJ,GAAS,SAAU,GAH5B;AAAA,MAQA,SAAS,SAAC,KAAD;AACP,cAAM,YAAY,KAAlB;AAAA,QACA,OAAU,OAAO,CAAV,GAAiB,CAAI,MAAM,UAAT,GAAyB,GAAzB,GAAkC,UAAnC,CAAjB,GAAqE,CAD5E;eAEA,QAAW,OAAO,QAAQ,CAAC,KAAnB,GAA8B,CAAI,MAAM,UAAT,GAAyB,UAAzB,GAAyC,GAA1C,CAA9B,GAAkF,QAAQ,CAAC,MAH5F;MAAA,CART;AAAA,MAaA,UAAU,SAAC,KAAD;AACR,cAAM,aAAa,KAAnB;AAAA,QACA,OAAU,OAAO,CAAV,GAAiB,CAAI,MAAM,SAAT,GAAwB,GAAxB,GAAiC,SAAlC,CAAjB,GAAmE,CAD1E;eAEA,QAAW,OAAO,QAAQ,CAAC,KAAnB,GAA8B,CAAI,MAAM,SAAT,GAAwB,SAAxB,GAAuC,GAAxC,CAA9B,GAAgF,QAAQ,CAAC,MAHzF;MAAA,CAbV;AAAA,MAkBA,QAAQ,SAAC,KAAD;AACN,cAAM,WAAW,KAAjB;AAAA,QACA,MAAS,OAAO,CAAV,GAAiB,CAAI,MAAM,WAAT,GAA0B,GAA1B,GAAmC,WAApC,CAAjB,GAAuE,CAD7E;eAEA,SAAY,OAAO,QAAQ,CAAC,MAAnB,GAA+B,CAAI,MAAM,WAAT,GAA0B,GAA1B,GAAmC,WAApC,CAA/B,GAAsF,QAAQ,CAAC,OAHlG;MAAA,CAlBR;AAAA,MAuBA,WAAW,SAAC,KAAD;AACT,cAAM,cAAc,KAApB;AAAA,QACA,MAAS,OAAO,CAAV,GAAiB,CAAI,MAAM,QAAT,GAAuB,GAAvB,GAAgC,QAAjC,CAAjB,GAAiE,CADvE;eAEA,SAAY,OAAO,QAAQ,CAAC,MAAnB,GAA+B,CAAI,MAAM,QAAT,GAAuB,GAAvB,GAAgC,QAAjC,CAA/B,GAAgF,QAAQ,CAAC,OAHzF;MAAA,CAvBX;AAAA,MA4BA,QAAQ,SAAC,KAAD;AACN,YAAG,YAAY,KAAZ,IAAqB,CAAxB;AACE,cAAG,aAAa,KAAb,IAAsB,QAAQ,CAAC,KAAlC;AACE,mBAAO,YAAY,KAAnB;mBACA,QAAQ,aAAa,MAFvB;WAAA;AAIE,oBAAQ,QAAQ,CAAC,KAAjB;mBACA,OAAO,QAAQ,CAAC,KAAT,GAAiB,CAAC,aAAa,SAAd,EAL1B;WADF;SAAA;AAQE,iBAAO,CAAP;iBACA,QAAQ,aAAa,UATvB;SADM;MAAA,CA5BR;AAAA,MAwCA,SAAS,SAAC,KAAD;AACP,YAAG,WAAW,KAAX,IAAoB,CAAvB;AACE,cAAG,cAAc,KAAd,IAAuB,QAAQ,CAAC,MAAnC;AACE,kBAAM,WAAW,KAAjB;mBACA,SAAS,cAAc,MAFzB;WAAA;AAIE,qBAAS,QAAQ,CAAC,MAAlB;mBACA,MAAM,QAAQ,CAAC,MAAT,GAAkB,CAAC,cAAc,QAAf,EAL1B;WADF;SAAA;AAQE,gBAAM,CAAN;iBACA,SAAS,cAAc,SATzB;SADO;MAAA,CAxCT;AAoDA,cAAO,aAAa,CAAC,IAArB;AAAA,aACO,YADP;AAEI,cAAG,SAAS,SAAU,GAAnB,GAAwB,CAA3B;AACE,mBAAU,SAAS,CAAZ,GAAmB,SAAU,GAAV,GAAe,MAAlC,GAA8C,SAAU,GAA/D;AACA,gBAAG,OAAO,IAAI,CAAC,GAAL,CAAS,MAAT,CAAP,GAA0B,QAAQ,CAAC,KAAtC;AACE,sBAAQ,OAAO,IAAI,CAAC,GAAL,CAAS,MAAT,CAAf,CADF;aAAA;AAGE,sBAAQ,QAAQ,CAAC,KAAjB,CAHF;aAFF;WAAA;AAOE,mBAAO,CAAP,CAPF;WAAA;AASA,cAAG,SAAS,SAAU,GAAnB,GAAwB,CAA3B;AACE,kBAAS,SAAS,CAAZ,GAAmB,SAAU,GAAV,GAAe,MAAlC,GAA8C,SAAU,GAA9D;AACA,gBAAG,MAAM,IAAI,CAAC,GAAL,CAAS,MAAT,CAAN,GAAyB,QAAQ,CAAC,MAArC;AACE,uBAAS,MAAM,IAAI,CAAC,GAAL,CAAS,MAAT,CAAf,CADF;aAAA;AAGE,uBAAS,QAAQ,CAAC,MAAlB,CAHF;aAFF;WAAA;AAOE,kBAAM,CAAN,CAPF;WAXJ;AACO;AADP,aAoBO,QApBP;AAqBI,iBAAO,MAAP;AAAA,UAAgB,MAAM,MAAN,CAAhB,CArBJ;AAoBO;AApBP,aAsBO,GAtBP;AAuBI,gBAAM,MAAN,EAvBJ;AAsBO;AAtBP,aAwBO,GAxBP;AAyBI,mBAAS,MAAT,EAzBJ;AAwBO;AAxBP,aA0BO,GA1BP;AA2BI,iBAAO,MAAP,EA3BJ;AA0BO;AA1BP,aA4BO,GA5BP;AA6BI,kBAAQ,MAAR,EA7BJ;AA4BO;AA5BP,aA8BO,IA9BP;AA+BI,gBAAM,MAAN;AAAA,UAAe,OAAO,MAAP,CAAf,CA/BJ;AA8BO;AA9BP,aAgCO,IAhCP;AAiCI,gBAAM,MAAN;AAAA,UAAe,QAAQ,MAAR,CAAf,CAjCJ;AAgCO;AAhCP,aAkCO,IAlCP;AAmCI,mBAAS,MAAT;AAAA,UAAkB,OAAO,MAAP,CAAlB,CAnCJ;AAkCO;AAlCP,aAoCO,IApCP;AAqCI,mBAAS,MAAT;AAAA,UAAkB,QAAQ,MAAR,CAAlB,CArCJ;AAAA,OApDA;AAAA,MA2FA,sBAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,EAAwC,MAAxC,CA3FA;AAAA,MA4FA,aAAa,IAAb,EAAmB,KAAnB,EAA0B,GAA1B,EAA+B,MAA/B,CA5FA;AAAA,MA6FA,YAAY,CAAC,KAAb,CAAmB,UAAnB,EAA+B,aAA/B,EAA8C,aAA9C,CA7FA;aA8FA,gBAAgB,CAAC,YAAjB,CAA8B,aAA9B,EAA6C,WAA7C,EA/FU;IAAA,CAzIZ;AAAA,IA4OA,EAAE,CAAC,KAAH,GAAW,SAAC,CAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,QAAP,CAA9B;OAAA;AAEE,YAAG,QAAH;AAAoB,iBAApB;SAAA;AAAA,QACA,WAAW,CADX;AAAA,QAEA,WAAW,EAAE,CAAC,CAAH,MAAW,EAAE,CAAC,CAAH,EAFtB;AAAA,QAGA,UAAU,EAAE,CAAC,CAAH,MAAW,GAAM,CAAC,CAAH,EAHzB;AAAA,QAIA,UAAU,EAAE,CAAC,CAAH,MAAW,GAAM,CAAC,CAAH,EAJzB;AAAA,QAMA,CAAC,CAAC,KAAF,CAAQ;AAAA,UAAC,kBAAkB,KAAnB;AAAA,UAA0B,QAAQ,WAAlC;SAAR,CANA;AAAA,QAQA,UAAU,CAAC,CAAC,MAAF,CAAS,MAAT,CAAgB,CAAC,IAAjB,CAAsB;AAAA,UAAC,SAAM,QAAP;AAAA,UAAiB,GAAE,CAAnB;AAAA,UAAsB,GAAE,CAAxB;AAAA,UAA2B,OAAM,CAAjC;AAAA,UAAoC,QAAO,CAA3C;SAAtB,CAAoE,CAAC,KAArE,CAA2E,QAA3E,EAAoF,MAApF,CAA2F,CAAC,KAA5F,CAAkG;AAAA,UAAC,MAAK,QAAN;SAAlG,CARV;AAUA,YAAG,WAAW,QAAd;AACE,WAAC,CAAC,MAAF,CAAS,GAAT,CAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,UAA5B,CAAuC,CAAC,KAAxC,CAA8C;AAAA,YAAC,QAAO,WAAR;AAAA,YAAqB,SAAQ,MAA7B;WAA9C,CACE,CAAC,MADH,CACU,MADV,CACiB,CAAC,IADlB,CACuB;AAAA,YAAC,GAAE,CAAH;AAAA,YAAM,GAAG,EAAT;AAAA,YAAa,OAAM,CAAnB;AAAA,YAAsB,QAAO,CAA7B;WADvB,CACuD,CAAC,KADxD,CAC8D;AAAA,YAAC,MAAK,GAAN;WAD9D;AAAA,UAEA,CAAC,CAAC,MAAF,CAAS,GAAT,CAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,UAA5B,CAAuC,CAAC,KAAxC,CAA8C;AAAA,YAAC,QAAO,WAAR;AAAA,YAAqB,SAAQ,MAA7B;WAA9C,CACE,CAAC,MADH,CACU,MADV,CACiB,CAAC,IADlB,CACuB;AAAA,YAAC,GAAE,CAAH;AAAA,YAAM,GAAG,EAAT;AAAA,YAAa,OAAM,CAAnB;AAAA,YAAsB,QAAO,CAA7B;WADvB,CACuD,CAAC,KADxD,CAC8D;AAAA,YAAC,MAAK,GAAN;WAD9D,CAFA,CADF;SAVA;AAeA,YAAG,WAAW,QAAd;AACE,WAAC,CAAC,MAAF,CAAS,GAAT,CAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,UAA5B,CAAuC,CAAC,KAAxC,CAA8C;AAAA,YAAC,QAAO,WAAR;AAAA,YAAqB,SAAQ,MAA7B;WAA9C,CACE,CAAC,MADH,CACU,MADV,CACiB,CAAC,IADlB,CACuB;AAAA,YAAC,GAAE,CAAH;AAAA,YAAM,GAAG,EAAT;AAAA,YAAa,OAAM,CAAnB;AAAA,YAAsB,QAAO,CAA7B;WADvB,CACuD,CAAC,KADxD,CAC8D;AAAA,YAAC,MAAK,GAAN;WAD9D;AAAA,UAEA,CAAC,CAAC,MAAF,CAAS,GAAT,CAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,UAA5B,CAAuC,CAAC,KAAxC,CAA8C;AAAA,YAAC,QAAO,WAAR;AAAA,YAAqB,SAAQ,MAA7B;WAA9C,CACE,CAAC,MADH,CACU,MADV,CACiB,CAAC,IADlB,CACuB;AAAA,YAAC,GAAE,CAAH;AAAA,YAAM,GAAG,EAAT;AAAA,YAAa,OAAM,CAAnB;AAAA,YAAsB,QAAO,CAA7B;WADvB,CACuD,CAAC,KADxD,CAC8D;AAAA,YAAC,MAAK,GAAN;WAD9D,CAFA,CADF;SAfA;AAqBA,YAAG,QAAH;AACE,WAAC,CAAC,MAAF,CAAS,GAAT,CAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,WAA5B,CAAwC,CAAC,KAAzC,CAA+C;AAAA,YAAC,QAAO,aAAR;AAAA,YAAuB,SAAQ,MAA/B;WAA/C,CACA,CAAC,MADD,CACQ,MADR,CACe,CAAC,IADhB,CACqB;AAAA,YAAC,GAAG,EAAJ;AAAA,YAAQ,GAAG,EAAX;AAAA,YAAe,OAAM,CAArB;AAAA,YAAwB,QAAO,CAA/B;WADrB,CACuD,CAAC,KADxD,CAC8D;AAAA,YAAC,MAAK,IAAN;WAD9D;AAAA,UAEA,CAAC,CAAC,MAAF,CAAS,GAAT,CAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,WAA5B,CAAwC,CAAC,KAAzC,CAA+C;AAAA,YAAC,QAAO,aAAR;AAAA,YAAuB,SAAQ,MAA/B;WAA/C,CACA,CAAC,MADD,CACQ,MADR,CACe,CAAC,IADhB,CACqB;AAAA,YAAC,GAAG,EAAJ;AAAA,YAAQ,GAAG,EAAX;AAAA,YAAe,OAAM,CAArB;AAAA,YAAwB,QAAO,CAA/B;WADrB,CACuD,CAAC,KADxD,CAC8D;AAAA,YAAC,MAAK,IAAN;WAD9D,CAFA;AAAA,UAIA,CAAC,CAAC,MAAF,CAAS,GAAT,CAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,WAA5B,CAAwC,CAAC,KAAzC,CAA+C;AAAA,YAAC,QAAO,aAAR;AAAA,YAAuB,SAAQ,MAA/B;WAA/C,CACA,CAAC,MADD,CACQ,MADR,CACe,CAAC,IADhB,CACqB;AAAA,YAAC,GAAG,EAAJ;AAAA,YAAQ,GAAG,EAAX;AAAA,YAAe,OAAM,CAArB;AAAA,YAAwB,QAAO,CAA/B;WADrB,CACuD,CAAC,KADxD,CAC8D;AAAA,YAAC,MAAK,IAAN;WAD9D,CAJA;AAAA,UAMA,CAAC,CAAC,MAAF,CAAS,GAAT,CAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,WAA5B,CAAwC,CAAC,KAAzC,CAA+C;AAAA,YAAC,QAAO,aAAR;AAAA,YAAuB,SAAQ,MAA/B;WAA/C,CACA,CAAC,MADD,CACQ,MADR,CACe,CAAC,IADhB,CACqB;AAAA,YAAC,GAAG,EAAJ;AAAA,YAAQ,GAAG,EAAX;AAAA,YAAe,OAAM,CAArB;AAAA,YAAwB,QAAO,CAA/B;WADrB,CACuD,CAAC,KADxD,CAC8D;AAAA,YAAC,MAAK,IAAN;WAD9D,CANA,CADF;SArBA;AAAA,QA+BA,CAAC,CAAC,EAAF,CAAK,iBAAL,EAAwB,UAAxB,CA/BA;AAgCA,eAAO,EAAP,CAlCF;OADS;IAAA,CA5OX;AAAA,IAmRA,eAAe;AACb;AAAA,UAAG,QAAH;AACE,YAAI,CAAC,IAAL,CAAU,eAAV;AAAA,QACA,SAAS,KAAK,CAAC,OAAN,EADT;AAAA,QAEA,kBAAkB,QAAQ,CAAC,KAAT,GAAiB,MAAM,CAAC,KAF1C;AAAA,QAGA,gBAAgB,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,MAHzC;AAAA,QAIA,MAAM,MAAM,aAJZ;AAAA,QAKA,WAAW,WAAW,aALtB;AAAA,QAMA,SAAS,SAAS,aANlB;AAAA,QAOA,cAAc,cAAc,aAP5B;AAAA,QAQA,OAAO,OAAO,eARd;AAAA,QASA,YAAY,YAAY,eATxB;AAAA,QAUA,QAAQ,QAAQ,eAVhB;AAAA,QAWA,aAAa,aAAa,eAX1B;AAAA,QAYA,SAAU,GAAV,GAAe,SAAU,GAAV,GAAe,eAZ9B;AAAA,QAaA,SAAU,GAAV,GAAe,SAAU,GAAV,GAAe,aAb9B;AAAA,QAcA,WAAW,MAdX;eAeA,sBAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,EAAwC,MAAxC,EAhBF;OADa;IAAA,CAnRf;AAAA,IAwSA,EAAE,CAAC,KAAH,GAAW,SAAC,GAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAP,CAA9B;OAAA;AAEE,iBAAS,GAAT;AAAA,QACA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAsB,cAAtB,EAAsC,YAAtC,CADA;AAEA,eAAO,EAAP,CAJF;OADS;IAAA,CAxSX;AAAA,IA+SA,EAAE,CAAC,MAAH,GAAY,SAAC,GAAD;AACV,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,OAAP,CAA9B;OAAA;AAEE,kBAAU,GAAV;AACA,eAAO,EAAP,CAHF;OADU;IAAA,CA/SZ;AAAA,IAqTA,EAAE,CAAC,CAAH,GAAO,SAAC,GAAD;AACL,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,EAAP,CAA9B;OAAA;AAEE,aAAK,GAAL;AACA,eAAO,EAAP,CAHF;OADK;IAAA,CArTP;AAAA,IA2TA,EAAE,CAAC,CAAH,GAAO,SAAC,GAAD;AACL,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,EAAP,CAA9B;OAAA;AAEE,aAAK,GAAL;AACA,eAAO,EAAP,CAHF;OADK;IAAA,CA3TP;AAAA,IAiUA,EAAE,CAAC,IAAH,GAAU,SAAC,GAAD;AACR,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,cAAP,CAA9B;OAAA;AAEE,YAAG,eAAH;AACE,2BAAiB,GAAjB;AAAA,UACA,QAAQ,cAAc,CAAC,IAAf,EADR;AAAA,UAGA,EAAE,CAAC,KAAH,CAAS,cAAT,CAHA,CADF;SAAA;AAMA,eAAO,EAAP,CARF;OADQ;IAAA,CAjUV;AAAA,IA4UA,EAAE,CAAC,SAAH,GAAe,SAAC,GAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,UAAP,CAA9B;OAAA;AAEE,qBAAa,GAAb;AAAA,QACA,eAAe,UAAU,CAAC,SAAX,CAAqB,aAArB,CADf;AAEA,eAAO,EAAP,CAJF;OADa;IAAA,CA5Uf;AAAA,IAmVA,EAAE,CAAC,IAAH,GAAU,SAAC,GAAD;AACR,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,KAAP,CAA9B;OAAA;AAEE,gBAAQ,GAAR;AACA,eAAO,EAAP,CAHF;OADQ;IAAA,CAnVV;AAAA,IAyVA,EAAE,CAAC,UAAH,GAAgB,SAAC,GAAD;AACd,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,WAAP,CAA9B;OAAA;AAEE,sBAAc,GAAd;AAAA,QACA,gBAAgB,CAAC,WAAjB,CAA6B,WAA7B,CADA;AAEA,eAAO,EAAP,CAJF;OADc;IAAA,CAzVhB;AAAA,IAgWA,EAAE,CAAC,OAAH,GAAa,SAAC,GAAD;AACX,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,QAAP,CAA9B;OAAA;AAEE,mBAAW,GAAX;AACA,eAAO,EAAP,CAHF;OADW;IAAA,CAhWb;AAAA,IAsWA,EAAE,CAAC,EAAH,GAAQ,SAAC,IAAD,EAAO,QAAP;aACN,YAAY,CAAC,EAAb,CAAgB,IAAhB,EAAsB,QAAtB,EADM;IAAA,CAtWR;AAAA,IAyWA,EAAE,CAAC,MAAH,GAAY;AACV,aAAO,UAAP,CADU;IAAA,CAzWZ;AAAA,IA4WA,EAAE,CAAC,MAAH,GAAY;AACV,aAAO,YAAP,CADU;IAAA,CA5WZ;AAAA,IA+WA,EAAE,CAAC,KAAH,GAAW;AACT,aAAO,eAAc,MAArB,CADS;IAAA,CA/WX;AAkXA,WAAO,EAAP,CApXc;EAAA,CAAhB;AAqXA,SAAO,aAAP,CAvXkD;AAAA,CAApD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,gBAAnC,EAAqD,SAAC,IAAD;AACnD;AAAA,aAAW,CAAX;AAAA,EAEA,SAAS;AAEP;AAAA,UAAO,WAAO,CAAC,UAAD,CAAd;AAAA,IACA,aAAa,MADb;AAAA,IAEA,UAAU,KAFV;AAAA,IAGA,mBAAmB,EAAE,CAAC,QAAH,CAAY,UAAZ,CAHnB;AAAA,IAKA,UAAU;AACR;AAAA,UAAG,QAAH;AAAoB,eAApB;OAAA;AAAA,MACA,MAAM,EAAE,CAAC,MAAH,CAAU,IAAV,CADN;AAEA,UAAG,QAAH;AAAoB,eAApB;OAFA;AAGA,UAAG,GAAG,CAAC,OAAJ,CAAY,YAAZ,CAAH;AACE,qBAAa,GAAG,CAAC,OAAJ,CAAY,UAAZ,CAAb;AAAA,QACA,GAAG,CAAC,OAAJ,CAAY,UAAZ,EAAwB,WAAxB,CADA;AAAA,QAEA,cAAc,UAAU,CAAC,SAAX,CAAqB,WAArB,CAAiC,CAAC,IAAlC,EAAwC,CAAC,GAAzC,CAA6C,SAAC,CAAD;AAAO,cAAG,CAAC,CAAC,IAAL;mBAAe,CAAC,CAAC,KAAjB;WAAA;mBAA2B,EAA3B;WAAP;QAAA,CAA7C,CAFd;eAKA,gBAAgB,CAAC,QAAjB,CAA0B,WAA1B,EANF;OAJQ;IAAA,CALV;AAAA,IAiBA,KAAK,SAAC,GAAD;AACH,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,EAAP,CAA9B;OAAA;AAEE,WAEE,CAAC,EAFH,CAEM,OAFN,EAEe,OAFf;AAGA,eAAO,EAAP,CALF;OADG;IAAA,CAjBL;AAAA,IAyBA,EAAE,CAAC,EAAH,GAAQ;AACN,aAAO,GAAP,CADM;IAAA,CAzBR;AAAA,IA4BA,EAAE,CAAC,MAAH,GAAY,SAAC,GAAD;AACV,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,OAAP,CAA9B;OAAA;AAEE,kBAAU,GAAV;AACA,eAAO,EAAP,CAHF;OADU;IAAA,CA5BZ;AAAA,IAkCA,EAAE,CAAC,SAAH,GAAe,SAAC,GAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,UAAP,CAA9B;OAAA;AAEE,qBAAa,GAAb;AACA,eAAO,EAAP,CAHF;OADa;IAAA,CAlCf;AAAA,IAwCA,EAAE,CAAC,MAAH,GAAY;AACV,aAAO,gBAAP,CADU;IAAA,CAxCZ;AAAA,IA2CA,EAAE,CAAC,EAAH,GAAQ,SAAC,IAAD,EAAO,QAAP;AACN,sBAAgB,CAAC,EAAjB,CAAoB,IAApB,EAA0B,QAA1B;AACA,aAAO,EAAP,CAFM;IAAA,CA3CR;AA+CA,WAAO,EAAP,CAjDO;EAAA,CAFT;AAqDA,SAAO,MAAP,CAtDmD;AAAA,CAArD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,iBAAnC,EAAsD,SAAC,IAAD,EAAO,SAAP,EAAkB,UAAlB,EAA8B,QAA9B,EAAwC,cAAxC,EAAwD,WAAxD;AAEpD;AAAA,oBAAkB;AAEhB;AAAA,cAAU,KAAV;AAAA,IACA,QAAQ,KADR;AAAA,IAEA,kBAAkB,MAFlB;AAAA,IAGA,WAAW,MAHX;AAAA,IAIA,cAAc,MAJd;AAAA,IAKA,iBAAiB,MALjB;AAAA,IAMA,QAAO,MANP;AAAA,IAOA,aAAa,MAPb;AAAA,IAQA,eAAe,MARf;AAAA,IASA,QAAQ,MATR;AAAA,IAUA,mBAAmB,EAAE,CAAC,QAAH,CAAY,OAAZ,EAAqB,UAArB,EAAiC,YAAjC,EAA+C,OAA/C,CAVnB;AAAA,IAYA,SAAS,cAAc,CAAC,GAAf,CAAmB,cAAc,cAAjC,CAZT;AAAA,IAaA,cAAc,UAAU,CAAC,IAAX,CAAgB,IAAhB,CAbd;AAAA,IAcA,iBAAiB,SAAS,MAAT,EAAiB,WAAjB,CAdjB;AAAA,IAeA,OAAO,SAAS,CAAC,IAAV,CAAe,MAAf,CAfP;AAAA,IAiBA,WAAW,IAAK,GAAE,CAAC,qBAAR,EAjBX;AAAA,IAmBA,KAAK,aAnBL;AAAA,IAuBA,cAAc;AACZ;AAAA,aAAO,cAAe,GAAE,CAAC,qBAAlB,EAAP;AAAA,MAEA,UAAa,QAAQ,CAAC,KAAT,GAAiB,EAAjB,GAAsB,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,IAAI,CAAC,KAAxB,GAAgC,EAAzD,GAAiE,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,EAApF,GAA4F,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,IAAI,CAAC,KAAxB,GAAgC,EAFtI;AAAA,MAGA,UAAa,QAAQ,CAAC,MAAT,GAAkB,EAAlB,GAAuB,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,IAAI,CAAC,MAAxB,GAAiC,EAA3D,GAAmE,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,EAAtF,GAA8F,EAAE,CAAC,KAAK,CAAC,OAAT,GAAmB,IAAI,CAAC,MAAxB,GAAiC,EAHzI;AAAA,MAIA,WAAW,CAAC,QAAZ,GAAuB;AAAA,QACrB,UAAU,UADW;AAAA,QAErB,MAAM,UAAU,IAFK;AAAA,QAGrB,KAAK,UAAU,IAHM;AAAA,QAIrB,WAAW,IAJU;AAAA,QAKrB,SAAS,CALY;OAJvB;aAWA,WAAW,CAAC,MAAZ,GAZY;IAAA,CAvBd;AAAA,IAqCA,kBAAkB;AAChB,iBAAW,CAAC,QAAZ,GAAuB;AAAA,QACrB,UAAU,UADW;AAAA,QAErB,MAAM,IAAI,IAFW;AAAA,QAGrB,KAAK,IAAI,IAHY;AAAA,QAIrB,WAAW,IAJU;AAAA,QAKrB,SAAS,CALY;OAAvB;AAAA,MAOA,WAAW,CAAC,MAAZ,EAPA;aASA,CAAC,CAAC,QAAF,CAAW,WAAX,EAAwB,GAAxB,EAVgB;IAAA,CArClB;AAAA,IAmDA,eAAe;AACb;AAAA,UAAG,YAAe,KAAlB;AAA6B,eAA7B;OAAA;AAAA,MAEA,IAAI,CAAC,MAAL,CAAY,cAAZ,CAFA;AAAA,MAGA,WAAW,CAAC,MAAZ,GAAqB,EAHrB;AAOA,UAAG,eAAH;AACE,eAAO,EAAE,CAAC,KAAH,CAAS,IAAT,CAAP;AAAA,QACA,QAAQ,YAAY,CAAC,MAAb,CAAuB,YAAY,CAAC,YAAb,EAAH,GAAoC,IAAK,GAAzC,GAAiD,IAAK,GAA1E,CADR,CADF;OAAA;AAIE,gBAAQ,EAAE,CAAC,MAAH,CAAU,IAAV,CAAe,CAAC,KAAhB,EAAR,CAJF;OAPA;AAAA,MAaA,WAAW,CAAC,MAAZ,GAAqB,IAbrB;AAAA,MAcA,gBAAgB,CAAC,KAAK,CAAC,KAAvB,CAA6B,WAA7B,EAA0C,CAAC,KAAD,CAA1C,CAdA;AAAA,MAeA,iBAfA;AAkBA,UAAG,eAAH;AAEE,mBAAW,cAAc,CAAC,MAAf,CAAsB,aAAtB,CAAoC,CAAC,IAArC,EAA2C,CAAC,OAA5C,EAAX;AAAA,QACA,OAAO,EAAE,CAAC,KAAH,CAAS,KAAT,CADP;AAAA,QAEA,WAAW,UAAU,CAAC,MAAX,CAAkB,GAAlB,CACT,CAAC,IADQ,CACH,OADG,EACM,eADN,CAFX;AAAA,QAIA,cAAc,QAAQ,CAAC,MAAT,CAAgB,MAAhB,CAJd;AAKA,YAAG,YAAY,CAAC,YAAb,EAAH;AACE,qBAAW,CAAC,IAAZ,CAAiB;AAAA,YAAC,SAAM,YAAP;AAAA,YAAqB,IAAG,CAAxB;AAAA,YAA2B,IAAG,CAA9B;AAAA,YAAiC,IAAG,CAApC;AAAA,YAAsC,IAAG,QAAQ,CAAC,MAAlD;WAAjB,EADF;SAAA;AAGE,qBAAW,CAAC,IAAZ,CAAiB;AAAA,YAAC,SAAM,YAAP;AAAA,YAAqB,IAAG,CAAxB;AAAA,YAA2B,IAAG,QAAQ,CAAC,KAAvC;AAAA,YAA8C,IAAG,CAAjD;AAAA,YAAmD,IAAG,CAAtD;WAAjB,EAHF;SALA;AAAA,QAUA,WAAW,CAAC,KAAZ,CAAkB;AAAA,UAAC,QAAQ,UAAT;AAAA,UAAqB,kBAAkB,MAAvC;SAAlB,CAVA;eAYA,gBAAgB,CAAC,UAAU,CAAC,KAA5B,CAAkC,QAAlC,EAA4C,CAAC,KAAD,CAA5C,EAdF;OAnBa;IAAA,CAnDf;AAAA,IAwFA,cAAc;AACZ;AAAA,UAAG,YAAe,KAAlB;AAA6B,eAA7B;OAAA;AAAA,MACA,OAAO,EAAE,CAAC,KAAH,CAAS,KAAT,CADP;AAAA,MAEA,aAFA;AAGA,UAAG,eAAH;AAEE,kBAAU,YAAY,CAAC,MAAb,CAAuB,YAAY,CAAC,YAAb,EAAH,GAAoC,IAAK,GAAzC,GAAiD,IAAK,GAA1E,CAAV;AAAA,QACA,gBAAgB,CAAC,UAAU,CAAC,KAA5B,CAAkC,QAAlC,EAA4C,CAAC,OAAD,CAA5C,CADA;AAAA,QAEA,WAAW,CAAC,MAAZ,GAAqB,EAFrB;AAAA,QAGA,gBAAgB,CAAC,QAAQ,CAAC,KAA1B,CAAgC,WAAhC,EAA6C,CAAC,OAAD,CAA7C,CAHA,CAFF;OAHA;aASA,WAAW,CAAC,MAAZ,GAVY;IAAA,CAxFd;AAAA,IAsGA,eAAe;AAEb,UAAG,QAAH;AACE,gBAAQ,CAAC,MAAT,GADF;OAAA;AAAA,MAEA,WAAW,MAFX;AAAA,MAGA,WAAW,CAAC,MAAZ,GAAqB,KAHrB;aAIA,cAAc,CAAC,MAAf,GANa;IAAA,CAtGf;AAAA,IAgHA,EAAE,CAAC,IAAH,GAAU,SAAC,GAAD;AACR,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,KAAP,CAA9B;OAAA;AAEE,gBAAQ,GAAR;AACA,YAAG,QAAH;AACE,kBAAQ,CAAC,KAAT,CAAe,YAAf,EAAgC,KAAH,GAAc,QAAd,GAA4B,SAAzD,EADF;SADA;AAAA,QAGA,WAAW,CAAC,MAAZ,GAAqB,MAHrB;AAAA,QAIA,WAAW,CAAC,MAAZ,EAJA;AAKA,eAAO,EAAP,CAPF;OADQ;IAAA,CAhHV;AAAA,IA6HA,EAAE,CAAC,MAAH,GAAY,SAAC,GAAD;AACV,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,OAAP,CAA9B;OAAA;AAEE,kBAAU,GAAV;AACA,eAAO,EAAP,CAHF;OADU;IAAA,CA7HZ;AAAA,IAmIA,EAAE,CAAC,IAAH,GAAU,SAAC,GAAD;AACR,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,cAAP,CAA9B;OAAA;AAEE,yBAAiB,GAAjB;AAAA,QACA,QAAQ,cAAc,CAAC,IAAf,EADR;AAEA,YAAG,eAAH;AACE,YAAE,CAAC,OAAH,CAAW,cAAX,EADF;SAFA;AAIA,eAAO,EAAP,CANF;OADQ;IAAA,CAnIV;AAAA,IA4IA,EAAE,CAAC,SAAH,GAAe,SAAC,GAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,UAAP,CAA9B;OAAA;AAEE,qBAAa,GAAb;AACA,eAAO,EAAP,CAHF;OADa;IAAA,CA5If;AAAA,IAkJA,EAAE,CAAC,WAAH,GAAiB,SAAC,GAAD;AACf,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,YAAP,CAA9B;OAAA;AAEE,YAAG,GAAH;AACE,4BAAkB,IAAlB;AAAA,UACA,eAAe,GADf,CADF;SAAA;AAIE,4BAAkB,KAAlB,CAJF;SAAA;AAKA,eAAO,EAAP,CAPF;OADe;IAAA,CAlJjB;AAAA,IA4JA,EAAE,CAAC,IAAH,GAAU,SAAC,GAAD;AACR,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,KAAP,CAA9B;OAAA;AAEE,gBAAQ,GAAR;AACA,eAAO,EAAP,CAHF;OADQ;IAAA,CA5JV;AAAA,IAkKA,EAAE,CAAC,EAAH,GAAQ,SAAC,IAAD,EAAO,QAAP;aACN,gBAAgB,CAAC,EAAjB,CAAoB,IAApB,EAA0B,QAA1B,EADM;IAAA,CAlKR;AAAA,IAuKA,EAAE,CAAC,OAAH,GAAa,SAAC,CAAD;AACX,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,EAAP,CAA9B;OAAA;eAEE,CAAC,CAAC,EAAF,CAAK,oBAAL,EAA2B,YAA3B,CACE,CAAC,EADH,CACM,mBADN,EAC2B,WAD3B,CAEE,CAAC,EAFH,CAEM,oBAFN,EAE4B,YAF5B,EAFF;OADW;IAAA,CAvKb;AA8KA,WAAO,EAAP,CAhLgB;EAAA,CAAlB;AAkLA,SAAO,eAAP,CApLoD;AAAA,CAAtD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,UAAnC,EAA+C,SAAC,IAAD,EAAO,OAAP,EAAgB,eAAhB,EAAiC,aAAjC,EAAgD,cAAhD;AAE7C;AAAA,aAAW;AAET;AAAA,eAAW,iBAAX;AAAA,IACA,SAAS,eADT;AAAA,IAEA,aAAa,gBAFb;AAAA,IAGA,MAAM,CAAC,OAAP,CAAe,QAAf,CAHA;AAAA,IAKA,OAAO,SAAC,IAAD;AACL,YAAM,CAAC,IAAP,CAAY,IAAZ;aACA,QAAQ,CAAC,IAAT,CAAc,IAAd,EAFK;IAAA,CALP;AAAA,IASA,YAAY,SAAC,SAAD;AACV,YAAM,CAAC,SAAP,CAAiB,SAAjB;AAAA,MACA,UAAU,CAAC,SAAX,CAAqB,SAArB,CADA;aAEA,QAAQ,CAAC,SAAT,CAAmB,SAAnB,EAHU;IAAA,CATZ;AAAA,IAcA,QAAQ,SAAC,KAAD;aACN,MAAM,CAAC,KAAP,CAAa,KAAb,EADM;IAAA,CAdR;AAiBA,WAAO;AAAA,MAAC,SAAQ,QAAT;AAAA,MAAmB,OAAM,MAAzB;AAAA,MAAiC,UAAS,UAA1C;AAAA,MAAsD,SAAQ,IAA9D;AAAA,MAAoE,WAAU,SAA9E;AAAA,MAAyF,OAAM,KAA/F;KAAP,CAnBS;EAAA,CAAX;AAoBA,SAAO,QAAP,CAtB6C;AAAA,CAA/C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,OAAnC,EAA4C,SAAC,IAAD,EAAO,WAAP,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,WAApD;AAE1C;AAAA,cAAY,CAAZ;AAAA,EAEA,QAAQ;AAEN;AAAA,UAAO,UAAM,CAAC,WAAD,CAAb;AAAA,IAEA,KAAK,aAFL;AAAA,IAMA,WAAW,EANX;AAAA,IAOA,aAAa,MAPb;AAAA,IAQA,aAAa,MARb;AAAA,IASA,eAAe,MATf;AAAA,IAUA,QAAQ,MAVR;AAAA,IAWA,eAAe,KAXf;AAAA,IAYA,YAAY,UAZZ;AAAA,IAaA,qBAAqB,WAAW,CAAC,QAbjC;AAAA,IAiBA,aAAa,EAAE,CAAC,QAAH,CAAY,WAAZ,EAAyB,QAAzB,EAAmC,aAAnC,EAAkD,cAAlD,EAAkE,eAAlE,EAAmF,UAAnF,EAA+F,WAA/F,EAA4G,SAA5G,EAAuH,QAAvH,EAAiI,aAAjI,CAjBb;AAAA,IAkBA,SAAS,EAAE,CAAC,QAAH,CAAY,MAAZ,EAAoB,QAApB,CAlBT;AAAA,IAsBA,EAAE,CAAC,EAAH,GAAQ,SAAC,EAAD;AACN,aAAO,GAAP,CADM;IAAA,CAtBR;AAAA,IAyBA,EAAE,CAAC,WAAH,GAAiB,SAAC,SAAD;AACf,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,YAAP,CAA9B;OAAA;AAEE,uBAAe,SAAf;AAAA,QACA,SAAS,CAAC,OAAO,CAAC,MAAlB,CAAyB,YAAzB,CADA;AAEA,eAAO,EAAP,CAJF;OADe;IAAA,CAzBjB;AAAA,IAgCA,EAAE,CAAC,SAAH,GAAe,SAAC,MAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,QAAP,CAA9B;OAAA;AAEE,gBAAQ,CAAC,IAAT,CAAc,MAAd;AACA,eAAO,EAAP,CAHF;OADa;IAAA,CAhCf;AAAA,IAsCA,EAAE,CAAC,QAAH,GAAc,SAAC,KAAD,EAAQ,MAAR;AACZ,gBAAU,CAAC,GAAX,CAAe,KAAf;AACA,UAAG,MAAH;AACE,cAAM,CAAC,MAAP,EAAe,CAAC,GAAhB,CAAoB,KAApB,EADF;OAAA;AAGE,oBAAY,CAAC,GAAb,CAAiB,KAAjB,EAHF;OADA;AAKA,aAAO,EAAP,CANY;IAAA,CAtCd;AAAA,IA8CA,EAAE,CAAC,iBAAH,GAAuB,SAAC,GAAD;AACrB,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,kBAAP,CAA9B;OAAA;AAEE,6BAAqB,GAArB;AACA,eAAO,EAAP,CAHF;OADqB;IAAA,CA9CvB;AAAA,IAsDA,EAAE,CAAC,SAAH,GAAe,SAAC,GAAD;AACb,aAAO,UAAP,CADa;IAAA,CAtDf;AAAA,IAyDA,EAAE,CAAC,OAAH,GAAa;AACX,aAAO,QAAP,CADW;IAAA,CAzDb;AAAA,IA4DA,EAAE,CAAC,MAAH,GAAY;AACV,aAAO,YAAP,CADU;IAAA,CA5DZ;AAAA,IA+DA,EAAE,CAAC,SAAH,GAAe;AACb,aAAO,UAAP,CADa;IAAA,CA/Df;AAAA,IAkEA,EAAE,CAAC,QAAH,GAAc,SAAC,KAAD;AACZ,aAAO,EAAC,UAAW,CAAC,GAAX,CAAe,KAAf,CAAT,CADY;IAAA,CAlEd;AAAA,IAqEA,EAAE,CAAC,SAAH,GAAe;AACb,aAAO,UAAP,CADa;IAAA,CArEf;AAAA,IAwEA,EAAE,CAAC,KAAH,GAAW;AACT,aAAO,MAAP,CADS;IAAA,CAxEX;AAAA,IA2EA,EAAE,CAAC,OAAH,GAAa;AACX,aAAO,KAAP,CADW;IAAA,CA3Eb;AAAA,IA8EA,EAAE,CAAC,QAAH,GAAc;AACZ,aAAO,SAAP,CADY;IAAA,CA9Ed;AAAA,IAmFA,EAAE,CAAC,iBAAH,GAAuB,SAAC,IAAD,EAAO,WAAP;AACrB,UAAG,IAAH;AACE,gBAAQ,IAAR;AAAA,QACA,UAAU,CAAC,WAAX,CAAuB,IAAvB,EAA6B,WAA7B,CADA;AAAA,QAEA,UAAU,CAAC,YAAX,CAAwB,IAAxB,EAA8B,WAA9B,CAFA;AAAA,QAGA,UAAU,CAAC,aAAX,CAAyB,IAAzB,EAA+B,WAA/B,CAHA;AAAA,QAIA,UAAU,CAAC,QAAX,CAAoB,WAApB,CAJA;eAKA,UAAU,CAAC,SAAX,CAAqB,IAArB,EAA2B,WAA3B,EANF;OADqB;IAAA,CAnFvB;AAAA,IA4FA,EAAE,CAAC,eAAH,GAAqB,SAAC,WAAD;AACnB,UAAG,KAAH;AACE,kBAAU,CAAC,aAAX,CAAyB,KAAzB,EAAgC,WAAhC;AAAA,QACA,UAAU,CAAC,QAAX,CAAoB,WAApB,CADA;eAEA,UAAU,CAAC,SAAX,CAAqB,KAArB,EAA4B,WAA5B,EAHF;OADmB;IAAA,CA5FrB;AAAA,IAkGA,EAAE,CAAC,gBAAH,GAAsB,SAAC,IAAD,EAAO,WAAP;AACpB,UAAG,IAAH;AACE,gBAAQ,IAAR;AAAA,QACA,UAAU,CAAC,WAAX,CAAuB,IAAvB,EAA6B,WAA7B,CADA;AAAA,QAEA,UAAU,CAAC,YAAX,CAAwB,IAAxB,EAA8B,WAA9B,CAFA;AAAA,QAGA,UAAU,CAAC,QAAX,CAAoB,WAApB,CAHA;eAIA,UAAU,CAAC,SAAX,CAAqB,IAArB,EAA2B,WAA3B,EALF;OADoB;IAAA,CAlGtB;AAAA,IA0GA,EAAE,CAAC,eAAH,GAAqB,SAAC,WAAD;AACnB,UAAG,KAAH;AACE,kBAAU,CAAC,aAAX,CAAyB,KAAzB,EAAgC,WAAhC;AAAA,QACA,UAAU,CAAC,QAAX,CAAoB,WAApB,CADA;eAEA,UAAU,CAAC,SAAX,CAAqB,IAArB,EAA2B,WAA3B,EAHF;OADmB;IAAA,CA1GrB;AAAA,IAgHA,EAAE,CAAC,kBAAH,GAAwB;AACtB,UAAG,KAAH;AACE,kBAAU,CAAC,QAAX,CAAoB,IAApB;eACA,UAAU,CAAC,SAAX,CAAqB,KAArB,EAA4B,IAA5B,EAFF;OADsB;IAAA,CAhHxB;AAAA,IAqHA,EAAE,CAAC,SAAH,EAAc,CAAC,EAAf,CAAkB,eAAlB,EAAmC,EAAE,CAAC,iBAAtC,CArHA;AAAA,IAsHA,EAAE,CAAC,SAAH,EAAc,CAAC,EAAf,CAAkB,cAAlB,EAAkC,EAAE,CAAC,eAArC,CAtHA;AAAA,IAuHA,EAAE,CAAC,SAAH,EAAc,CAAC,EAAf,CAAkB,cAAlB,EAAkC,SAAC,WAAD;aAAiB,EAAE,CAAC,iBAAH,CAAqB,KAArB,EAA4B,WAA5B,EAAjB;IAAA,CAAlC,CAvHA;AAAA,IAwHA,EAAE,CAAC,SAAH,EAAc,CAAC,EAAf,CAAkB,aAAlB,EAAiC,EAAE,CAAC,eAApC,CAxHA;AAAA,IA4HA,SAAS,CAAC,KAAV,CAAgB,EAAhB,CA5HA;AAAA,IA6HA,aAAa,WAAW,CAAC,KAAZ,CAAkB,EAAlB,CA7Hb;AAAA,IA8HA,aAAa,WA9Hb;AAAA,IA+HA,eAAe,WA/Hf;AAiIA,WAAO,EAAP,CAnIM;EAAA,CAFR;AAuIA,SAAO,KAAP,CAzI0C;AAAA,CAA5C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,WAAnC,EAAgD,SAAC,IAAD,EAAO,OAAP,EAAgB,cAAhB,EAAgC,SAAhC,EAA2C,UAA3C,EAAuD,WAAvD,EAAoE,QAApE;AAE9C;AAAA,iBAAe,CAAf;AAAA,EAEA,YAAY;AAEV;AAAA,SAAK,aAAL;AAAA,IAIA,eAAe,UAAU,cAJzB;AAAA,IAKA,SAAS,MALT;AAAA,IAMA,WAAW,MANX;AAAA,IAOA,oBAAoB,MAPpB;AAAA,IAQA,WAAW,EARX;AAAA,IASA,WAAW,EATX;AAAA,IAUA,OAAO,MAVP;AAAA,IAWA,aAAa,MAXb;AAAA,IAYA,mBAAmB,MAZnB;AAAA,IAaA,aAAa,MAbb;AAAA,IAcA,UAAU,OAAO,CAAC,IAAR,CAAa,cAAc,CAAC,SAAD,CAA3B,CAdV;AAAA,IAeA,cAAc,CAfd;AAAA,IAgBA,eAAe,CAhBf;AAAA,IAiBA,QAAQ,MAjBR;AAAA,IAkBA,WAAW,MAlBX;AAAA,IAmBA,YAAY,MAnBZ;AAAA,IAuBA,iBAAiB;AACf,aAAO,iBAAiB,CAAC,MAAlB,CAAyB,KAAzB,CAA+B,CAAC,IAAhC,CAAqC,OAArC,EAA8C,UAA9C,CACP,CAAC,MADM,CACC,KADD,CAAP;AAAA,MAEA,IAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB,CAAC,MAApB,CAA2B,UAA3B,CAAsC,CAAC,IAAvC,CAA4C,IAA5C,EAAmD,UAAO,YAA1D,CAAyE,CAAC,MAA1E,CAAiF,MAAjF,CAFA;AAAA,MAGA,aAAY,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,CAAC,IAAjB,CAAsB,OAAtB,EAA8B,oBAA9B,CAHZ;AAAA,MAIA,WAAW,UAAU,CAAC,MAAX,CAAkB,GAAlB,CAAsB,CAAC,IAAvB,CAA4B,OAA5B,EAAqC,SAArC,CAA+C,CAAC,KAAhD,CAAsD,gBAAtD,EAAwE,KAAxE,CAJX;AAAA,MAKA,QAAQ,CAAC,MAAT,CAAgB,MAAhB,CAAuB,CAAC,KAAxB,CAA8B,YAA9B,EAA4C,QAA5C,CAAqD,CAAC,IAAtD,CAA2D,OAA3D,EAAoE,YAApE,CAAiF,CAAC,KAAlF,CAAwF;AAAA,QAAC,MAAK,YAAN;OAAxF,CALA;aAMA,aAAa,UAAU,CAAC,MAAX,CAAkB,GAAlB,CAAsB,CAAC,IAAvB,CAA4B,OAA5B,EAAqC,WAArC,EAPE;IAAA,CAvBjB;AAAA,IAgCA,WAAW,SAAC,MAAD;AACT;AAAA,aAAO,UAAU,CAAC,MAAX,CAAmB,WAAQ,MAA3B,CAAP;AACA,UAAG,IAAI,CAAC,KAAL,EAAH;AACE,eAAO,UAAU,CAAC,MAAX,CAAkB,GAAlB,CAAsB,CAAC,IAAvB,CAA4B,OAA5B,EAAqC,UAAO,MAA5C,CAAP,CADF;OADA;AAGA,UAAG,WAAU,QAAb;AACE,YAAI,CAAC,IAAL,CAAU,WAAV,EAAuB,SAAC,CAAD;iBAAQ,kBAAe,YAAf,GAA4B,IAApC;QAAA,CAAvB,EADF;OAHA;AAKA,UAAG,WAAU,OAAb;AACE,YAAI,CAAC,IAAL,CAAU,WAAV,EAAuB,SAAC,CAAD;iBAAQ,eAAY,WAAZ,GAAwB,OAAhC;QAAA,CAAvB,EADF;OALA;AAOA,aAAO,IAAP,CARS;IAAA,CAhCX;AAAA,IA0CA,cAAc,SAAC,MAAD;aACZ,UAAU,CAAC,MAAX,CAAmB,WAAQ,MAA3B,CAAoC,CAAC,MAArC,GADY;IAAA,CA1Cd;AAAA,IA6CA,eAAe,SAAC,MAAD;aACb,UAAU,CAAC,MAAX,CAAmB,YAAS,MAA5B,CAAqC,CAAC,MAAtC,GADa;IAAA,CA7Cf;AAAA,IAgDA,YAAY,SAAC,MAAD;AACV;AAAA,cAAQ,UAAU,CAAC,MAAX,CAAmB,YAAS,MAA5B,CAAR;AACA,UAAG,KAAK,CAAC,KAAN,EAAH;AACE,gBAAQ,UAAU,CAAC,MAAX,CAAkB,GAAlB,CAAsB,CAAC,IAAvB,CAA4B,OAA5B,EAAqC,WAAQ,MAA7C,CAAR,CADF;OADA;AAGA,cAAO,MAAP;AAAA,aACO,KADP;AAEI,eAAK,CAAC,IAAN,CAAW,WAAX,EAAwB,SAAC,CAAD;mBAAQ,eAAW,CAAC,cAAY,CAAb,CAAX,GAA0B,IAA1B,GAA6B,CAAC,QAAQ,CAAC,GAAV,CAA7B,GAA2C,IAAnD;UAAA,CAAxB,EAFJ;AACO;AADP,aAGO,QAHP;AAII,eAAK,CAAC,IAAN,CAAW,WAAX,EAAwB,SAAC,CAAD;mBAAQ,eAAW,CAAC,cAAY,CAAb,CAAX,GAA0B,GAA1B,GAA4B,CAAC,eAAa,OAAO,CAAC,MAAtB,CAA5B,GAAyD,IAAjE;UAAA,CAAxB,EAJJ;AAGO;AAHP,aAKO,MALP;AAMI,eAAK,CAAC,IAAN,CAAW,WAAX,EAAwB,SAAC,CAAD;mBAAQ,eAAW,CAAC,QAAQ,CAAC,IAAV,CAAX,GAA0B,GAA1B,GAA4B,CAAC,eAAa,CAAd,CAA5B,GAA4C,eAApD;UAAA,CAAxB,EANJ;AAKO;AALP,aAOO,OAPP;AAQI,eAAK,CAAC,IAAN,CAAW,WAAX,EAAwB,SAAC,CAAD;mBAAO,eAAW,CAAC,cAAY,OAAO,CAAC,KAArB,CAAX,GAAsC,GAAtC,GAAwC,CAAC,eAAa,CAAd,CAAxC,GAAwD,cAA/D;UAAA,CAAxB,EARJ;AAAA,OAHA;AAYA,aAAO,KAAP,CAbU;IAAA,CAhDZ;AAAA,IAiEA,EAAE,CAAC,EAAH,GAAQ;AACN,aAAO,YAAP,CADM;IAAA,CAjER;AAAA,IAoEA,EAAE,CAAC,KAAH,GAAW,SAAC,KAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAP,CAA9B;OAAA;AAEE,iBAAS,KAAT;AAAA,QAEA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAuB,mBAAe,CAAC,EAAE,CAAC,EAAH,EAAD,CAAtC,EAAkD,EAAE,CAAC,aAArD,CAFA;AAAA,QAGA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAuB,cAAU,CAAC,EAAE,CAAC,EAAH,EAAD,CAAjC,EAA6C,EAAE,CAAC,QAAhD,CAHA;AAIA,eAAO,EAAP,CANF;OADS;IAAA,CApEX;AAAA,IA6EA,EAAE,CAAC,OAAH,GAAa,SAAC,IAAD;AACX;AAAA,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,QAAP,CAA9B;OAAA;AAEE,yBAAiB;iBAAO,EAAE,CAAC,KAAH,EAAU,CAAC,SAAX,EAAsB,CAAC,MAAvB,CAA8B,IAA9B,EAAP;QAAA,CAAjB;AAAA,QACA,WAAW,IADX;AAAA,QAEA,oBAAoB,EAAE,CAAC,MAAH,CAAU,QAAV,CAFpB;AAGA,YAAG,iBAAiB,CAAC,KAAlB,EAAH;AACE,cAAI,CAAC,KAAL,CAAY,oBAAiB,QAAjB,GAA0B,iBAAtC,EADF;SAAA;AAGE,UAAI,iBAAa,QAAQ,CAAC,aAAtB,EAAqC,cAArC,CAAJ;AAAA,UACA,gBADA,CAHF;SAHA;AAQA,eAAO,EAAP,CAVF;OADW;IAAA,CA7Eb;AAAA,IA0FA,EAAE,CAAC,SAAH,GAAe,SAAC,MAAD;AACb,cAAQ,CAAC,IAAT,CAAc,MAAd;AACA,aAAO,EAAP,CAFa;IAAA,CA1Ff;AAAA,IA8FA,EAAE,CAAC,MAAH,GAAY;AACV,aAAO,YAAP,CADU;IAAA,CA9FZ;AAAA,IAiGA,EAAE,CAAC,KAAH,GAAW;AACT,aAAO,WAAP,CADS;IAAA,CAjGX;AAAA,IAoGA,EAAE,CAAC,OAAH,GAAa;AACX,aAAO,OAAP,CADW;IAAA,CApGb;AAAA,IAuGA,EAAE,CAAC,YAAH,GAAkB;AAChB,aAAO,gBAAgB,CAAC,MAAjB,CAAwB,YAAxB,CAAP,CADgB;IAAA,CAvGlB;AAAA,IA0GA,EAAE,CAAC,UAAH,GAAgB;AACd,aAAO,QAAP,CADc;IAAA,CA1GhB;AAAA,IA6GA,EAAE,CAAC,YAAH,GAAkB;AAChB,aAAO,gBAAP,CADgB;IAAA,CA7GlB;AAAA,IAmHA,EAAE,CAAC,aAAH,GAAmB;AAEjB;AAAA,eAAS,iBAAiB,CAAC,IAAlB,EAAwB,CAAC,qBAAzB,EAAT;AACA,UAAG,MAAM,CAAC,KAAP,IAAgB,CAAnB;AAA0B,eAA1B;OADA;AAAA,MAEA,UAAU,OAAO,CAAC,IAAR,CAAa,cAAc,CAAC,SAAD,CAA3B,CAFV;AAGA;yBAAA;AACE;AAAA;sBAAA;AACE,cAAG,CAAC,CAAC,QAAF,EAAH;AACE,sBAAU,CAAC,CAAC,UAAF,EAAV;AAAA,YACA,OAAQ,SAAR,GAAmB,cAAc,CAAC,IAAK,SADvC;AAEA,gBAAG,CAAC,CAAC,SAAF,EAAH;AACE,qBAAQ,SAAR,IAAoB,cAAc,CAAC,KAAM,SAAzC,CADF;aAHF;WADF;AAAA,SADF;AAAA,OAHA;AAAA,MAWA,cAAc,MAAM,CAAC,KAAP,GAAe,OAAO,CAAC,IAAvB,GAA8B,OAAO,CAAC,KAXpD;AAAA,MAYA,eAAe,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,GAAxB,GAA8B,OAAO,CAAC,MAZrD;AAAA,MAaA,IAAI,CAAC,MAAL,CAAa,WAAQ,YAAR,GAAqB,OAAlC,CAAyC,CAAC,IAA1C,CAA+C,OAA/C,EAAwD,WAAxD,CAAoE,CAAC,IAArE,CAA0E,QAA1E,EAAoF,YAApF,CAbA;AAAA,MAcA,mBAAmB,UAAU,CAAC,IAAX,CAAgB,WAAhB,EAA6B,SAAC,CAAD;eAAQ,eAAY,OAAO,CAAC,IAApB,GAAyB,IAAzB,GAA6B,OAAO,CAAC,GAArC,GAAyC,IAAjD;MAAA,CAA7B,CAdnB;AAAA,MAeA,gBAAgB,CAAC,MAAjB,CAAwB,YAAxB,CAAqC,CAAC,KAAtC,CAA4C,WAA5C,EAA0D,eAAY,YAAZ,GAAyB,GAAnF,CAfA;AAAA,MAgBA,gBAAgB,CAAC,MAAjB,CAAwB,UAAxB,CAAmC,CAAC,KAApC,CAA0C,WAA1C,EAAwD,eAAY,YAAZ,GAAyB,GAAjF,CAhBA;AAAA,MAiBA,gBAAgB,CAAC,MAAjB,CAAwB,sBAAxB,CAA+C,CAAC,IAAhD,CAAqD,OAArD,EAA8D,WAA9D,CAA0E,CAAC,IAA3E,CAAgF,QAAhF,EAA0F,YAA1F,CAjBA;AAAA,MAkBA,MAAM,CAAC,QAAP,EAAiB,CAAC,OAAlB,CAA0B,QAA1B,CAlBA;AAAA,MAmBA,MAAM,CAAC,QAAP,EAAiB,CAAC,SAAlB,CAA4B,gBAA5B,CAnBA;AAqBA,aAAO,EAAP,CAvBiB;IAAA,CAnHnB;AAAA,IA8IA,EAAE,CAAC,QAAH,GAAc,SAAC,WAAD;AACZ;AAAA,iBAAc,WAAH,GAAoB,CAApB,GAA2B,EAAE,CAAC,KAAH,EAAU,CAAC,iBAAX,EAAtC;AAEA;WAAA;yBAAA;AACE;;AAAA;AAAA;eAAA;wBAAA;AACE,gBAAG,CAAC,CAAC,YAAF,EAAH;AACE,eAAC,CAAC,KAAF,CAAQ,CAAC,CAAD,EAAI,WAAJ,CAAR,EADF;aAAA;AAEA,gBAAG,CAAC,CAAC,UAAF,EAAH;AACE,eAAC,CAAC,KAAF,CAAQ,CAAC,YAAD,EAAe,CAAf,CAAR,EADF;aAFA;AAKA,gBAAG,CAAC,CAAC,QAAF,EAAH;AACE,eAAC,CAAC,IAAF,EAAQ,CAAC,KAAT,CAAe,CAAC,CAAC,KAAF,EAAf;AAAA,cACA,IAAI,SAAS,CAAC,CAAC,UAAF,EAAT,CADJ;AAEA,kBAAG,CAAC,CAAC,QAAF,EAAH;AACE,iBAAC,CAAC,IAAF,EAAQ,CAAC,QAAT,CAAqB,CAAC,CAAC,YAAF,EAAH,GAAyB,aAAzB,GAA4C,YAA9D,CAA2E,CAAC,WAA5E,CAAwF,CAAxF,EADF;eAAA;AAGE,iBAAC,CAAC,IAAF,EAAQ,CAAC,QAAT,CAAkB,CAAlB,EAHF;eAFA;AAAA,cAMA,CAAC,CAAC,IAAF,EAAQ,CAAC,MAAT,CAAgB,CAAC,CAAC,UAAF,EAAhB,CANA;AAAA,cAOA,CAAC,CAAC,UAAF,EAAc,CAAC,QAAf,CAAwB,QAAxB,CAAiC,CAAC,IAAlC,CAAuC,CAAC,CAAC,IAAF,EAAvC,CAPA;AAAA,cAQA,CAAC,CAAC,SAAF,CAAY,OAAZ,CAAoB,CAAC,KAArB,CAA2B,gBAA3B,EAA6C,MAA7C,CARA;AASA,kBAAG,CAAC,CAAC,SAAF,EAAH;AACE,uBAAO,UAAW,EAAC,CAAC,IAAF,GAAS,CAAC,WAAY,EAAC,CAAC,UAAF,GAAxC;AAAA,gBACA,MAAM,UAAU,CAAC,CAAC,UAAF,EAAV,CADN;AAAA,gBAEA,MAAM,GAAG,CAAC,SAAJ,CAAc,aAAd,CAFN;AAGA,oBAAG,GAAG,CAAC,KAAJ,EAAH;AACE,wBAAM,GAAG,CAAC,MAAJ,CAAW,MAAX,CAAkB,CAAC,IAAnB,CAAwB,OAAxB,EAAgC,YAAhC,CAA6C,CAAC,IAA9C,CAAmD,IAAnD,EAAyD,SAAC,CAAD;2BAAO,KAAP;kBAAA,CAAzD,CAAN,CADF;iBAHA;AAAA,gBAKA,GAAG,CAAC,IAAJ,CAAS,CAAC,CAAC,SAAF,EAAT,CAAuB,CAAC,IAAxB,CAA6B,aAA7B,EAA2C,QAA3C,CAAoD,CAAC,KAArD,CAA2D,WAA3D,EAAwE,UAAU,CAAC,aAAnF,CALA,CADF;eAAA;AAQE,6BAAa,CAAC,CAAC,UAAF,EAAb,EARF;eAVF;aALA;AAwBA,gBAAG,CAAC,CAAC,aAAF,MAAsB,CAAC,CAAC,aAAF,OAAuB,CAAC,CAAC,UAAF,EAAhD;AACE,0BAAY,CAAC,CAAC,aAAF,EAAZ;AAAA,6BACA,aAAa,CAAC,CAAC,aAAF,EAAb,EADA,CADF;aAAA;qCAAA;aAzBF;AAAA;;aAAA,CADF;AAAA;sBAHY;IAAA,CA9Id;AAAA,IAiLA,EAAE,CAAC,cAAH,GAAoB,SAAC,KAAD;AAClB;AAAA,UAAG,KAAK,CAAC,QAAN,EAAH;AACE,YAAI,gBAAgB,CAAC,MAAjB,CAAyB,WAAO,CAAC,KAAK,CAAC,IAAN,EAAY,CAAC,MAAb,EAAD,CAAhC,CAAJ;AAAA,QACA,CAAC,CAAC,IAAF,CAAO,KAAK,CAAC,IAAN,EAAP,CADA,CADF;OAAA;AAGA,aAAO,EAAP,CAJkB;IAAA,CAjLpB;AAuLA,WAAO,EAAP,CAzLU;EAAA,CAFZ;AA6LA,SAAO,SAAP,CA/L8C;AAAA,CAAhD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,QAAnC,EAA6C,SAAC,IAAD,EAAO,KAAP,EAAc,SAAd,EAAyB,MAAzB;AAE3C;AAAA,eAAa,CAAb;AAAA,EAEA,SAAS;AACP;AAAA,UAAO,WAAO,CAAC,YAAD,CAAd;AAAA,IACA,aAAa,MADb;AAAA,IAEA,QAAQ,MAFR;AAAA,IAGA,SAAS,MAHT;AAAA,IAIA,aAAa,WAJb;AAAA,IAKA,mBAAmB,EAAE,CAAC,QAAH,CAAY,WAAZ,EAAyB,MAAzB,EAAiC,aAAjC,EAAgD,OAAhD,EAAyD,QAAzD,EAAmE,UAAnE,EAA+E,QAA/E,EAAyF,aAAzF,EAAwG,WAAxG,CALnB;AAAA,IAOA,KAAK,aAPL;AAAA,IASA,EAAE,CAAC,EAAH,GAAQ,SAAC,EAAD;AACN,aAAO,GAAP,CADM;IAAA,CATR;AAAA,IAYA,EAAE,CAAC,KAAH,GAAW,SAAC,KAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAP,CAA9B;OAAA;AAEE,iBAAS,KAAT;AAAA,QACA,UAAU,CAAC,YAAX,CAAwB,KAAK,CAAC,MAAN,EAAxB,CADA;AAAA,QAEA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAuB,eAAW,CAAC,EAAE,CAAC,EAAH,EAAD,CAAlC,EAA8C;iBAAM,gBAAgB,CAAC,SAAS,CAAC,KAA3B,CAAiC,EAAE,CAAC,MAAH,EAAjC,EAAN;QAAA,CAA9C,CAFA;AAAA,QAGA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAuB,eAAW,CAAC,EAAE,CAAC,EAAH,EAAD,CAAlC,EAA8C,EAAE,CAAC,IAAjD,CAHA;AAAA,QAIA,MAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAuB,iBAAa,CAAC,EAAE,CAAC,EAAH,EAAD,CAApC,EAAgD,EAAE,CAAC,WAAnD,CAJA;AAKA,eAAO,EAAP,CAPF;OADS;IAAA,CAZX;AAAA,IAsBA,EAAE,CAAC,MAAH,GAAY;AACV,aAAO,UAAP,CADU;IAAA,CAtBZ;AAAA,IAyBA,EAAE,CAAC,eAAH,GAAqB;AACnB,aAAO,EAAE,CAAC,MAAH,EAAW,CAAC,kBAAZ,EAAP,CADmB;IAAA,CAzBrB;AAAA,IA4BA,EAAE,CAAC,SAAH,GAAe,SAAC,GAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,UAAP,CAA9B;OAAA;AAEE,qBAAa,GAAb;AACA,eAAO,EAAP,CAHF;OADa;IAAA,CA5Bf;AAAA,IAkCA,EAAE,CAAC,QAAH,GAAc;aACZ,EAAE,CAAC,KAAH,EAAU,CAAC,QAAX,GADY;IAAA,CAlCd;AAAA,IAqCA,EAAE,CAAC,WAAH,GAAiB,SAAC,IAAD;AACf;AAAA,aAAO,EAAP;AACA;AAAA;wBAAA;AACE,YAAI,CAAC,IAAL,CAAU,UAAU,CAAC,OAAX,CAAmB,IAAnB,CAAV,EADF;AAAA,OADA;aAGA,gBAAgB,CAAC,WAAW,CAAC,KAA7B,CAAmC,IAAnC,EAAyC,IAAzC,EAJe;IAAA,CArCjB;AAAA,IA2CA,EAAE,CAAC,SAAH,GAAe;AACb,aAAO,gBAAP,CADa;IAAA,CA3Cf;AAAA,IAiDA,cAAc;AACZ;AAAA,kBAAY,UAAU,CAAC,YAAX,EAAZ;AAAA,MACA,WAAW,SAAS,CAAC,MAAV,CAAkB,MAAE,CAAC,EAAE,CAAC,EAAH,EAAD,CAApB,CADX;AAEA,UAAG,QAAQ,CAAC,KAAT,EAAH;AACE,mBAAW,SAAS,CAAC,MAAV,CAAiB,GAAjB,CAAqB,CAAC,IAAtB,CAA2B,OAA3B,EAAoC,SAAC,CAAD;iBAAO,EAAE,CAAC,EAAH,GAAP;QAAA,CAApC,CAAX,CADF;OAFA;AAIA,aAAO,QAAP,CALY;IAAA,CAjDd;AAAA,IAwDA,YAAY,SAAC,IAAD,EAAO,WAAP;AACV;AAAA,gBAAU;AAAA,QACR,QAAO,UAAU,CAAC,MAAX,EADC;AAAA,QAER,OAAM,UAAU,CAAC,KAAX,EAFE;AAAA,QAGR,SAAQ,UAAU,CAAC,OAAX,EAHA;AAAA,QAIR,UAAa,WAAH,GAAoB,CAApB,GAA2B,EAAE,CAAC,KAAH,EAAU,CAAC,iBAAX,EAJ7B;OAAV;AAAA,MAMA,OAAO,CAAC,IAAD,EAAO,OAAP,CANP;AAOA;AAAA;wBAAA;AACE,YAAI,CAAC,IAAL,CAAU,UAAU,CAAC,OAAX,CAAmB,IAAnB,CAAV,EADF;AAAA,OAPA;AASA,aAAO,IAAP,CAVU;IAAA,CAxDZ;AAAA,IAsEA,EAAE,CAAC,IAAH,GAAU,SAAC,IAAD,EAAO,WAAP;AACR,cAAQ,IAAR;AAAA,MAEA,gBAAgB,CAAC,IAAI,CAAC,KAAtB,CAA4B,aAA5B,EAA2C,UAAU,IAAV,EAAgB,WAAhB,CAA3C,CAFA;AAAA,MAIA,gBAAgB,CAAC,EAAjB,CAAoB,QAApB,EAA8B,EAAE,CAAC,MAAjC,CAJA;AAAA,MAKA,gBAAgB,CAAC,EAAjB,CAAoB,QAApB,EAA8B,EAAE,CAAC,KAAH,EAAU,CAAC,SAAX,EAAsB,CAAC,MAArD,CALA;AAAA,MAMA,gBAAgB,CAAC,EAAjB,CAAoB,UAApB,EAAgC,EAAE,CAAC,KAAH,EAAU,CAAC,SAAX,EAAsB,CAAC,QAAvD,CANA;AAAA,MAOA,gBAAgB,CAAC,EAAjB,CAAoB,aAApB,EAAmC,EAAE,CAAC,KAAH,EAAU,CAAC,SAAX,EAAsB,CAAC,WAA1D,CAPA;aASA,gBAAgB,CAAC,EAAjB,CAAoB,OAApB,EAA6B,SAAC,IAAD,EAAO,WAAP;AAC3B,kBAAU,CAAC,cAAX,CAA0B,IAA1B;eACA,gBAAgB,CAAC,SAAS,CAAC,KAA3B,CAAiC,aAAjC,EAAgD,UAAU,KAAV,EAAiB,WAAjB,CAAhD,EAF2B;MAAA,CAA7B,EAVQ;IAAA,CAtEV;AAoFA,WAAO,EAAP,CArFO;EAAA,CAFT;AAyFA,SAAO,MAAP,CA3F2C;AAAA,CAA7C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,QAAnC,EAA6C,SAAC,IAAD,EAAO,QAAP,EAAiB,UAAjB,EAA6B,cAA7B,EAA6C,WAA7C;AAE3C;AAAA,cAAY,CAAZ;AAAA,EAEA,eAAe,SAAC,GAAD;AACb;AAAA,UAAM,EAAN;AACA;kBAAA;AACE,SAAI,GAAJ,GAAS,CAAT,CADF;AAAA,KADA;AAGA,WAAO,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAP,CAJa;EAAA,CAFf;AAAA,EAQA,SAAS;AAEP;AAAA,UAAO,YAAQ,CAAC,WAAD,CAAf;AAAA,IACA,YAAY,WADZ;AAAA,IAEA,SAAS,MAFT;AAAA,IAGA,gBAAgB,MAHhB;AAAA,IAIA,eAAe,UAAU,CAAC,IAAX,CAAgB,IAAhB,CAJf;AAAA,IAKA,YAAY,MALZ;AAAA,IAMA,kBAAkB,MANlB;AAAA,IAOA,gBAAgB,MAPhB;AAAA,IAQA,aAAa,MARb;AAAA,IASA,SAAS,MATT;AAAA,IAUA,UAAU,MAVV;AAAA,IAWA,QAAQ,MAXR;AAAA,IAYA,WAAW,MAZX;AAAA,IAaA,QAAQ,KAbR;AAAA,IAcA,cAAc,KAdd;AAAA,IAgBA,KAAK,EAhBL;AAAA,IAkBA,EAAE,CAAC,QAAH,GAAc,SAAC,GAAD;AACZ,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,SAAP,CAA9B;OAAA;AAEE,oBAAY,GAAZ;AACA,eAAO,EAAP,CAHF;OADY;IAAA,CAlBd;AAAA,IAwBA,EAAE,CAAC,IAAH,GAAU,SAAC,GAAD;AACR,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,KAAP,CAA9B;OAAA;AAEE,gBAAQ,GAAR;AACA,eAAO,EAAP,CAHF;OADQ;IAAA,CAxBV;AAAA,IA8BA,EAAE,CAAC,UAAH,GAAgB,SAAC,GAAD;AACd,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,WAAP,CAA9B;OAAA;AAEE,sBAAc,GAAd;AACA,eAAO,EAAP,CAHF;OADc;IAAA,CA9BhB;AAAA,IAoCA,EAAE,CAAC,GAAH,GAAS,SAAC,SAAD;AACP,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,UAAP,CAA9B;OAAA;AAEE,qBAAa,SAAb;AACA,eAAO,EAAP,CAHF;OADO;IAAA,CApCT;AAAA,IA0CA,EAAE,CAAC,MAAH,GAAY,SAAC,MAAD;AACV,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,OAAP,CAA9B;OAAA;AAEE,kBAAU,MAAV;AACA,eAAO,EAAP,CAHF;OADU;IAAA,CA1CZ;AAAA,IAgDA,EAAE,CAAC,KAAH,GAAW,SAAC,KAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAP,CAA9B;OAAA;AAEE,iBAAS,KAAT;AACA,eAAO,EAAP,CAHF;OADS;IAAA,CAhDX;AAAA,IAsDA,EAAE,CAAC,KAAH,GAAW,SAAC,KAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAP,CAA9B;OAAA;AAEE,iBAAS,KAAT;AACA,eAAO,EAAP,CAHF;OADS;IAAA,CAtDX;AAAA,IA4DA,EAAE,CAAC,QAAH,GAAc,SAAC,IAAD;AACZ,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,aAAP,CAA9B;OAAA;AAEE,wBAAgB,IAAhB;AAAA,QACA,YAAY,cAAc,CAAC,GAAf,CAAmB,aAAnB,CADZ;AAAA,QAEA,kBAAkB,SAAS,SAAT,EAAoB,YAApB,CAFlB;AAGA,eAAO,EAAP,CALF;OADY;IAAA,CA5Dd;AAAA,IAoEA,EAAE,CAAC,IAAH,GAAU,SAAC,IAAD,EAAO,OAAP;AACR;AAAA,cAAQ,IAAR;AAAA,MACA,WAAW,OADX;AAAA,MAGA,gBAAgB,cAAc,EAAE,CAAC,MAAH,CAAU,EAAE,CAAC,KAAH,EAAU,CAAC,MAAX,EAAmB,CAAC,SAApB,EAA+B,CAAC,OAAhC,EAAV,CAAoD,CAAC,MAArD,CAA4D,WAA5D,CAH9B;AAIA,UAAG,EAAE,CAAC,IAAH,EAAH;AACE,YAAG,aAAa,CAAC,MAAd,CAAqB,qBAArB,CAA2C,CAAC,KAA5C,EAAH;AACE,iBAAO,CAAC,OAAR,CAAgB,aAAa,CAAC,IAAd,EAAhB,CAAqC,CAAC,MAAtC,CAA6C,eAA7C,EADF;SAAA;AAGA,YAAG,EAAE,CAAC,UAAH,EAAH;AACE,mBAAS,aAAa,MAAM,CAAC,KAAP,CAAa,IAAb,CAAb,CAAT,CADF;SAAA;AAGE,mBAAS,MAAM,CAAC,SAAP,CAAiB,IAAjB,CAAT,CAHF;SAHA;AAAA,QAQA,IAAI,MAAM,CAAC,KAAP,EARJ;AASA,+CAAc,CAAE,MAAb,EAAqB,CAAC,UAAtB,WAAH;AACE,cAAI,EAAE,CAAC,MAAH,EAAW,CAAC,MAAZ,EAAoB,CAAC,UAArB,EAAiC,CAAC,KAAlC,EAAJ,CADF;SATA;AAWA,YAAG,MAAM,CAAC,IAAP,OAAmB,OAAtB;AACE,sBAAY,CAAC,UAAb,GAA0B,MAAM,CAAC,GAAP,CAAW,SAAC,CAAD;mBAAO;AAAA,cAAC,OAAM,CAAP;AAAA,cAAU,OAAM;AAAA,gBAAC,oBAAmB,EAAE,CAAF,CAApB;eAAhB;cAAP;UAAA,CAAX,CAA1B,CADF;SAAA;AAGE,sBAAY,CAAC,UAAb,GAA0B,MAAM,CAAC,GAAP,CAAW,SAAC,CAAD;mBAAO;AAAA,cAAC,OAAM,CAAP;AAAA,cAAU,MAAK,EAAE,CAAC,GAAG,CAAC,MAAP,EAAe,CAAC,IAAhB,CAAqB,EAAE,CAAF,CAArB,CAA0B,CAAC,IAA3B,CAAgC,EAAhC,GAAf;cAAP;UAAA,CAAX,CAA1B,CAHF;SAXA;AAAA,QAgBA,YAAY,CAAC,UAAb,GAA0B,IAhB1B;AAAA,QAiBA,YAAY,CAAC,QAAb,GAAwB;AAAA,UACtB,UAAS,UADa;SAjBxB;AAoBA,YAAG,WAAH;AACE;AAAA;0BAAA;AACE,wBAAY,CAAC,QAAS,GAAtB,GAA2B,KAAG,OAAO,CAAC,OAAQ,GAAnB,GAAsB,IAAjD,CADF;AAAA,WADF;SApBA;AAAA,QAuBA,YAAY,CAAC,KAAb,GAAqB,MAvBrB,CADF;OAAA;AA0BE,uBAAe,CAAC,MAAhB,GA1BF;OAJA;AA+BA,aAAO,EAAP,CAhCQ;IAAA,CApEV;AAAA,IAsGA,EAAE,CAAC,QAAH,GAAc,SAAC,MAAD;AACZ,YAAM,CAAC,SAAP,EAAkB,CAAC,EAAnB,CAAuB,UAAO,GAA9B,EAAqC,EAAE,CAAC,IAAxC;AACA,aAAO,EAAP,CAFY;IAAA,CAtGd;AAAA,IA0GA,EAAE,CAAC,QAAH,CAAY,cAAc,aAA1B,CA1GA;AAAA,IA4GA,EAAE,CAAC,MAAH,GAAY;AACV,UAAG,SAAU,QAAb;AACE,UAAE,CAAC,IAAH,CAAQ,KAAR,EAAe,QAAf,EADF;OAAA;AAEA,aAAO,EAAP,CAHU;IAAA,CA5GZ;AAiHA,WAAO,EAAP,CAnHO;EAAA,CART;AA6HA,SAAO,MAAP,CA/H2C;AAAA,CAA7C;CCAA;;AAAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,OAAnC,EAA4C,SAAC,IAAD,EAAO,MAAP,EAAe,cAAf;AAE1C;AAAA,UAAQ;AACN;AAAA,UAAM,EAAN;AAAA,IACA,SAAS,EAAE,CAAC,KAAK,CAAC,MAAT,EADT;AAAA,IAEA,aAAa,QAFb;AAAA,IAGA,aAAa,KAHb;AAAA,IAIA,UAAU,MAJV;AAAA,IAKA,cAAc,MALd;AAAA,IAMA,oBAAoB,MANpB;AAAA,IAOA,kBAAkB,KAPlB;AAAA,IAQA,YAAY,EARZ;AAAA,IASA,aAAa,EATb;AAAA,IAUA,gBAAgB,EAVhB;AAAA,IAWA,SAAS,MAXT;AAAA,IAYA,gBAAgB,GAZhB;AAAA,IAaA,qBAAqB,CAbrB;AAAA,IAcA,qBAAqB,MAdrB;AAAA,IAeA,iBAAiB,SAAC,IAAD;AAAU,UAAG,MAAM,KAAN,KAAgB,CAAC,CAAC,MAAF,CAAS,IAAT,CAAnB;eAAuC,KAAvC;OAAA;eAAiD,MAAjD;OAAV;IAAA,CAfjB;AAAA,IAiBA,YAAY,KAjBZ;AAAA,IAkBA,cAAc,MAlBd;AAAA,IAmBA,iBAAiB,MAnBjB;AAAA,IAoBA,QAAQ,MApBR;AAAA,IAqBA,SAAS,MArBT;AAAA,IAsBA,cAAc,MAtBd;AAAA,IAuBA,aAAa,KAvBb;AAAA,IAwBA,aAAa,MAxBb;AAAA,IAyBA,YAAY,KAzBZ;AAAA,IA0BA,gBAAgB,KA1BhB;AAAA,IA2BA,cAAc,KA3Bd;AAAA,IA4BA,QAAQ,MA5BR;AAAA,IA6BA,UAAU,MA7BV;AAAA,IA8BA,SAAS,MA9BT;AAAA,IA+BA,UAAU,MA/BV;AAAA,IAgCA,UAAU,QAhCV;AAAA,IAiCA,sBAAsB,MAjCtB;AAAA,IAkCA,kBAAkB,MAlClB;AAAA,IAoCA,KAAK,aApCL;AAAA,IAwCA,OAAO,SAAC,IAAD;AAAU,UAAG,CAAC,CAAC,OAAF,CAAU,IAAV,CAAH;eAAwB,CAAC,CAAC,IAAF,CAAO,IAAK,GAAZ,EAAxB;OAAA;eAA6C,CAAC,CAAC,IAAF,CAAO,IAAP,EAA7C;OAAV;IAAA,CAxCP;AAAA,IA0CA,aAAa,SAAC,CAAD,EAAI,SAAJ;aACX,SAAS,CAAC,MAAV,CACE,SAAC,IAAD,EAAO,IAAP;eAAgB,QAAQ,GAAG,CAAC,UAAH,CAAc,CAAd,EAAgB,IAAhB,EAAzB;MAAA,CADF,EAEE,CAFF,EADW;IAAA,CA1Cb;AAAA,IA+CA,WAAW,SAAC,IAAD,EAAO,SAAP;aACT,EAAE,CAAC,GAAH,CAAO,IAAP,EAAa,SAAC,CAAD;eAAO,EAAE,CAAC,GAAH,CAAO,SAAP,EAAkB,SAAC,CAAD;iBAAO,EAAE,CAAC,UAAH,CAAc,CAAd,EAAgB,CAAhB,EAAP;QAAA,CAAlB,EAAP;MAAA,CAAb,EADS;IAAA,CA/CX;AAAA,IAkDA,WAAW,SAAC,IAAD,EAAO,SAAP;aACT,EAAE,CAAC,GAAH,CAAO,IAAP,EAAa,SAAC,CAAD;eAAO,EAAE,CAAC,GAAH,CAAO,SAAP,EAAkB,SAAC,CAAD;iBAAO,EAAE,CAAC,UAAH,CAAc,CAAd,EAAgB,CAAhB,EAAP;QAAA,CAAlB,EAAP;MAAA,CAAb,EADS;IAAA,CAlDX;AAAA,IAqDA,cAAc,SAAC,CAAD;AACZ,UAAG,cAAc,CAAC,KAAlB;eAA6B,cAAc,CAAC,KAAf,CAAqB,CAArB,EAA7B;OAAA;eAA0D,eAAe,CAAf,EAA1D;OADY;IAAA,CArDd;AAAA,IAwDA,aAAa;AAAA,MACX,QAAQ,SAAC,IAAD;AACN;AAAA,oBAAY,EAAE,CAAC,SAAH,CAAa,IAAb,CAAZ;AACA,eAAO,CAAC,SAAS,IAAT,EAAe,SAAf,CAAD,EAA4B,SAAS,IAAT,EAAe,SAAf,CAA5B,CAAP,CAFM;MAAA,CADG;AAAA,MAIX,KAAK,SAAC,IAAD;AACH;AAAA,oBAAY,EAAE,CAAC,SAAH,CAAa,IAAb,CAAZ;AACA,eAAO,CAAC,CAAD,EAAI,SAAS,IAAT,EAAe,SAAf,CAAJ,CAAP,CAFG;MAAA,CAJM;AAAA,MAOX,aAAa,SAAC,IAAD;AACX;AAAA,YAAG,IAAK,GAAE,CAAC,cAAR,CAAuB,OAAvB,CAAH;AACE,iBAAO,EAAE,CAAC,MAAH,CAAU,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;mBACxB,CAAC,CAAC,MADsB;UAAA,CAAT,CAAV,CAAP,CADF;SAAA;AAIE,sBAAY,EAAE,CAAC,SAAH,CAAa,IAAb,CAAZ;AACA,iBAAO,EAAE,CAAC,MAAH,CAAU,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;mBACxB,WAAW,CAAX,EAAc,SAAd,EADwB;UAAA,CAAT,CAAV,CAAP,CALF;SADW;MAAA,CAPF;AAAA,MAeX,OAAO,SAAC,IAAD;AACL;AAAA,YAAG,IAAK,GAAE,CAAC,cAAR,CAAuB,OAAvB,CAAH;AACE,iBAAO;YAAC,CAAD,EAAI,EAAE,CAAC,GAAH,CAAO,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;qBACzB,CAAC,CAAC,MADuB;YAAA,CAAT,CAAP,CAAJ;WAAP,CADF;SAAA;AAIE,sBAAY,EAAE,CAAC,SAAH,CAAa,IAAb,CAAZ;AACA,iBAAO;YAAC,CAAD,EAAI,EAAE,CAAC,GAAH,CAAO,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;qBACzB,WAAW,CAAX,EAAc,SAAd,EADyB;YAAA,CAAT,CAAP,CAAJ;WAAP,CALF;SADK;MAAA,CAfI;KAxDb;AAAA,IAmFA,EAAE,CAAC,EAAH,GAAQ;AACN,aAAO,QAAQ,GAAR,GAAc,OAAO,CAAC,EAAR,EAArB,CADM;IAAA,CAnFR;AAAA,IAsFA,EAAE,CAAC,IAAH,GAAU,SAAC,IAAD;AACR,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,KAAP,CAA9B;OAAA;AAEE,gBAAQ,IAAR;AACA,eAAO,EAAP,CAHF;OADQ;IAAA,CAtFV;AAAA,IA4FA,EAAE,CAAC,MAAH,GAAY,SAAC,MAAD;AACV,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,OAAP,CAA9B;OAAA;AAEE,kBAAU,MAAV;AACA,eAAO,EAAP,CAHF;OADU;IAAA,CA5FZ;AAAA,IAkGA,EAAE,CAAC,KAAH,GAAW,SAAC,GAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAP,CAA9B;OAAA;AAEE,iBAAS,GAAT;AACA,eAAO,EAAP,CAHF;OADS;IAAA,CAlGX;AAAA,IAwGA,EAAE,CAAC,MAAH,GAAY,SAAC,GAAD;AACV,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,OAAP,CAA9B;OAAA;AAEE,kBAAU,GAAV;AACA,eAAO,EAAP,CAHF;OADU;IAAA,CAxGZ;AAAA,IAgHA,EAAE,CAAC,KAAH,GAAW;AACT,aAAO,MAAP,CADS;IAAA,CAhHX;AAAA,IAmHA,EAAE,CAAC,MAAH,GAAY;AACV,aAAO,OAAP,CADU;IAAA,CAnHZ;AAAA,IAsHA,EAAE,CAAC,SAAH,GAAe;aACb,WADa;IAAA,CAtHf;AAAA,IAyHA,EAAE,CAAC,YAAH,GAAkB,SAAC,SAAD;AAChB,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,aAAP,CAA9B;OAAA;AAEE,wBAAgB,SAAhB;AACA,YAAG,SAAH;AACE,wBAAc,KAAd,CADF;SADA;AAGA,eAAO,EAAP,CALF;OADgB;IAAA,CAzHlB;AAAA,IAiIA,EAAE,CAAC,UAAH,GAAgB,SAAC,SAAD;AACd,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,WAAP,CAA9B;OAAA;AAEE,sBAAc,SAAd;AACA,YAAG,SAAH;AACE,0BAAgB,KAAhB,CADF;SADA;AAGA,eAAO,EAAP,CALF;OADc;IAAA,CAjIhB;AAAA,IA2IA,EAAE,CAAC,SAAH,GAAe,SAAC,IAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,UAAP,CAA9B;OAAA;AAEE,YAAG,EAAE,CAAC,KAAK,CAAC,cAAT,CAAwB,IAAxB,CAAH;AACE,mBAAS,EAAE,CAAC,KAAM,MAAT,EAAT;AAAA,UACA,aAAa,IADb;AAAA,UAEA,EAAE,CAAC,MAAH,CAAU,cAAc,CAAC,MAAzB,CAFA,CADF;SAAA,MAIK,IAAG,SAAQ,MAAX;AACH,mBAAS,EAAE,CAAC,IAAI,CAAC,KAAR,EAAT;AAAA,UACA,aAAa,MADb;AAEA,cAAG,kBAAH;AACE,cAAE,CAAC,UAAH,CAAc,kBAAd,EADF;WAFA;AAAA,UAIA,EAAE,CAAC,MAAH,CAAU,cAAc,CAAC,IAAzB,CAJA,CADG;SAAA;AAOH,cAAI,CAAC,KAAL,CAAW,4BAAX,EAAyC,IAAzC,EAPG;SAJL;AAAA,QAaA,aAAa,eAAe,SAAf,mBAA0B,YAA1B,mBAAwC,YAAxC,mBAAsD,aAAtD,mBAAqE,aAblF;AAcA,YAAG,MAAH;AACE,YAAE,CAAC,KAAH,CAAS,MAAT,EADF;SAdA;AAiBA,YAAG,SAAH;AACE,eAAK,CAAC,KAAN,CAAY,MAAZ,EADF;SAjBA;AAmBA,eAAO,EAAP,CArBF;OADa;IAAA,CA3If;AAAA,IAqKA,EAAE,CAAC,MAAH,GAAY,SAAC,GAAD;AACV,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,OAAP,CAA9B;OAAA;AAEE,kBAAU,GAAV;AACA,eAAO,EAAP,CAHF;OADU;IAAA,CArKZ;AAAA,IA2KA,EAAE,CAAC,UAAH,GAAgB,SAAC,IAAD;AACd,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACS,YAAG,UAAH;iBAAmB,OAAnB;SAAA;iBAAkC,YAAlC;SADT;OAAA;AAGE,YAAG,SAAS,KAAT,aAAgB,KAAhB,aAAuB,QAAvB,aAAiC,OAAjC,aAA0C,aAA7C;AACE,wBAAc,IAAd,CADF;SAAA;AAGE,cAAI,CAAC,KAAL,CAAW,kCAAX,EAA+C,IAA/C,EAAqD,4DAArD,EAHF;SAAA;AAIA,eAAO,EAAP,CAPF;OADc;IAAA,CA3KhB;AAAA,IAqLA,EAAE,CAAC,SAAH,GAAe,SAAC,IAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAM,CAAC,MAAP,EAAP,CAA9B;OAAA;AAEE,YAAG,YAAgB,EAAE,CAAC,UAAH,EAAnB;AACI,iBAAO,iBAAP,CADJ;SAAA;AAGE,cAAG,OAAH;AACE,mBAAO,OAAP,CADF;WAAA;AAGE,mBAAO,EAAE,CAAC,KAAH,CAAS,IAAT,CAAP,CAHF;WAHF;SAFF;OADa;IAAA,CArLf;AAAA,IAgMA,EAAE,CAAC,cAAH,GAAoB,SAAC,SAAD;AAClB,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,eAAP,CAA9B;OAAA;AAEE,0BAAkB,SAAlB;AACA,eAAO,EAAP,CAHF;OADkB;IAAA,CAhMpB;AAAA,IAwMA,EAAE,CAAC,KAAH,GAAW,SAAC,KAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAM,CAAC,KAAP,EAAP,CAA9B;OAAA;AAEE,iBAAS,KAAT;AACA,YAAG,UAAH;AACE,gBAAM,CAAC,UAAP,CAAkB,KAAlB,EAAyB,aAAzB,EAAwC,kBAAxC,EADF;SAAA;AAGE,gBAAM,CAAC,KAAP,CAAa,KAAb,EAHF;SADA;AAKA,eAAO,EAAP,CAPF;OADS;IAAA,CAxMX;AAAA,IAoNA,EAAE,CAAC,QAAH,GAAc,SAAC,IAAD;AACZ,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,SAAP,CAA9B;OAAA;AAEE,oBAAY,IAAZ;AACA,eAAO,EAAP,CAHF;OADY;IAAA,CApNd;AAAA,IA0NA,EAAE,CAAC,aAAH,GAAmB,SAAC,IAAD;AACjB,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,UAAP,CAA9B;OAAA;AAEE,qBAAa,IAAb;AACA,eAAO,EAAP,CAHF;OADiB;IAAA,CA1NnB;AAAA,IAgOA,EAAE,CAAC,YAAH,GAAkB,SAAC,IAAD;AAChB,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,aAAP,CAA9B;OAAA;AAEE,wBAAgB,IAAhB;AACA,eAAO,EAAP,CAHF;OADgB;IAAA,CAhOlB;AAAA,IAsOA,EAAE,CAAC,SAAH,GAAe,SAAC,IAAD;AACb,UAAG,SAAH;AACE,YAAG,CAAC,CAAC,OAAF,CAAU,SAAV,CAAH;AACE,iBAAO,CAAC,CAAC,YAAF,CAAe,SAAf,EAA0B,KAAK,IAAL,CAA1B,CAAP,CADF;SAAA;AAGE,iBAAO,CAAC,SAAD,CAAP,CAHF;SADF;OAAA;eAME,KAAK,IAAL,CAAU,CAAC,MAAX,CAAkB,SAAC,CAAD;iBAAO,EAAK,eAAK,aAAL,SAAD,EAAX;QAAA,CAAlB,EANF;OADa;IAAA,CAtOf;AAAA,IAiPA,EAAE,CAAC,UAAH,GAAgB,SAAC,MAAD;AACd,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,kBAAP,CAA9B;OAAA;AAEE,6BAAqB,MAArB;AACA,YAAG,eAAc,MAAjB;AACE,2BAAiB,EAAE,CAAC,IAAI,CAAC,MAAR,CAAe,MAAf,CAAjB,CADF;SAAA;AAGE,2BAAiB,SAAC,CAAD;mBAAO,EAAP;UAAA,CAAjB,CAHF;SADA;AAKA,eAAO,IAAP,CAPF;OADc;IAAA,CAjPhB;AAAA,IA6PA,EAAE,CAAC,KAAH,GAAW,SAAC,IAAD;AACT,UAAG,UAAH;AACE,YAAG,CAAC,CAAC,OAAF,CAAU,IAAV,CAAH;iBAAwB,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;mBAAO,YAAY,CAAE,WAAW,YAAzB,EAAP;UAAA,CAAT,EAAxB;SAAA;iBAAoF,YAAY,IAAK,WAAW,YAA5B,EAApF;SADF;OAAA;AAGE,YAAG,CAAC,CAAC,OAAF,CAAU,IAAV,CAAH;iBAAwB,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;mBAAO,YAAY,CAAE,WAAd,EAAP;UAAA,CAAT,EAAxB;SAAA;iBAAwE,YAAY,IAAK,WAAjB,EAAxE;SAHF;OADS;IAAA,CA7PX;AAAA,IAmQA,EAAE,CAAC,UAAH,GAAgB,SAAC,IAAD,EAAO,QAAP;AACd,UAAG,UAAH;eACE,YAAY,IAAK,UAAU,YAA3B,EADF;OAAA;eAGE,YAAY,IAAK,UAAjB,EAHF;OADc;IAAA,CAnQhB;AAAA,IAyQA,EAAE,CAAC,cAAH,GAAoB,SAAC,IAAD;aAClB,EAAE,CAAC,WAAH,CAAe,EAAE,CAAC,KAAH,CAAS,IAAT,CAAf,EADkB;IAAA,CAzQpB;AAAA,IA4QA,EAAE,CAAC,WAAH,GAAiB,SAAC,GAAD;AACf,UAAG,uBAAwB,GAAxB,IAAiC,CAAC,GAAG,CAAC,UAAJ,IAAkB,MAAI,CAAM,GAAN,CAAvB,CAApC;eACE,gBAAgB,GAAhB,EADF;OAAA;eAGE,IAHF;OADe;IAAA,CA5QjB;AAAA,IAkRA,EAAE,CAAC,GAAH,GAAS,SAAC,IAAD;AACP,UAAG,KAAK,CAAC,OAAN,CAAc,IAAd,CAAH;eAA4B,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;iBAAO,OAAO,EAAE,CAAC,KAAH,CAAS,IAAT,CAAP,EAAP;QAAA,CAAT,EAA5B;OAAA;eAAyE,OAAO,EAAE,CAAC,KAAH,CAAS,IAAT,CAAP,EAAzE;OADO;IAAA,CAlRT;AAAA,IAqRA,EAAE,CAAC,MAAH,GAAY,SAAC,WAAD;AAKV;AAAA,UAAG,CAAC,CAAC,GAAF,CAAM,EAAE,CAAC,KAAH,EAAN,EAAiB,QAAjB,CAAH;AACE,gBAAQ,EAAE,CAAC,KAAH,EAAU,CAAC,OAAX,EAAR;AAAA,QAKA,QAAQ,MAAM,CAAC,KAAP,EALR;AAAA,QAMA,WAAW,CAAC,KAAM,GAAN,GAAW,KAAM,GAAlB,IAAwB,KAAK,CAAC,MANzC;AAAA,QAOA,MAAM,EAAE,CAAC,KAAH,EAAU,CAAC,MAAX,CAAkB,cAAc,WAAS,CAAzC,CAPN;AAAA,QASA,SAAS,EAAE,CAAC,QAAH,CAAY,EAAE,CAAC,KAAf,CAAqB,CAAC,IAT/B;AAAA,QAUA,MAAM,OAAO,KAAP,EAAc,GAAd,CAVN;AAAA,QAWA,MAAS,MAAM,CAAT,GAAgB,CAAhB,GAA0B,OAAO,KAAK,CAAC,MAAhB,GAA4B,KAAK,CAAC,MAAN,GAAe,CAA3C,GAAkD,GAX/E;AAYA,eAAO,GAAP,CAbF;OAAA;AAeA,UAAG,CAAC,CAAC,GAAF,CAAM,EAAE,CAAC,KAAH,EAAN,EAAiB,cAAjB,CAAH;AACE,eAAO,EAAE,CAAC,KAAH,EAAU,CAAC,YAAX,CAAwB,WAAxB,CAAP,CADF;OAfA;AAsBA,UAAG,EAAE,CAAC,cAAH,EAAH;AACE,iBAAS,MAAM,CAAC,MAAP,EAAT;AAAA,QACA,QAAQ,MAAM,CAAC,KAAP,EADR;AAEA,YAAG,WAAH;AACE,qBAAW,KAAM,GAAN,GAAW,KAAM,GAA5B;AAAA,UACA,MAAM,KAAK,CAAC,MAAN,GAAe,IAAI,CAAC,KAAL,CAAW,cAAc,QAAzB,CAAf,GAAoD,CAD1D,CADF;SAAA;AAIE,qBAAW,KAAM,GAAN,GAAW,KAAM,GAA5B;AAAA,UACA,MAAM,IAAI,CAAC,KAAL,CAAW,cAAc,QAAzB,CADN,CAJF;SAFA;AAQA,eAAO,GAAP,CATF;OA3BU;IAAA,CArRZ;AAAA,IA2TA,EAAE,CAAC,aAAH,GAAmB,SAAC,WAAD;AACjB;AAAA,UAAG,EAAE,CAAC,SAAH,MAAmB,EAAE,CAAC,cAAH,EAAtB;AACE,cAAM,EAAE,CAAC,MAAH,CAAU,WAAV,CAAN;AACA,eAAO,MAAM,CAAC,MAAP,EAAgB,KAAvB,CAFF;OADiB;IAAA,CA3TnB;AAAA,IAmUA,EAAE,CAAC,QAAH,GAAc,SAAC,SAAD;AACZ,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,SAAP,CAA9B;OAAA;AAEE,oBAAY,SAAZ;AACA,YAAG,SAAH;AACE,kBAAQ,EAAE,CAAC,GAAG,CAAC,IAAP,EAAR,CADF;SAAA;AAGE,kBAAQ,MAAR,CAHF;SADA;AAKA,eAAO,EAAP,CAPF;OADY;IAAA,CAnUd;AAAA,IA6UA,EAAE,CAAC,UAAH,GAAgB,SAAC,GAAD;AACd,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,WAAP,CAA9B;OAAA;AAEE,yBAAiB,WAAjB;AAAA,QACA,cAAc,GADd;AAEA,eAAO,EAAP,CAJF;OADc;IAAA,CA7UhB;AAAA,IAoVA,EAAE,CAAC,aAAH,GAAmB,SAAC,GAAD;AACjB,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,cAAP,CAA9B;OAAA;AAEE,yBAAiB,GAAjB;AACA,eAAO,EAAP,CAHF;OADiB;IAAA,CApVnB;AAAA,IA0VA,EAAE,CAAC,IAAH,GAAU;AACR,aAAO,KAAP,CADQ;IAAA,CA1VV;AAAA,IA6VA,EAAE,CAAC,KAAH,GAAW,SAAC,GAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAP,CAA9B;OAAA;AAEE,iBAAS,GAAT;AACA,YAAG,EAAE,CAAC,IAAH,EAAH;AACE,YAAE,CAAC,IAAH,EAAS,CAAC,KAAV,CAAgB,MAAhB,EADF;SADA;AAGA,eAAO,EAAP,CALF;OADS;IAAA,CA7VX;AAAA,IAqWA,EAAE,CAAC,UAAH,GAAgB,SAAC,GAAD;AACd,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,WAAP,CAA9B;OAAA;AAEE,sBAAc,GAAd;AACA,YAAG,EAAE,CAAC,IAAH,EAAH;AACE,YAAE,CAAC,IAAH,EAAS,CAAC,UAAV,CAAqB,GAArB,EADF;SADA;AAGA,eAAO,EAAP,CALF;OADc;IAAA,CArWhB;AAAA,IA6WA,EAAE,CAAC,SAAH,GAAe,SAAC,GAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,UAAP,CAA9B;OAAA;AAEE,qBAAa,GAAb;AACA,eAAO,EAAP,CAHF;OADa;IAAA,CA7Wf;AAAA,IAmXA,EAAE,CAAC,SAAH,GAAe,SAAC,IAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACS,YAAG,UAAH;iBAAmB,WAAnB;SAAA;iBAAmC,EAAE,CAAC,QAAH,GAAnC;SADT;OAAA;AAGE,qBAAa,IAAb;AACA,eAAO,EAAP,CAJF;OADa;IAAA,CAnXf;AAAA,IA0XA,EAAE,CAAC,MAAH,GAAY,SAAC,GAAD;AACV,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,mBAAP,CAA9B;OAAA;AAEE,YAAG,GAAG,CAAC,MAAJ,GAAa,CAAhB;AACE,gCAAsB,GAAtB,CADF;SAAA;AAGE,gCAAyB,EAAE,CAAC,SAAH,OAAkB,MAArB,GAAiC,cAAc,CAAC,IAAhD,GAA0D,cAAc,CAAC,MAA/F,CAHF;SAAA;AAAA,QAIA,kBAAqB,EAAE,CAAC,SAAH,OAAkB,MAArB,GAAiC,EAAE,CAAC,IAAI,CAAC,MAAR,CAAe,mBAAf,CAAjC,GAA0E,EAAE,CAAC,MAAH,CAAU,mBAAV,CAJ5F;AAKA,eAAO,EAAP,CAPF;OADU;IAAA,CA1XZ;AAAA,IAoYA,EAAE,CAAC,QAAH,GAAc,SAAC,SAAD;AACZ,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,SAAP,CAA9B;OAAA;AAEE,oBAAY,SAAZ;AACA,eAAO,EAAP,CAHF;OADY;IAAA,CApYd;AAAA,IA4YA,EAAE,CAAC,QAAH,GAAc;AACZ,QAAE,CAAC,KAAH,EAAU,CAAC,SAAX,EAAsB,CAAC,EAAvB,CAA2B,kBAAc,CAAC,EAAE,CAAC,EAAH,EAAD,CAAzC,EAAqD,SAAC,IAAD;AAEnD,YAAG,EAAE,CAAC,cAAH,EAAH;iBACE,MAAM,CAAC,MAAP,CAAc,EAAE,CAAC,SAAH,CAAa,IAAb,CAAd,EADF;SAFmD;MAAA,CAArD;aAKA,EAAE,CAAC,KAAH,EAAU,CAAC,SAAX,EAAsB,CAAC,EAAvB,CAA2B,iBAAa,CAAC,EAAE,CAAC,EAAH,EAAD,CAAxC,EAAoD,SAAC,IAAD;AAElD;AAAA,mBAAY,EAAE,CAAC,UAAH,EAAZ;AACA,YAAG,EAAE,CAAC,MAAH,EAAW,CAAC,eAAf;AACE,YAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,MAAH,EAAW,CAAC,eAAZ,EAAhB,EADF;SADA;AAGA,YAAG,YAAa,UAAW,UAA3B;iBACE,oBAAoB,UAAW,UAAX,CAAqB,IAArB,EADtB;SALkD;MAAA,CAApD,EANY;IAAA,CA5Yd;AAAA,IA0ZA,EAAE,CAAC,MAAH,GAAY,SAAC,WAAD;AACV,QAAE,CAAC,MAAH,EAAW,CAAC,SAAZ,EAAuB,CAAC,MAAxB,CAA+B,WAA/B;AACA,aAAO,EAAP,CAFU;IAAA,CA1ZZ;AAAA,IA8ZA,EAAE,CAAC,WAAH,GAAiB;aACf,EAAE,CAAC,MAAH,EAAW,CAAC,SAAZ,EAAuB,CAAC,WAAxB,GADe;IAAA,CA9ZjB;AAAA,IAiaA,EAAE,CAAC,QAAH,GAAc;AACZ,QAAE,CAAC,MAAH,EAAW,CAAC,SAAZ,EAAuB,CAAC,QAAxB;AACA,aAAO,EAAP,CAFY;IAAA,CAjad;AAqaA,WAAO,EAAP,CAtaM;EAAA,CAAR;AAwaA,SAAO,KAAP,CA1a0C;AAAA,CAA5C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,WAAnC,EAAgD,SAAC,IAAD;AAC9C;AAAA,SAAO,YAAY;AACjB;AAAA,YAAQ,EAAR;AAAA,IACA,YAAY,EADZ;AAAA,IAEA,cAAc,EAFd;AAAA,IAGA,SAAS,MAHT;AAAA,IAIA,kBAAkB,EAJlB;AAAA,IAKA,cAAc,MALd;AAAA,IAOA,KAAK,aAPL;AAAA,IASA,EAAE,CAAC,KAAH,GAAW,SAAC,KAAD;AACT,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,MAAP,CAA9B;OAAA;AAEE,iBAAS,KAAT;AACA,eAAO,EAAP,CAHF;OADS;IAAA,CATX;AAAA,IAeA,EAAE,CAAC,GAAH,GAAS,SAAC,KAAD;AACP,UAAG,KAAM,MAAK,CAAC,EAAN,GAAT;AACE,YAAI,CAAC,KAAL,CAAY,0BAAsB,CAAC,KAAK,CAAC,EAAN,EAAD,CAAtB,GAAkC,mCAAlC,GAAoE,CAAC,MAAM,CAAC,EAAP,EAAD,CAApE,GAAiF,oCAA7F,EADF;OAAA;AAAA,MAEA,KAAM,MAAK,CAAC,EAAN,GAAN,GAAoB,KAFpB;AAAA,MAGA,SAAU,MAAK,CAAC,IAAN,GAAV,GAA0B,KAH1B;AAIA,aAAO,EAAP,CALO;IAAA,CAfT;AAAA,IAsBA,EAAE,CAAC,QAAH,GAAc,SAAC,KAAD;AACZ;AAAA,UAAI,EAAE,CAAC,OAAH,CAAW,KAAK,CAAC,IAAN,EAAX,CAAJ;AACA,aAAO,CAAC,CAAC,EAAF,OAAU,KAAK,CAAC,EAAN,EAAjB,CAFY;IAAA,CAtBd;AAAA,IA0BA,EAAE,CAAC,OAAH,GAAa,SAAC,IAAD;AACX,UAAG,SAAU,MAAb;eAAwB,SAAU,OAAlC;OAAA,MAA6C,IAAG,WAAW,CAAC,OAAf;eAA4B,WAAW,CAAC,OAAZ,CAAoB,IAApB,EAA5B;OAAA;eAA2D,OAA3D;OADlC;IAAA,CA1Bb;AAAA,IA6BA,EAAE,CAAC,OAAH,GAAa,SAAC,IAAD;AACX,aAAO,EAAC,EAAG,CAAC,OAAH,CAAW,IAAX,CAAT,CADW;IAAA,CA7Bb;AAAA,IAgCA,EAAE,CAAC,MAAH,GAAY,SAAC,KAAD;AACV,UAAG,MAAU,MAAK,CAAC,EAAN,GAAb;AACE,YAAI,CAAC,IAAL,CAAW,6BAAyB,CAAC,KAAK,CAAC,EAAN,EAAD,CAAzB,GAAqC,+BAArC,GAAmE,CAAC,MAAM,CAAC,EAAP,EAAD,CAAnE,GAAgF,YAA3F;AACA,eAAO,EAAP,CAFF;OAAA;AAAA,MAGA,YAAa,MAAK,CAAC,EAAN,GAHb;AAAA,MAIA,SAAU,MAAK,CAAC,EAAN,CAJV;AAKA,aAAO,EAAP,CANU;IAAA,CAhCZ;AAAA,IAwCA,EAAE,CAAC,YAAH,GAAkB,SAAC,SAAD;AAChB,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,WAAP,CAA9B;OAAA;AAEE,sBAAc,SAAd;AACA,eAAO,EAAP,CAHF;OADgB;IAAA,CAxClB;AAAA,IA8CA,EAAE,CAAC,QAAH,GAAc;aACZ,MADY;IAAA,CA9Cd;AAAA,IAiDA,EAAE,CAAC,QAAH,GAAc;AACZ;AAAA,YAAM,EAAN;AACA,UAAG,WAAW,CAAC,QAAf;AACE;AAAA;sBAAA;AACE,aAAI,GAAJ,GAAS,CAAT,CADF;AAAA,SADF;OADA;AAIA;yBAAA;AACE,WAAI,GAAJ,GAAS,CAAT,CADF;AAAA,OAJA;AAMA,aAAO,GAAP,CAPY;IAAA,CAjDd;AAAA,IA0DA,EAAE,CAAC,cAAH,GAAoB,SAAC,GAAD;AAClB;AAAA,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAA8B,eAAO,eAAP,CAA9B;OAAA;AAEE,0BAAkB,GAAlB;AACA;sBAAA;AACE,cAAG,GAAM,CAAC,OAAH,CAAW,CAAX,CAAP;AACE,kBAAO,yBAAsB,CAAtB,GAAwB,4BAA/B,CADF;WADF;AAAA,SAHF;OAAA;AAMA,aAAO,EAAP,CAPkB;IAAA,CA1DpB;AAAA,IAmEA,EAAE,CAAC,SAAH,GAAe,SAAC,QAAD;AACb;AAAA,UAAI,EAAJ;AACA;4BAAA;AACE,YAAG,EAAE,CAAC,OAAH,CAAW,IAAX,CAAH;AACE,WAAE,MAAF,GAAU,EAAE,CAAC,OAAH,CAAW,IAAX,CAAV,CADF;SAAA;AAGE,gBAAO,yBAAsB,IAAtB,GAA2B,4BAAlC,CAHF;SADF;AAAA,OADA;AAMA,aAAO,CAAP,CAPa;IAAA,CAnEf;AAAA,IA4EA,EAAE,CAAC,kBAAH,GAAwB;AACtB;AAAA,UAAI,EAAJ;AACA;AAAA;oBAAA;AACE,eAAO,CAAC,CAAC,QAAF,EAAP;AACA,YAAG,IAAH;AACE,cAAG,KAAK,CAAC,OAAN,CAAc,IAAd,CAAH;AACE,aAAC,CAAC,MAAF,CAAS,IAAT,EADF;WAAA;AAGE,aAAC,CAAC,IAAF,CAAO,IAAP,EAHF;WADF;SAFF;AAAA,OADA;AAQA,aAAO,CAAP,CATsB;IAAA,CA5ExB;AAAA,IAuFA,EAAE,CAAC,UAAH,GAAgB,SAAC,IAAD;AACd,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACE,YAAG,WAAH;AACE,iBAAO,EAAE,CAAC,OAAH,CAAW,WAAX,CAAP,CADF;SAAA;AAEA,eAAO,MAAP,CAHF;OAAA;AAKE,sBAAc,IAAd;AACA,eAAO,EAAP,CANF;OADc;IAAA,CAvFhB;AAgGA,WAAO,EAAP,CAjGiB;EAAA,CAAnB,CAD8C;AAAA,CAAhD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,OAArC,EAA8C,SAAC,IAAD,EAAO,KAAP,EAAc,MAAd,EAAsB,UAAtB;AAC5C;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,CAAC,OAAD,EAAS,QAAT,EAAmB,UAAnB,CAFJ;AAAA,IAGL,YAAY,SAAC,QAAD;AACV;AAAA,WAAK,OAAL;AAEA,aAAO,EAAP,CAHU;IAAA,CAHP;AAAA,IAQL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,WAAxB;AACJ;AAAA,WAAK,WAAY,GAAjB;AAAA,MACA,QAAQ,WAAY,GADpB;AAAA,MAEA,SAAS,WAAY,GAFrB;AAAA,MAGA,IAAI,MAHJ;AAKA,UAAG,EAAK,SAAS,MAAV,CAAP;AACE,YAAI,CAAC,KAAL,CAAW,6DAAX;AACA,eAFF;OALA;AAAA,MASA,OAAO,OATP;AAAA,MAUA,EAAE,CAAC,IAAH,CAAQ,IAAR,CAVA;AAAA,MAWA,EAAE,CAAC,MAAH,CAAU,UAAU,KAApB,CAXA;AAAA,MAYA,EAAE,CAAC,KAAH,CAAS,KAAT,CAZA;AAAA,MAaA,EAAE,CAAC,SAAH,CAAa,YAAb,CAbA;AAAA,MAcA,OAAO,CAAC,QAAR,CAAiB,EAAE,CAAC,EAAH,EAAjB,CAdA;AAAA,MAgBA,KAAK,CAAC,QAAN,CAAe,EAAf,EAAmB,MAAnB,CAhBA;AAAA,MAiBA,EAAE,CAAC,QAAH,EAjBA;AAAA,MAuBA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,CAvBA;aAwBA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,EAA8C,MAA9C,EAzBI;IAAA,CARD;GAAP,CAF4C;AAAA,CAA9C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,YAAnC,EAAiD,SAAC,IAAD;AAE/C;AAAA,cAAY,SAAC,GAAD;AACV;AAAA,QAAG,GAAH;AACE,UAAI,GAAG,CAAC,IAAJ,EAAU,CAAC,OAAX,CAAmB,UAAnB,EAA+B,EAA/B,CAAkC,CAAC,KAAnC,CAAyC,GAAzC,CAA6C,CAAC,GAA9C,CAAkD,SAAC,CAAD;eAAO,CAAC,CAAC,OAAF,CAAU,kBAAV,EAA8B,EAA9B,EAAP;MAAA,CAAlD,CAAJ;AAAA,MACA,IAAI,CAAC,CAAC,GAAF,CAAM,SAAC,CAAD;AAAO,YAAG,MAAM,CAAN,CAAH;iBAAiB,EAAjB;SAAA;iBAAwB,GAAxB;SAAP;MAAA,CAAN,CADJ;AAEO,UAAG,CAAC,CAAC,MAAF,KAAY,CAAf;AAAsB,eAAO,CAAE,GAAT,CAAtB;OAAA;eAAuC,EAAvC;OAHT;KADU;EAAA,CAAZ;AAMA,SAAO;AAAA,IAEL,yBAAyB,SAAC,KAAD,EAAQ,EAAR;AACvB,WAAK,CAAC,QAAN,CAAe,MAAf,EAAuB,SAAC,GAAD;AACrB,YAAG,QAAS,MAAZ;AACE,cAAG,EAAE,CAAC,KAAK,CAAC,cAAT,CAAwB,GAAxB,KAAgC,QAAO,MAA1C;mBACE,EAAE,CAAC,SAAH,CAAa,GAAb,EADF;WAAA;AAIE,gBAAI,CAAC,KAAL,CAAY,iCAA8B,GAA9B,GAAkC,gCAA9C;mBACA,EAAE,CAAC,SAAH,CAAa,QAAb,EALF;WADF;SADqB;MAAA,CAAvB;AAAA,MASA,KAAK,CAAC,QAAN,CAAe,UAAf,EAA2B,SAAC,GAAD;eACzB,EAAE,CAAC,QAAH,CAAY,UAAU,GAAV,CAAZ,CAA2B,CAAC,MAA5B,GADyB;MAAA,CAA3B,CATA;AAAA,MAYA,KAAK,CAAC,QAAN,CAAe,eAAf,EAAgC,SAAC,GAAD;AAC9B,YAAG,OAAQ,GAAG,CAAC,MAAJ,GAAa,CAAxB;iBACE,EAAE,CAAC,aAAH,CAAiB,GAAjB,CAAqB,CAAC,MAAtB,GADF;SAD8B;MAAA,CAAhC,CAZA;AAAA,MAgBA,KAAK,CAAC,QAAN,CAAe,OAAf,EAAwB,SAAC,GAAD;AACtB;AAAA,gBAAQ,UAAU,GAAV,CAAR;AACA,YAAG,KAAK,CAAC,OAAN,CAAc,KAAd,CAAH;AACE,YAAE,CAAC,KAAH,CAAS,KAAT;iBACA,EAAE,CAAC,MAAH,GAFF;SAFsB;MAAA,CAAxB,CAhBA;AAAA,MAsBA,KAAK,CAAC,QAAN,CAAe,YAAf,EAA6B,SAAC,GAAD;AAC3B,YAAG,GAAH;AACE,cAAG,EAAE,CAAC,SAAH,OAAkB,MAArB;AACE,cAAE,CAAC,UAAH,CAAc,GAAd;mBACA,EAAE,CAAC,MAAH,GAFF;WADF;SAD2B;MAAA,CAA7B,CAtBA;AAAA,MA4BA,KAAK,CAAC,QAAN,CAAe,QAAf,EAAyB,SAAC,GAAD;AACvB;AAAA,YAAG,GAAH;AACE,cAAI,CAAC,IAAL,CAAU,QAAV,EAAoB,GAApB;AAAA,UACA,aAAa,UAAU,GAAV,CADb;AAEA,cAAG,KAAK,CAAC,OAAN,CAAc,UAAd,CAAH;AACE,cAAE,CAAC,MAAH,CAAU,UAAV;mBACA,EAAE,CAAC,MAAH,GAFF;WAAA;mBAIE,IAAI,CAAC,KAAL,CAAY,YAAS,IAAT,GAAc,+CAA1B,EAA0E,GAA1E,EAJF;WAHF;SADuB;MAAA,CAAzB,CA5BA;AAAA,MAsCA,KAAK,CAAC,QAAN,CAAe,aAAf,EAA8B,SAAC,GAAD;AAC5B,YAAG,GAAH;iBACE,EAAE,CAAC,UAAH,CAAc,GAAd,EADF;SAD4B;MAAA,CAA9B,CAtCA;AAAA,MA0CA,KAAK,CAAC,QAAN,CAAe,OAAf,EAAwB,SAAC,GAAD;AACtB,YAAG,QAAS,MAAZ;iBACE,EAAE,CAAC,SAAH,CAAa,GAAb,CAAiB,CAAC,WAAlB,GADF;SADsB;MAAA,CAAxB,CA1CA;aA8CA,KAAK,CAAC,QAAN,CAAe,QAAf,EAAyB,SAAC,GAAD;AACvB,YAAG,QAAS,MAAZ;iBACE,EAAE,CAAC,MAAH,CAAU,GAAV,EADF;SADuB;MAAA,CAAzB,EA/CuB;IAAA,CAFpB;AAAA,IAuDL,uBAAuB,SAAC,KAAD,EAAQ,EAAR;AAErB,WAAK,CAAC,QAAN,CAAe,YAAf,EAA6B,SAAC,GAAD;AAC3B,YAAG,QAAS,MAAZ;iBACE,EAAE,CAAC,UAAH,CAAc,EAAE,CAAC,MAAH,CAAU,GAAV,CAAd,EADF;SAD2B;MAAA,CAA7B;AAAA,MAIA,KAAK,CAAC,QAAN,CAAe,OAAf,EAAwB,SAAC,GAAD;AACtB,YAAG,QAAS,MAAZ;AACE,YAAE,CAAC,KAAH,CAAS,IAAT;AACA,cAAG,EAAE,CAAC,IAAH,EAAH;mBACE,EAAE,CAAC,WAAH,GADF;WAFF;SADsB;MAAA,CAAxB,CAJA;AAAA,MAUA,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB,SAAC,GAAD;AACrB,YAAG,QAAS,MAAZ;iBACE,EAAE,CAAC,QAAH,CAAY,QAAO,EAAP,IAAa,QAAO,MAAhC,CAAuC,CAAC,WAAxC,GADF;SADqB;MAAA,CAAvB,CAVA;aAcA,KAAK,CAAC,QAAN,CAAe,WAAf,EAA4B,SAAC,GAAD;AAC1B,YAAG,QAAS,MAAZ;iBACE,EAAE,CAAC,SAAH,CAAa,QAAO,EAAP,IAAa,QAAO,MAAjC,CAAwC,CAAC,MAAzC,CAAgD,IAAhD,EADF;SAD0B;MAAA,CAA5B,EAhBqB;IAAA,CAvDlB;AAAA,IA6EL,yBAAyB,SAAC,KAAD,EAAQ,EAAR,EAAY,MAAZ;AAEvB,WAAK,CAAC,QAAN,CAAe,QAAf,EAAyB,SAAC,GAAD;AACvB;AAAA,YAAG,QAAS,MAAZ;AACE,cAAI,EAAE,CAAC,MAAH,EAAJ;AAAA,UACA,CAAC,CAAC,UAAF,CAAa,KAAb,CADA;AAEA,kBAAO,GAAP;AAAA,iBACO,OADP;AAEI,eAAC,CAAC,IAAF,CAAO,KAAP,EAFJ;AACO;AADP,iBAGO,UAHP;AAAA,iBAGmB,WAHnB;AAAA,iBAGgC,aAHhC;AAAA,iBAG+C,cAH/C;AAII,eAAC,CAAC,QAAF,CAAW,GAAX,CAAe,CAAC,GAAhB,CAAoB,MAApB,CAA8B,CAAC,IAA/B,CAAoC,IAApC,EAJJ;AAG+C;AAH/C,iBAKO,MALP;AAAA,iBAKe,EALf;AAMI,eAAC,CAAC,QAAF,CAAW,WAAX,CAAuB,CAAC,IAAxB,CAA6B,IAA7B,CAAkC,CAAC,GAAnC,CAAuC,MAAvC,EANJ;AAKe;AALf;AAQI,0BAAY,EAAE,CAAC,MAAH,CAAU,GAAV,CAAZ;AACA,kBAAG,SAAS,CAAC,KAAV,EAAH;AACE,oBAAI,CAAC,IAAL,CAAU,kCAAV,EAA8C,GAA9C;AAAA,gBACA,CAAC,CAAC,GAAF,CAAM,MAAN,CAAgB,CAAC,IAAjB,CAAsB,KAAtB,CADA,CADF;eAAA;AAIE,iBAAC,CAAC,GAAF,CAAM,SAAN,CAAgB,CAAC,QAAjB,CAA0B,UAA1B,CAAqC,CAAC,IAAtC,CAA2C,IAA3C,EAJF;eATJ;AAAA,WAFA;AAAA,UAiBA,CAAC,CAAC,KAAF,CAAQ,EAAR,CAAW,CAAC,MAAZ,CAAmB,MAAnB,CAjBA;AAkBA,cAAG,EAAE,CAAC,MAAH,EAAH;AACE,aAAC,CAAC,QAAF,CAAW,EAAE,CAAC,MAAH,EAAX,EADF;WAlBA;iBAoBA,CAAC,CAAC,MAAF,GArBF;SADuB;MAAA,CAAzB;AAAA,MAwBA,KAAK,CAAC,QAAN,CAAe,cAAf,EAA+B,SAAC,GAAD;AAC7B;AAAA,YAAG,QAAS,MAAZ;AACE,cAAI,EAAE,CAAC,MAAH,EAAJ;AAAA,UACA,CAAC,CAAC,UAAF,CAAa,IAAb,CADA;AAEA,kBAAO,GAAP;AAAA,iBACO,OADP;AAEI,eAAC,CAAC,IAAF,CAAO,KAAP,EAFJ;AACO;AADP,iBAGO,UAHP;AAAA,iBAGmB,WAHnB;AAAA,iBAGgC,aAHhC;AAAA,iBAG+C,cAH/C;AAII,eAAC,CAAC,QAAF,CAAW,GAAX,CAAe,CAAC,GAAhB,CAAoB,MAApB,CAA8B,CAAC,IAA/B,CAAoC,IAApC,EAJJ;AAG+C;AAH/C,iBAKO,MALP;AAAA,iBAKe,EALf;AAMI,eAAC,CAAC,QAAF,CAAW,WAAX,CAAuB,CAAC,IAAxB,CAA6B,IAA7B,CAAkC,CAAC,GAAnC,CAAuC,MAAvC,EANJ;AAKe;AALf;AAQI,0BAAY,EAAE,CAAC,MAAH,CAAU,GAAV,CAAZ;AACA,kBAAG,SAAS,CAAC,KAAV,EAAH;AACE,oBAAI,CAAC,IAAL,CAAU,kCAAV,EAA8C,GAA9C;AAAA,gBACA,CAAC,CAAC,GAAF,CAAM,MAAN,CAAgB,CAAC,IAAjB,CAAsB,KAAtB,CADA,CADF;eAAA;AAIE,iBAAC,CAAC,GAAF,CAAM,SAAN,CAAgB,CAAC,QAAjB,CAA0B,UAA1B,CAAqC,CAAC,IAAtC,CAA2C,IAA3C,EAJF;eATJ;AAAA,WAFA;AAAA,UAiBA,CAAC,CAAC,KAAF,CAAQ,EAAR,CAAW,CAAC,MAAZ,CAAmB,MAAnB,CAjBA;AAkBA,cAAG,EAAE,CAAC,MAAH,EAAH;AACE,aAAC,CAAC,QAAF,CAAW,EAAE,CAAC,MAAH,EAAX,EADF;WAlBA;iBAoBA,CAAC,CAAC,MAAF,GArBF;SAD6B;MAAA,CAA/B,CAxBA;aAgDA,KAAK,CAAC,QAAN,CAAe,aAAf,EAA8B,SAAC,GAAD;AAC5B,YAAG,QAAS,MAAZ;iBACE,EAAE,CAAC,MAAH,EAAW,CAAC,KAAZ,CAAkB,GAAlB,CAAsB,CAAC,MAAvB,GADF;SAD4B;MAAA,CAA9B,EAlDuB;IAAA,CA7EpB;GAAP,CAR+C;AAAA,CAAjD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,OAArC,EAA8C,SAAC,IAAD,EAAO,KAAP,EAAc,QAAd,EAAwB,UAAxB;AAC5C;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,CAAC,OAAD,EAAS,QAAT,EAAmB,UAAnB,CAFJ;AAAA,IAGL,YAAY,SAAC,QAAD;AACV;AAAA,WAAK,OAAL;AAEA,aAAO,EAAP,CAHU;IAAA,CAHP;AAAA,IAQL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,WAAxB;AACJ;AAAA,WAAK,WAAY,GAAjB;AAAA,MACA,QAAQ,WAAY,GADpB;AAAA,MAEA,SAAS,WAAY,GAFrB;AAIA,UAAG,EAAK,SAAS,MAAV,CAAP;AACE,YAAI,CAAC,KAAL,CAAW,6DAAX;AACA,eAFF;OAJA;AAAA,MAQA,OAAO,OARP;AAAA,MASA,EAAE,CAAC,IAAH,CAAQ,IAAR,CATA;AAAA,MAUA,EAAE,CAAC,MAAH,CAAU,UAAU,KAApB,CAVA;AAAA,MAWA,EAAE,CAAC,KAAH,CAAS,KAAT,CAXA;AAAA,MAYA,EAAE,CAAC,SAAH,CAAa,SAAb,CAZA;AAAA,MAaA,EAAE,CAAC,KAAH,EAAU,CAAC,KAAX,CAAiB,QAAjB,CAbA;AAAA,MAcA,OAAO,CAAC,QAAR,CAAiB,EAAE,CAAC,EAAH,EAAjB,CAdA;AAAA,MAgBA,KAAK,CAAC,QAAN,CAAe,EAAf,EAAmB,MAAnB,CAhBA;AAAA,MAiBA,EAAE,CAAC,QAAH,EAjBA;AAAA,MAuBA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,CAvBA;aAwBA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,EAA8C,MAA9C,EAzBI;IAAA,CARD;GAAP,CAF4C;AAAA,CAA9C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,MAArC,EAA6C,SAAC,IAAD,EAAO,KAAP,EAAc,UAAd;AAC3C;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,CAAC,MAAD,EAAQ,QAAR,EAAkB,UAAlB,CAFJ;AAAA,IAGL,YAAY,SAAC,QAAD;AACV;AAAA,WAAK,OAAL;AAEA,aAAO,EAAP,CAHU;IAAA,CAHP;AAAA,IAQL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,WAAxB;AACJ;AAAA,WAAK,WAAY,GAAjB;AAAA,MACA,QAAQ,WAAY,GADpB;AAAA,MAEA,SAAS,WAAY,GAFrB;AAIA,UAAG,EAAK,SAAS,MAAV,CAAP;AACE,YAAI,CAAC,KAAL,CAAW,6DAAX;AACA,eAFF;OAJA;AAAA,MAQA,OAAO,MARP;AAAA,MASA,EAAE,CAAC,IAAH,CAAQ,IAAR,CATA;AAAA,MAUA,EAAE,CAAC,MAAH,CAAU,UAAU,KAApB,CAVA;AAAA,MAWA,EAAE,CAAC,KAAH,CAAS,KAAT,CAXA;AAAA,MAYA,EAAE,CAAC,SAAH,CAAa,QAAb,CAZA;AAAA,MAaA,EAAE,CAAC,cAAH,CAAkB,IAAlB,CAbA;AAAA,MAcA,OAAO,CAAC,QAAR,CAAiB,EAAE,CAAC,EAAH,EAAjB,CAdA;AAAA,MAgBA,KAAK,CAAC,QAAN,CAAe,EAAf,EAAmB,MAAnB,CAhBA;AAAA,MAiBA,EAAE,CAAC,QAAH,EAjBA;AAAA,MAuBA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,CAvBA;aAwBA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,EAA8C,MAA9C,EAzBI;IAAA,CARD;GAAP,CAF2C;AAAA,CAA7C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,GAArC,EAA0C,SAAC,IAAD,EAAO,KAAP,EAAc,UAAd;AACxC;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,CAAC,GAAD,EAAK,QAAL,EAAe,UAAf,CAFJ;AAAA,IAGL,YAAY,SAAC,QAAD;AACV;AAAA,WAAK,OAAL;AAEA,aAAO,EAAP,CAHU;IAAA,CAHP;AAAA,IAQL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,WAAxB;AACJ;AAAA,WAAK,WAAY,GAAjB;AAAA,MACA,QAAQ,WAAY,GADpB;AAAA,MAEA,SAAS,WAAY,GAFrB;AAIA,UAAG,EAAK,SAAS,MAAV,CAAP;AACE,YAAI,CAAC,KAAL,CAAW,6DAAX;AACA,eAFF;OAJA;AAAA,MAQA,OAAO,GARP;AAAA,MASA,EAAE,CAAC,IAAH,CAAQ,IAAR,CATA;AAAA,MAUA,EAAE,CAAC,MAAH,CAAU,UAAU,KAApB,CAVA;AAAA,MAWA,EAAE,CAAC,KAAH,CAAS,KAAT,CAXA;AAAA,MAYA,EAAE,CAAC,SAAH,CAAa,QAAb,CAZA;AAAA,MAaA,EAAE,CAAC,cAAH,CAAkB,IAAlB,CAbA;AAAA,MAcA,EAAE,CAAC,YAAH,CAAgB,IAAhB,CAdA;AAAA,MAeA,EAAE,CAAC,QAAH,EAfA;AAAA,MAgBA,OAAO,CAAC,QAAR,CAAiB,EAAE,CAAC,EAAH,EAAjB,CAhBA;AAAA,MAkBA,KAAK,CAAC,QAAN,CAAe,EAAf,EAAmB,MAAnB,CAlBA;AAAA,MAwBA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,CAxBA;AAAA,MA0BA,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB,SAAC,GAAD;AACrB,YAAG,QAAS,MAAZ;AACE,cAAG,QAAS,OAAZ;AACE,gBAAG,QAAQ,KAAR,YAAe,QAAlB;AACE,gBAAE,CAAC,UAAH,CAAc,GAAd,CAAkB,CAAC,QAAnB,CAA4B,IAA5B,EADF;aAAA;AAGE,gBAAE,CAAC,UAAH,CAAc,QAAd,CAAuB,CAAC,QAAxB,CAAiC,IAAjC,EAHF;aADF;WAAA;AAME,cAAE,CAAC,QAAH,CAAY,KAAZ,CAAkB,CAAC,UAAnB,CAA8B,MAA9B,EANF;WAAA;iBAOA,EAAE,CAAC,MAAH,CAAU,IAAV,EARF;SADqB;MAAA,CAAvB,CA1BA;AAAA,MAqCA,UAAU,CAAC,qBAAX,CAAiC,KAAjC,EAAwC,EAAxC,CArCA;aAsCA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,EAA8C,MAA9C,EAvCI;IAAA,CARD;GAAP,CAFwC;AAAA,CAA1C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,GAArC,EAA0C,SAAC,IAAD,EAAO,KAAP,EAAc,MAAd,EAAsB,UAAtB;AACxC;AAAA,aAAW,CAAX;AACA,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,SAAS,CAAC,GAAD,EAAK,QAAL,EAAe,UAAf,CAFJ;AAAA,IAGL,YAAY,SAAC,QAAD;AACV;AAAA,WAAK,OAAL;AAEA,aAAO,EAAP,CAHU;IAAA,CAHP;AAAA,IAQL,MAAM,SAAC,KAAD,EAAQ,OAAR,EAAiB,KAAjB,EAAwB,WAAxB;AACJ;AAAA,WAAK,WAAY,GAAjB;AAAA,MACA,QAAQ,WAAY,GADpB;AAAA,MAEA,SAAS,WAAY,GAFrB;AAIA,UAAG,EAAK,SAAS,MAAV,CAAP;AACE,YAAI,CAAC,KAAL,CAAW,6DAAX;AACA,eAFF;OAJA;AAAA,MAQA,OAAO,GARP;AAAA,MASA,EAAE,CAAC,IAAH,CAAQ,IAAR,CATA;AAAA,MAUA,EAAE,CAAC,MAAH,CAAU,UAAU,KAApB,CAVA;AAAA,MAWA,EAAE,CAAC,KAAH,CAAS,KAAT,CAXA;AAAA,MAYA,EAAE,CAAC,SAAH,CAAa,QAAb,CAZA;AAAA,MAaA,EAAE,CAAC,UAAH,CAAc,IAAd,CAbA;AAAA,MAcA,EAAE,CAAC,cAAH,CAAkB,IAAlB,CAdA;AAAA,MAeA,OAAO,CAAC,QAAR,CAAiB,EAAE,CAAC,EAAH,EAAjB,CAfA;AAAA,MAiBA,KAAK,CAAC,QAAN,CAAe,EAAf,EAAmB,MAAnB,CAjBA;AAAA,MAkBA,EAAE,CAAC,QAAH,EAlBA;AAAA,MAuBA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,CAvBA;AAAA,MAyBA,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB,SAAC,GAAD;AACrB,YAAG,QAAS,MAAZ;AACE,cAAG,QAAS,OAAZ;AACE,gBAAG,QAAQ,MAAR,YAAgB,OAAnB;AACE,gBAAE,CAAC,UAAH,CAAc,GAAd,CAAkB,CAAC,QAAnB,CAA4B,IAA5B,EADF;aAAA;AAGE,gBAAE,CAAC,UAAH,CAAc,MAAd,CAAqB,CAAC,QAAtB,CAA+B,IAA/B,EAHF;aADF;WAAA;AAME,cAAE,CAAC,QAAH,CAAY,KAAZ,CAAkB,CAAC,UAAnB,CAA8B,MAA9B,EANF;WAAA;iBAOA,EAAE,CAAC,MAAH,CAAU,IAAV,EARF;SADqB;MAAA,CAAvB,CAzBA;AAAA,MAoCA,UAAU,CAAC,qBAAX,CAAiC,KAAjC,EAAwC,EAAxC,CApCA;aAqCA,UAAU,CAAC,uBAAX,CAAmC,KAAnC,EAA0C,EAA1C,EAA8C,MAA9C,EAtCI;IAAA,CARD;GAAP,CAFwC;AAAA,CAA1C;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,kBAAnC,EAAuD,SAAC,IAAD;AACrD;AAAA,cAAY,EAAZ;AAAA,EACA,YAAY,EADZ;AAAA,EAGA,IAAI,CAAC,WAAL,GAAmB,SAAC,KAAD,IAHnB;AAAA,EAMA,IAAI,CAAC,YAAL,GAAoB,SAAC,SAAD,EAAY,KAAZ;AAClB;AAAA,QAAG,KAAH;AACE,eAAU,OAAV,GAAmB,SAAnB;AACA,UAAG,SAAU,OAAb;AACE;AAAA;aAAA;wBAAA;AACE,2BAAG,SAAH,GADF;AAAA;wBADF;OAFF;KADkB;EAAA,CANpB;AAAA,EAaA,IAAI,CAAC,YAAL,GAAoB,SAAC,KAAD;AAClB;AAAA,UAAM,SAAS,SAAf;AACA,WAAO,SAAU,KAAjB,CAFkB;EAAA,CAbpB;AAAA,EAiBA,IAAI,CAAC,QAAL,GAAgB,SAAC,KAAD,EAAQ,QAAR;AACd,QAAG,KAAH;AACE,UAAG,UAAc,OAAjB;AACE,iBAAU,OAAV,GAAmB,EAAnB,CADF;OAAA;AAGA,UAAG,EAAK,CAAC,QAAF,CAAW,SAAU,OAArB,EAA6B,QAA7B,CAAP;eACE,SAAU,OAAM,CAAC,IAAjB,CAAsB,QAAtB,EADF;OAJF;KADc;EAAA,CAjBhB;AAAA,EAyBA,IAAI,CAAC,UAAL,GAAkB,SAAC,KAAD,EAAQ,QAAR;AAChB;AAAA,QAAG,SAAU,OAAb;AACE,YAAM,SAAU,OAAM,CAAC,OAAjB,CAAyB,QAAzB,CAAN;AACA,UAAG,OAAO,CAAV;eACE,SAAU,OAAM,CAAC,MAAjB,CAAwB,GAAxB,EAA6B,CAA7B,EADF;OAFF;KADgB;EAAA,CAzBlB;AA+BA,SAAO,IAAP,CAhCqD;AAAA,CAAvD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,QAAnC,EAA6C,SAAC,IAAD;AAE3C;AAAA,WAAS,EAAT;AAAA,EACA,eAAe,CADf;AAAA,EAEA,UAAU,CAFV;AAAA,EAIA,IAAI,CAAC,IAAL,GAAY;WACV,eAAe,IAAI,CAAC,GAAL,GADL;EAAA,CAJZ;AAAA,EAOA,IAAI,CAAC,KAAL,GAAa,SAAC,KAAD;AACX;AAAA,UAAM,MAAO,OAAb;AACA,QAAG,IAAH;AACE,YAAM,MAAO,OAAP,GAAgB;AAAA,QAAC,MAAK,KAAN;AAAA,QAAa,OAAM,CAAnB;AAAA,QAAsB,OAAM,CAA5B;AAAA,QAA+B,SAAQ,CAAvC;AAAA,QAA0C,QAAQ,KAAlD;OAAtB,CADF;KADA;AAAA,IAGA,GAAG,CAAC,KAAJ,GAAY,IAAI,CAAC,GAAL,EAHZ;WAIA,GAAG,CAAC,MAAJ,GAAa,KALF;EAAA,CAPb;AAAA,EAcA,IAAI,CAAC,IAAL,GAAY,SAAC,KAAD;AACV;AAAA,QAAG,MAAM,MAAO,OAAhB;AACE,SAAG,CAAC,MAAJ,GAAa,KAAb;AAAA,MACA,GAAG,CAAC,KAAJ,IAAa,IAAI,CAAC,GAAL,KAAa,GAAG,CAAC,KAD9B;AAAA,MAEA,GAAG,CAAC,OAAJ,IAAe,CAFf,CADF;KAAA;WAIA,UAAU,IAAI,CAAC,GAAL,KAAa,aALb;EAAA,CAdZ;AAAA,EAqBA,IAAI,CAAC,MAAL,GAAc;AACZ;AAAA;0BAAA;AACE,SAAG,CAAC,GAAJ,GAAU,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,OAA1B,CADF;AAAA;AAAA,IAEA,IAAI,CAAC,IAAL,CAAU,MAAV,CAFA;AAAA,IAGA,IAAI,CAAC,IAAL,CAAU,mBAAV,EAA+B,OAA/B,CAHA;AAIA,WAAO,MAAP,CALY;EAAA,CArBd;AAAA,EA4BA,IAAI,CAAC,KAAL,GAAa;WACX,SAAS,GADE;EAAA,CA5Bb;AA+BA,SAAO,IAAP,CAje,UAAf,CAA0B,CAAC,OAA3B,CAAmC,aAAnC,EAAkD,SAAC,IAAD;AAEhD;SAAA,UAAU;AACR;AAAA,YAAQ,EAAR;AAAA,IACA,aAAa,EADb;AAAA,IAEA,KAAK,MAFL;AAAA,IAGA,aAAa,KAHb;AAAA,IAIA,OAAO,QAJP;AAAA,IAKA,OAAO,SALP;AAAA,IAMA,QAAQ,QANR;AAAA,IAOA,QAAQ,SAPR;AAAA,IASA,KAAK,aATL;AAAA,IAWA,EAAE,CAAC,IAAH,GAAU,SAAC,GAAD;AACR,UAAG,SAAS,CAAC,MAAV,CAAiB,GAAG,CAAH,CAAjB,CAAH;AACE,eAAO,KAAP,CADF;OAAA;AAGE,gBAAQ,GAAR;AACA,eAAO,EAAP,CAJF;OADQ;IAAA,CAXV;AAAA,IAkBA,EAAE,CAAC,SAAH,GAAe,SAAC,IAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACE,eAAO,UAAP,CADF;OAAA;AAGE,qBAAa,IAAb;AACA,eAAO,EAAP,CAJF;OADa;IAAA,CAlBf;AAAA,IAyBA,EAAE,CAAC,CAAH,GAAO,SAAC,IAAD;AACL,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACE,eAAO,EAAP,CADF;OAAA;AAGE,aAAK,IAAL;AACA,eAAO,EAAP,CAJF;OADK;IAAA,CAzBP;AAAA,IAgCA,EAAE,CAAC,SAAH,GAAe,SAAC,GAAD;AACb,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACE,eAAO,UAAP,CADF;OAAA;AAGE,qBAAa,GAAb;AACA,eAAO,EAAP,CAJF;OADa;IAAA,CAhCf;AAAA,IAuCA,EAAE,CAAC,GAAH,GAAS;aACP,KADO;IAAA,CAvCT;AAAA,IA0CA,EAAE,CAAC,GAAH,GAAS;aACP,KADO;IAAA,CA1CT;AAAA,IA6CA,EAAE,CAAC,QAAH,GAAc;aACZ,MADY;IAAA,CA7Cd;AAAA,IAgDA,EAAE,CAAC,QAAH,GAAc;aACZ,MADY;IAAA,CAhDd;AAAA,IAmDA,EAAE,CAAC,MAAH,GAAY;aACV,CAAC,EAAE,CAAC,GAAH,EAAD,EAAW,EAAE,CAAC,GAAH,EAAX,EADU;IAAA,CAnDZ;AAAA,IAsDA,EAAE,CAAC,WAAH,GAAiB;aACf,CAAC,EAAE,CAAC,QAAH,EAAD,EAAgB,EAAE,CAAC,QAAH,EAAhB,EADe;IAAA,CAtDjB;AAAA,IAyDA,EAAE,CAAC,OAAH,GAAa,SAAC,IAAD;AACX;AAAA,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AAEE,cAAM,EAAN;AAAA,QACA,OAAO,QADP;AAAA,QAEA,OAAO,SAFP;AAAA,QAGA,QAAQ,QAHR;AAAA,QAIA,QAAQ,SAJR;AAMA;4BAAA;AACE,aAAI,GAAJ,GAAS;AAAA,YAAC,KAAI,CAAL;AAAA,YAAQ,OAAM,EAAd;AAAA,YAAkB,KAAI,QAAtB;AAAA,YAAgC,KAAI,SAApC;WAAT,CADF;AAAA,SANA;AAQA;sBAAA;AACE,cAAI,CAAJ;AAAA,UACA,KAAQ,cAAa,QAAhB,GAA8B,CAAE,IAAhC,GAAyC,GAAG,CAAH,CAD9C;AAGA;wBAAA;AACE,gBAAI,EAAG,EAAC,CAAC,GAAF,CAAP;AAAA,YACA,CAAC,CAAC,KAAK,CAAC,IAAR,CAAa;AAAA,cAAC,GAAE,EAAH;AAAA,cAAO,OAAO,CAAd;AAAA,cAAiB,KAAI,CAAC,CAAC,GAAvB;aAAb,CADA;AAEA,gBAAG,CAAC,CAAC,GAAF,GAAQ,CAAX;AAAkB,eAAC,CAAC,GAAF,GAAQ,CAAR,CAAlB;aAFA;AAGA,gBAAG,CAAC,CAAC,GAAF,GAAQ,CAAX;AAAkB,eAAC,CAAC,GAAF,GAAQ,CAAR,CAAlB;aAHA;AAIA,gBAAG,OAAO,CAAV;AAAiB,qBAAO,CAAP,CAAjB;aAJA;AAKA,gBAAG,OAAO,CAAV;AAAiB,qBAAO,CAAP,CAAjB;aALA;AAMA,gBAAG,UAAH;AAAmB,mBAAK,EAAL,CAAnB;aAPF;AAAA,WAHA;AAWA,cAAG,UAAH;AAEE,gBAAG,QAAQ,CAAX;AAAkB,sBAAQ,CAAR,CAAlB;aAAA;AACA,gBAAG,QAAQ,CAAX;AAAkB,sBAAQ,CAAR,CAAlB;aAHF;WAZF;AAAA,SARA;AAwBA,eAAO;AAAA,UAAC,KAAI,IAAL;AAAA,UAAW,KAAI,IAAf;AAAA,UAAqB,UAAS,KAA9B;AAAA,UAAoC,UAAS,KAA7C;AAAA,UAAoD,MAAK,GAAzD;SAAP,CA1BF;OAAA;AA2BA,aAAO,EAAP,CA5BW;IAAA,CAzDb;AAAA,IAyFA,EAAE,CAAC,IAAH,GAAU,SAAC,IAAD;AACR,UAAG,SAAS,CAAC,MAAV,KAAoB,CAAvB;AACE,eAAO,IAAI,CAAC,GAAL,CAAS,SAAC,CAAD;iBAAO;AAAA,YAAC,GAAG,CAAE,IAAN;AAAA,YAAW,QAAQ,SAAS,CAAC,GAAV,CAAc,SAAC,CAAD;qBAAO;AAAA,gBAAC,KAAI,CAAL;AAAA,gBAAQ,OAAO,CAAE,GAAjB;AAAA,gBAAqB,GAAE,CAAE,IAAzB;gBAAP;YAAA,CAAd,CAAnB;YAAP;QAAA,CAAT,CAAP,CADF;OAAA;AAEA,aAAO,EAAP,CAHQ;IAAA,CAzFV;AA+FA,WAAO,EAAP,CAhGQ;EAAA,EAFsC;AAAA,CAAlD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,SAA3B,CAAqC,SAArC,EAAgD,SAAC,IAAD;AAE9C,SAAO;AAAA,IACL,UAAU,GADL;AAAA,IAEL,UAAU,2CAFL;AAAA,IAGL,OACE;AAAA,YAAM,GAAN;AAAA,MACA,OAAO,GADP;KAJG;AAAA,IAML,MAAM,SAAC,KAAD,EAAQ,IAAR,EAAc,KAAd;AACJ,WAAK,CAAC,KAAN,GAAc;AAAA,QACZ,QAAQ,MADI;AAAA,QAEZ,OAAO,KAAK,CAAC,KAAN,GAAc,IAFT;AAAA,QAGZ,kBAAkB,QAHN;OAAd;aAKA,KAAK,CAAC,MAAN,CAAa,MAAb,EAAqB,SAAC,GAAD;AACnB,YAAG,GAAH;iBACE,EAAE,CAAC,MAAH,CAAU,IAAK,GAAf,CAAkB,CAAC,MAAnB,CAA0B,MAA1B,CAAiC,CAAC,IAAlC,CAAuC,GAAvC,EAA4C,GAA5C,CAAgD,CAAC,IAAjD,CAAsD,WAAtD,EAAmE,gBAAnE,EADF;SADmB;MAAA,CAArB,EANI;IAAA,CAND;GAAP,CAF8C;AAAA,CAAhD;CCAA,OAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,CAAC,OAA3B,CAAmC,OAAnC,EAA4C,SAAC,IAAD;AAI1C;AAAA,MAAC,KAAD,GAAQ,SAAC,CAAD,EAAG,CAAH,EAAK,SAAL;AACN;AAAA,aAAS,SAAC,CAAD;aACP,CAAC,CAAC,OAAF,CAAU,CAAV,IAAe,EADR;IAAA,CAAT;AAAA,IAGA,MAAM,EAHN;AAAA,IAIA,IAAI,CAJJ;AAKA,WAAM,IAAI,CAAC,CAAC,MAAZ;AACE,UAAG,OAAO,CAAE,GAAT,CAAH;AACE,WAAI,EAAE,GAAF,CAAJ,GAAY,MAAZ;AAAA,QACA,IAAI,IAAI,SADR;AAEA,eAAM,MAAK,CAAL,IAAK,CAAL,GAAS,CAAC,CAAC,MAAX,CAAN;AACE,cAAG,OAAO,CAAE,GAAT,CAAH;AACE,iBAAK,SAAL,CADF;WAAA;AAGE,eAAI,EAAE,GAAF,CAAJ,GAAa,CAAE,GAAf;AACA,kBAJF;WADF;QAAA,CAHF;OAAA;AAAA,MASA,GATA,CADF;IAAA,CALA;AAgBA,WAAO,GAAP,CAjBM;EAAA,CAAR;AAAA,EAqBA,KAAK,CArBL;AAAA,EAsBA,IAAC,MAAD,GAAS;AACP,WAAO,UAAU,IAAjB,CADO;EAAA,CAtBT;AAAA,EA2BA,IAAC,UAAD,GAAa,SAAC,GAAD;AACX;AAAA,QAAG,GAAH;AACE,UAAI,GAAG,CAAC,IAAJ,EAAU,CAAC,OAAX,CAAmB,UAAnB,EAA+B,EAA/B,CAAkC,CAAC,KAAnC,CAAyC,GAAzC,CAA6C,CAAC,GAA9C,CAAkD,SAAC,CAAD;eAAO,CAAC,CAAC,OAAF,CAAU,kBAAV,EAA8B,EAA9B,EAAP;MAAA,CAAlD,CAAJ;AACO,UAAG,CAAC,CAAC,MAAF,KAAY,CAAf;AAAsB,eAAO,CAAE,GAAT,CAAtB;OAAA;eAAuC,EAAvC;OAFT;KAAA;AAGA,WAAO,MAAP,CAJW;EAAA,CA3Bb;AAmCA,SAAO,IAAP,CAvC0C;AAAA,CAA5C","sourcesContent":["angular.module('wk.chart',[])\r\nangular.module('wk.chart')\r\n\r\n  .constant 'd3Scales', {\r\n    linear: d3.scale.linear\r\n    sqrt: d3.scale.sqrt\r\n    log: d3.scale.log\r\n    identity: d3.scale.identity\r\n    quantize: d3.scale.quantize\r\n    quantile: d3.scale.quantile\r\n    threshold: d3.scale.threshold\r\n    ordinal: d3.scale.ordinal\r\n    category10: d3.scale.category10\r\n    category20: d3.scale.category20\r\n    category20b: d3.scale.category20b\r\n    category20c: d3.scale.category20c\r\n    time: d3.time.scale\r\n  }\r\n\r\n  .constant 'd3OrdinalScales', [\r\n    'ordinal'\r\n    'category10'\r\n    'category20'\r\n    'category20b'\r\n    'category20c'\r\n  ]\r\n\r\n  .constant 'd3ChartMargins', {\r\n    top: 10\r\n    left: 50\r\n    bottom: 40\r\n    right: 20\r\n    topBottomMargin:{axis:25, label:18}\r\n    leftRightMargin:{axis:40, label:20}\r\n    minMargin:8\r\n    default:\r\n      top: 8\r\n      left:8\r\n      bottom:8\r\n      right:10\r\n    axis:\r\n      top:25\r\n      bottom:25\r\n      left:40\r\n      right:40\r\n    label:\r\n      top:18\r\n      bottom:18\r\n      left:20\r\n      right:20\r\n  }\r\n\r\n  .constant 'd3Shapes', [\r\n    'circle',\r\n    'cross',\r\n    'triangle-down',\r\n    'triangle-up',\r\n    'square',\r\n    'diamond'\r\n  ]\r\n\r\n  .constant 'axisConfig', {\r\n    labelFontSize: '1.6em'\r\n    x:\r\n      axisPositions: ['top', 'bottom']\r\n      axisOffset: {bottom:'height'}\r\n      axisPositionDefault: 'bottom'\r\n      direction: 'horizontal'\r\n      measure: 'width'\r\n      labelPositions:['outside', 'inside']\r\n      labelPositionDefault: 'outside'\r\n      labelOffset:\r\n        top: '1em'\r\n        bottom: '-0.8em'\r\n    y:\r\n      axisPositions: ['left', 'right']\r\n      axisOffset: {right:'width'}\r\n      axisPositionDefault: 'left'\r\n      direction: 'vertical'\r\n      measure: 'height'\r\n      labelPositions:['outside', 'inside']\r\n      labelPositionDefault: 'outside'\r\n      labelOffset:\r\n        left: '1.2em'\r\n        right: '1.2em'\r\n  }\r\n  .constant 'd3Animation', {\r\n    duration:500\r\n  }\r\n  .constant 'templateDir', 'app/lib/templates/'\r\n\r\n  .constant 'd3ScaleMap', [\r\n    scaleX: 'x'\r\n    scaleY: 'y'\r\n    scaleColor: 'color'\r\n    scaleSize: 'size'\r\n    scaleShape: 'shape'\r\n  ]\r\n\r\n  .constant 'formatDefaults', {\r\n    date: '%d.%m.%Y'\r\n    number :  ',.2f'\r\n  }\r\n\r\n","angular.module('wk.chart').directive 'brush', ($log, selectionSharing, behavior) ->\r\n  return {\r\n    restrict: 'A'\r\n    require: ['^chart', '^layout', '?x', '?y']\r\n    scope:\r\n      brushExtent: '='\r\n      selectedValues: '='\r\n      selectedDomain: '='\r\n      change: '&'\r\n\r\n    link:(scope, element, attrs, controllers) ->\r\n      chart = controllers[0]\r\n      layout = controllers[1]\r\n      x = controllers[2]\r\n      y = controllers[3]\r\n      xScale = undefined\r\n      yScale = undefined\r\n      _selectables = undefined\r\n      _brushAreaSelection = undefined\r\n      _isAreaBrush = not x and not y\r\n      _brushGroup = undefined\r\n\r\n      brush = chart.behavior().brush\r\n      if not x and not y\r\n        #layout brush, get x and y from layout scales\r\n        scales = layout.scales().getScales(['x', 'y'])\r\n        brush.x(scales.x)\r\n        brush.y(scales.y)\r\n      else\r\n        brush.x(x)\r\n        brush.y(y)\r\n      brush.active(true)\r\n\r\n      brush.events().on 'brush', (idxRange, valueRange, domain) ->\r\n        if attrs.brushExtent\r\n          scope.brushExtent = idxRange\r\n        if attrs.selectedValues\r\n          scope.selectedValues = valueRange\r\n        if attrs.selectedDomain\r\n          scope.selectedDomain = domain\r\n        scope.$apply()\r\n\r\n      layout.lifeCycle().on 'draw.brush', (data) ->\r\n        brush.data(data)\r\n\r\n\r\n      attrs.$observe 'brush', (val) ->\r\n        if _.isString(val) and val.length > 0\r\n          brush.brushGroup(val)\r\n        else\r\n          brush.brushGroup(undefined)\r\n  }","angular.module('wk.chart').directive 'brushed', ($log,selectionSharing, timing) ->\r\n  sBrushCnt = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: ['^chart', '?^layout', '?x', '?y']\r\n    link: (scope, element, attrs, controllers) ->\r\n      chart = controllers[0]\r\n      layout = controllers[1]\r\n      x = controllers[2]\r\n      y = controllers[3]\r\n\r\n      axis = x or y\r\n      _brushGroup = undefined\r\n\r\n      brusher = (extent) ->\r\n        timing.start(\"brusher#{axis.id()}\")\r\n        if not axis then return\r\n        #axis\r\n        axis.domain(extent).scale().domain(extent)\r\n        for l in chart.layouts() when l.scales().hasScale(axis) #need to do it this way to ensure the right axis is chosen in case of several layouts in a container\r\n          l.lifeCycle().brush(axis, true) #no animation\r\n        timing.stop(\"brusher#{axis.id()}\")\r\n\r\n      attrs.$observe 'brushed', (val) ->\r\n        if _.isString(val) and val.length > 0\r\n          _brushGroup = val\r\n          selectionSharing.register _brushGroup, brusher\r\n        else\r\n          _brushGroup = undefined\r\n\r\n      scope.$on '$destroy', () ->\r\n        selectionSharing.unregister _brushGroup, brusher\r\n\r\n  }","angular.module('wk.chart').directive 'chart', ($log, chart, container) ->\r\n  chartCnt = 0\r\n  return {\r\n    restrict: 'E'\r\n    require: 'chart'\r\n    scope:\r\n      data: '='\r\n    controller: () ->\r\n      me = chart()\r\n      return me\r\n\r\n    link: (scope, element, attrs, controller) ->\r\n      me = controller\r\n\r\n      deepWatch = false\r\n      watcherRemoveFn = undefined\r\n      element.addClass(me.id())\r\n\r\n      me.container().element(element[0])\r\n\r\n      me.lifeCycle().configure()\r\n\r\n      attrs.$observe 'tooltips', (val) ->\r\n        if val isnt undefined and (val is '' or val is 'true')\r\n          me.showTooltip(true)\r\n        else\r\n          me.showTooltip(false)\r\n\r\n      attrs.$observe 'animationDuration', (val) ->\r\n        if val and _.isNumber(+val) and +val >= 0\r\n          me.animationDuration(val)\r\n\r\n      attrs.$observe 'deepWatch', (val) ->\r\n        if val isnt undefined and val isnt 'false'\r\n          deepWatch = true\r\n        else\r\n          deepWatch = false\r\n        if watcherRemoveFn\r\n          watcherRemoveFn()\r\n\r\n        watcherRemoveFn = scope.$watch 'data', (val) ->\r\n          if val\r\n            me.lifeCycle().newData(val)\r\n        , deepWatch\r\n  }","angular.module('wk.chart').directive 'layout', ($log, layout, container) ->\r\n  layoutCnt = 0\r\n  return {\r\n    restrict: 'AE'\r\n    require: ['layout','^chart']\r\n\r\n    controller: ($element) ->\r\n      me = layout()\r\n      return me\r\n    link: (scope, element, attrs, controllers) ->\r\n\r\n      me = controllers[0]\r\n      chart = controllers[1]\r\n      me.chart(chart)\r\n\r\n      element.addClass(me.id())\r\n\r\n      #$log.log 'linking layout id:', me.id(), 'chart:', chart.id()\r\n      chart.addLayout(me)\r\n      chart.container().addLayout(me)\r\n      me.container(chart.container())\r\n\r\n  }","angular.module('wk.chart').directive 'selection', ($log) ->\r\n  objId = 0\r\n\r\n  return {\r\n    restrict: 'A'\r\n    scope:\r\n      selectedDomain: '='\r\n    require: 'layout'\r\n\r\n    link: (scope, element, attrs, layout) ->\r\n\r\n      layout.lifeCycle().on 'configure.selection', ->\r\n\r\n        _selection = layout.behavior().selected\r\n        _selection.active(true)\r\n        _selection.on 'selected', (selectedObjects) ->\r\n          scope.selectedDomain = selectedObjects\r\n          scope.$apply()\r\n\r\n  }","angular.module('wk.chart').filter 'ttFormat', ($log,formatDefaults) ->\r\n  return (value, format) ->\r\n    if typeof value is 'object' and value.getUTCDate\r\n      df = d3.time.format(formatDefaults.date)\r\n      return df(value)\r\n    if typeof value is 'number' or not isNaN(+value)\r\n      df = d3.format(formatDefaults.number)\r\n      return df(+value)\r\n    return value","angular.module('wk.chart').directive 'area', ($log) ->\r\n  lineCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n    link: (scope, element, attrs, host) ->\r\n      #$log.log 'linking s-line'\r\n      layerKeys = []\r\n      _layout = []\r\n      _tooltip = undefined\r\n      _ttHighlight = undefined\r\n      _circles = undefined\r\n      _scaleList = {}\r\n      _showMarkers = false\r\n      offset = 0\r\n      _id = 'line' + lineCntr++\r\n      area = undefined\r\n\r\n      #--- Tooltip handlers --------------------------------------------------------------------------------------------\r\n\r\n      ttMoveData = (idx) ->\r\n        ttLayers = _layout.map((l) -> {name:l.key, value:_scaleList.y.formatValue(l.value[idx].y), color:{'background-color': l.color}})\r\n        @headerName = _scaleList.x.axisLabel()\r\n        @headerValue = _scaleList.x.formatValue(_layout[0].value[idx].x)\r\n        @layers = @layers.concat(ttLayers)\r\n\r\n      ttMoveMarker = (idx) ->\r\n        _circles = this.selectAll(\".marker-#{_id}\").data(_layout, (d) -> d.key)\r\n        _circles.enter().append('circle').attr('class',\"marker-#{_id}\")\r\n          .attr('r', if _showMarkers then 8 else 5)\r\n          .style('fill', (d)-> d.color)\r\n          .style('fill-opacity', 0.6)\r\n          .style('stroke', 'black')\r\n          .style('pointer-events','none')\r\n        _circles.attr('cy', (d) -> _scaleList.y.scale()(d.value[idx].y))\r\n        _circles.exit().remove()\r\n        this.attr('transform', \"translate(#{_scaleList.x.scale()(_layout[0].value[idx].x) + offset})\")\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color) ->\r\n\r\n        layerKeys = y.layerKeys(data)\r\n        _layout = layerKeys.map((key) => {key:key, color:color.scale()(key), value:data.map((d)-> {x:x.value(d),y:y.layerValue(d, key)})})\r\n\r\n        offset = if x.isOrdinal() then x.scale().rangeBand() / 2 else 0\r\n\r\n        if _tooltip then _tooltip.data(data)\r\n\r\n        area = d3.svg.area()\r\n        .x((d) ->  x.scale()(d.x))\r\n        .y0((d) ->  y.scale()(d.y))\r\n        .y1((d) ->  y.scale()(0))\r\n\r\n        layers = this.selectAll(\".layer\")\r\n          .data(_layout, (d) -> d.key)\r\n        layers.enter().append('g')\r\n          .attr('class', \"layer\")\r\n          .append('path')\r\n          .attr('class','line')\r\n          .attr('transfrom', \"translate(#{offset})\")\r\n          .style('stroke', (d) -> d.color)\r\n          .style('fill', (d) -> d.color)\r\n          .style('opacity', 0)\r\n          .style('pointer-events', 'none')\r\n        layers.select('.line').transition().duration(options.duration)\r\n          .attr('d', (d) -> area(d.value))\r\n          .style('opacity', 0.7).style('pointer-events', 'none')\r\n        layers.exit().transition().duration(options.duration)\r\n          .style('opacity', 0)\r\n          .remove()\r\n\r\n      brush = (data, options,x,y,color) ->\r\n        layers = this.selectAll(\".layer\")\r\n        layers.select('.line')\r\n          .attr('d', (d) -> area(d.value))\r\n\r\n\r\n      #--- Configuration and registration ------------------------------------------------------------------------------\r\n\r\n      host.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        @layerScale('color')\r\n        @getKind('y').domainCalc('extent').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true).domainCalc('extent')\r\n        _tooltip = host.behavior().tooltip\r\n        _tooltip.markerScale(_scaleList.x)\r\n        _tooltip.on \"enter.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveData.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveMarker.#{_id}\", ttMoveMarker\r\n\r\n      host.lifeCycle().on 'draw', draw\r\n      host.lifeCycle().on 'brushDraw', brush\r\n\r\n      #--- Property Observers ------------------------------------------------------------------------------------------\r\n\r\n      attrs.$observe 'markers', (val) ->\r\n        if val is '' or val is 'true'\r\n          _showMarkers = true\r\n        else\r\n          _showMarkers = false\r\n\r\n  }","angular.module('wk.chart').directive 'bubble', ($log, utils) ->\r\n  bubbleCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n\r\n    link: (scope, element, attrs, layout) ->\r\n      #$log.debug 'bubbleChart linked'\r\n\r\n      _tooltip = undefined\r\n      _scaleList = {}\r\n      _id = 'bubble' + bubbleCntr++\r\n      _selected = undefined\r\n\r\n      #--- Tooltip Event Handlers --------------------------------------------------------------------------------------\r\n\r\n      ttEnter = (data) ->\r\n        for sName, scale of _scaleList\r\n          @layers.push({name: scale.axisLabel(), value: scale.formattedValue(data), color: if sName is 'color' then {'background-color':scale.map(data)} else undefined})\r\n\r\n      #--- Draw --------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color, size) ->\r\n\r\n        bubbles = @selectAll('.bubble').data(data, (d) -> color.value(d))\r\n        bubbles.enter().append('circle').attr('class','bubble selectable')\r\n          .style('opacity', 0)\r\n          .call(_tooltip.tooltip)\r\n          .call(_selected)\r\n        bubbles\r\n          .style('fill', (d) -> color.map(d))\r\n          .transition().duration(options.duration)\r\n            .attr({\r\n              r:  (d) -> size.map(d)\r\n              cx: (d) -> x.map(d)\r\n              cy: (d) -> y.map(d)\r\n            })\r\n            .style('opacity', 1)\r\n        bubbles.exit()\r\n          .transition().duration(options.duration)\r\n            .style('opacity',0).remove()\r\n\r\n      #--- Configuration and registration ------------------------------------------------------------------------------\r\n\r\n      layout.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color', 'size'])\r\n        @getKind('y').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true)\r\n        _tooltip = layout.behavior().tooltip\r\n        _selected = layout.behavior().selected\r\n        _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n      layout.lifeCycle().on 'draw', draw\r\n\r\n  }\r\n","angular.module('wk.chart').directive 'clusteredBar', ($log, utils)->\r\n\r\n  clusteredBarCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: '^layout'\r\n\r\n    link: (scope, element, attrs, host) ->\r\n\r\n      _id = \"clusteredBar#{clusteredBarCntr++}\"\r\n\r\n      layers = null\r\n      layerKeysOld = []\r\n      xKeysOld = []\r\n      clusterOld = []\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      getXByKey = (stack, key) ->\r\n        i = 0\r\n        while i < stack.length\r\n          if stack[i].key is key\r\n            return stack[i]\r\n          i++\r\n\r\n      getLayerByKey = (layout, xKey, layerKey) ->\r\n        s = getXByKey(layout, xKey)\r\n        if s\r\n          i = 0\r\n          while i < s.layers.length\r\n            if s.layers[i].layerKey is layerKey\r\n              return s.layers[i]\r\n            i++\r\n\r\n      getXPredX = (key, layout) ->\r\n        pred = getXByKey(layout, key)\r\n        if pred then pred.x + pred.width * 1.05 else 0\r\n\r\n      getXSuccX = (key, layout) ->\r\n        succ = getXByKey(layout, key)\r\n        if succ then succ.x - succ.width * 0.05 else layout[layout.length-1].x + layout[layout.length-1].width * 1.05\r\n\r\n      getLPredX = (xKey, layerKey, layout) ->\r\n        pred = getLayerByKey(layout, xKey, layerKey)\r\n        if pred then pred.x + pred.width * 1.05 else 0\r\n\r\n      getLSuccX = (xKey, layerKey, layout) ->\r\n        succ = getLayerByKey(layout, xKey, layerKey)\r\n        if succ then succ.x + succ.width * 0.05 else getXByKey(layout,xKey).width\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      _tooltip = undefined\r\n      _scaleList = {}\r\n\r\n      ttEnter = (data) ->\r\n        ttLayers = data.layers.map((l) -> {name:l.layerKey, value:_scaleList.y.formatValue(l.value), color: {'background-color': l.color}})\r\n        @headerName = _scaleList.x.axisLabel()\r\n        @headerValue = _scaleList.x.formatValue(data.key)\r\n        @layers = @layers.concat(ttLayers)\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color) ->\r\n        #$log.info \"rendering clustered-bar\"\r\n\r\n        # map data to the right format for rendering\r\n        layerKeysNew = y.layerKeys(data)\r\n        xKeysNew = x.value(data)\r\n\r\n        lDeletedSucc = utils.diff(layerKeysOld,layerKeysNew,1)\r\n        lAddedPred = utils.diff(layerKeysNew, layerKeysOld, -1)\r\n        xDeletedSucc = utils.diff(xKeysOld, xKeysNew,1)\r\n        xAddedPred = utils.diff(xKeysNew,xKeysOld,-1)\r\n\r\n        clusterX = d3.scale.ordinal().domain(y.layerKeys(data)).rangeBands([0,x.scale().rangeBand()], 0.1)\r\n\r\n        cluster = data.map((d) -> l = {\r\n          key:x.value(d), data:d, x:x.map(d), width: x.scale().rangeBand(x.value(d))\r\n          layers: layerKeysNew.map((k) -> {layerKey: k, color:color.scale()(k), key:x.value(d), value: d[k], x:clusterX(k), y: y.scale()(d[k]), height:y.scale()(0) - y.scale()(d[k]), width:clusterX.rangeBand(k)})}\r\n        )\r\n\r\n        if not layers\r\n          layers = @selectAll('.layer')\r\n\r\n        layers = layers.data(cluster, (d) -> d.key)\r\n\r\n        if clusterOld.length is 0\r\n          layers.enter().append('g')\r\n            .attr('class', 'layer').call(_tooltip.tooltip)\r\n            .attr('transform',(d) -> \"translate(#{d.x},0) scale(1,1)\")\r\n            .style({opacity: 0})\r\n\r\n        else\r\n          layers.enter().append('g')\r\n            .attr('class', 'layer').call(_tooltip.tooltip)\r\n            .attr('transform', (d)-> \"translate(#{getXPredX(xAddedPred[d.key], clusterOld)}, 0) scale(1,1)\")\r\n\r\n        layers\r\n          .transition().duration(options.duration)\r\n            .attr('transform',(d) -> \"translate(#{d.x},0) scale(1,1)\")\r\n            .style('opacity', 1)\r\n\r\n        layers.exit()\r\n          .transition().duration(options.duration)\r\n            .attr('transform',(d) ->\r\n              null\r\n              \"translate(#{getXSuccX(xDeletedSucc[d.key], cluster)},#{y.scale()(0)}) scale(0,0)\")\r\n            .remove()\r\n\r\n        enterScale = 0\r\n\r\n        bars = layers.selectAll('.bar')\r\n          .data(\r\n            (d) -> d.layers\r\n          , (d) -> d.layerKey + '|' + d.key\r\n          )\r\n\r\n        if clusterOld.length is 0\r\n          bars.enter().append('rect')\r\n          .attr('class', 'bar selectable')\r\n        else\r\n          bars.enter().append('rect')\r\n            .attr('class', 'bar selectable')\r\n            .attr('x', (d) -> getLPredX(d.key, lAddedPred[d.layerKey], clusterOld))\r\n            .attr('width',  0)\r\n            .attr('height', 0)\r\n            .attr('y', y.scale()(0))\r\n\r\n\r\n        bars.style('fill', (d) -> color.scale()(d.layerKey)).transition().duration(options.duration)\r\n          .attr('width', (d) -> d.width)\r\n          .attr('x', (d) -> d.x)\r\n          .attr('y', (d) -> Math.min(y.scale()(0), d.y))\r\n          .attr('height', (d) -> Math.abs(d.height))\r\n\r\n        bars.exit()\r\n          .transition().duration(options.duration)\r\n          .attr('width',0)\r\n          .attr('height', 0)\r\n          .attr('x', (d) ->\r\n            null\r\n            getLSuccX(d.key, lDeletedSucc[d.layerKey], cluster))\r\n          .attr('y', y.scale()(0))\r\n          .remove()\r\n\r\n        layerKeysOld = layerKeysNew\r\n        clusterOld = cluster\r\n        xKeysOld = xKeysNew\r\n\r\n      #-------------------------------------------------------------------------------------------------------------------\r\n\r\n      host.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        @getKind('y').domainCalc('max').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true)\r\n        @layerScale('color')\r\n        _tooltip = host.behavior().tooltip\r\n        _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n      host.lifeCycle().on 'draw', draw\r\n      host.lifeCycle().on 'brushDraw', draw\r\n  }","angular.module('wk.chart').directive 'gauge', ($log, utils) ->\r\n  return {\r\n    restrict: 'A'\r\n    require: '^layout'\r\n    controller: ($scope, $attrs) ->\r\n      me = {chartType: 'GaugeChart', id:utils.getId()}\r\n      $attrs.$set('chart-id', me.id)\r\n      return me\r\n    \r\n    link: (scope, element, attrs, layout) ->\r\n\r\n      initalShow = true\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color) ->\r\n        $log.info 'drawing Gauge Chart'\r\n\r\n        dat = [data]\r\n\r\n        yDomain = y.scale().domain()\r\n        colorDomain = angular.copy(color.scale().domain())\r\n        colorDomain.unshift(yDomain[0])\r\n        colorDomain.push(yDomain[1])\r\n        ranges = []\r\n        for i in [1..colorDomain.length-1]\r\n          ranges.push {from:+colorDomain[i-1],to:+colorDomain[i]}\r\n\r\n        #draw color scale\r\n\r\n        bar = @selectAll('.bar')\r\n        bar = bar.data(ranges, (d, i) -> i)\r\n        if initalShow\r\n          bar.enter().append('rect').attr('class', 'bar')\r\n            .attr('x', 0).attr('width', 50)\r\n            .style('opacity', 0)\r\n        else\r\n          bar.enter().append('rect').attr('class', 'bar')\r\n            .attr('x', 0).attr('width', 50)\r\n\r\n        bar.transition().duration(options.duration)\r\n          .attr('height',(d) -> y.scale()(0) - y.scale()(d.to - d.from))\r\n          .attr('y',(d) -> y.scale()(d.to))\r\n          .style('fill', (d) -> color.scale()(d.from))\r\n          .style('opacity', 1)\r\n\r\n        bar.exit().remove()\r\n\r\n        # draw value\r\n\r\n        addMarker = (s) ->\r\n          s.append('rect').attr('width', 55).attr('height', 4).style('fill', 'black')\r\n          s.append('circle').attr('r', 10).attr('cx', 65).attr('cy',2).style('stroke', 'black')\r\n\r\n        marker = @selectAll('.marker')\r\n        marker = marker.data(dat, (d) -> 'marker')\r\n        marker.enter().append('g').attr('class','marker').call(addMarker)\r\n\r\n        if initalShow\r\n          marker.attr('transform', (d) -> \"translate(0,#{y.scale()(d.value)})\").style('opacity', 0)\r\n\r\n        marker\r\n          .transition().duration(options.duration)\r\n            .attr('transform', (d) -> \"translate(0,#{y.scale()(d.value)})\")\r\n            .style('fill',(d) -> color.scale()(d.value)).style('opacity', 1)\r\n\r\n        initalShow = false\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n      layout.lifeCycle().on 'configure', ->\r\n        this.requiredScales(['y', 'color'])\r\n        @getKind('color').resetOnNewData(true)\r\n\r\n      layout.lifeCycle().on 'draw', draw\r\n\r\n  }","angular.module('wk.chart').directive 'geoMap', ($log, utils) ->\r\n  mapCntr = 0\r\n\r\n  parseList = (val) ->\r\n    if val\r\n      l = val.trim().replace(/^\\[|\\]$/g, '').split(',').map((d) -> d.replace(/^[\\\"|']|[\\\"|']$/g, ''))\r\n      l = l.map((d) -> if isNaN(d) then d else +d)\r\n      return if l.length is 1 then return l[0] else l\r\n\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n    scope: {\r\n      geojson: '='\r\n      projection: '='\r\n    }\r\n\r\n    link: (scope, element, attrs, layout) ->\r\n\r\n      _tooltip = undefined\r\n      _selected = undefined\r\n      _scaleList = {}\r\n      _id = 'geoMap' + mapCntr++\r\n      _dataMapping = d3.map()\r\n\r\n      _scale = 1\r\n      _rotate = [0,0]\r\n      _idProp = ''\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      ttEnter = (data) ->\r\n\r\n        val = _dataMapping.get(data.properties[_idProp[0]])\r\n        @layers.push({name:val.RS, value:val.DES})\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n      pathSel = []\r\n\r\n      _projection = d3.geo.orthographic()\r\n      _width = 0\r\n      _height = 0\r\n      _path = undefined\r\n      _zoom = d3.geo.zoom()\r\n        .projection(_projection)\r\n        #.scaleExtent([projection.scale() * .7, projection.scale() * 10])\r\n        .on \"zoom.redraw\", () ->\r\n          d3.event.sourceEvent.preventDefault();\r\n          pathSel.attr(\"d\", _path);\r\n\r\n      _geoJson = undefined\r\n\r\n      draw = (data, options, x, y, color) ->\r\n        _width = options.width\r\n        _height = options.height\r\n        if data and data[0].hasOwnProperty(_idProp[1])\r\n          for e in data\r\n            _dataMapping.set(e[_idProp[1]], e)\r\n\r\n        if _geoJson\r\n\r\n          _projection.translate([_width/2, _height/2])\r\n          pathSel = this.selectAll(\"path\").data(_geoJson.features, (d) -> d.properties[_idProp[0]])\r\n          pathSel\r\n            .enter().append(\"svg:path\")\r\n              .style('fill','lightgrey').style('stroke', 'darkgrey')\r\n              .call(_tooltip.tooltip)\r\n              .call(_selected)\r\n              .call(_zoom)\r\n\r\n          pathSel\r\n            .attr(\"d\", _path)\r\n            .style('fill', (d) ->\r\n              val = _dataMapping.get(d.properties[_idProp[0]])\r\n              color.map(val)\r\n          )\r\n\r\n          pathSel.exit().remove()\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      layout.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['color'])\r\n        _scaleList.color.resetOnNewData(true)\r\n\r\n      layout.lifeCycle().on 'draw', draw\r\n      _tooltip = layout.behavior().tooltip\r\n      _selected = layout.behavior().selected\r\n      _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n      # GeoMap specific properties -------------------------------------------------------------------------------------\r\n\r\n      scope.$watch 'projection', (val) ->\r\n        if val isnt undefined\r\n          $log.log 'setting Projection params', val\r\n          if d3.geo.hasOwnProperty(val.projection)\r\n            _projection = d3.geo[val.projection]()\r\n            _projection.center(val.center).scale(val.scale).rotate(val.rotate).clipAngle(val.clipAngle)\r\n            _idProp = val.idMap\r\n            if _projection.parallels\r\n              _projection.parallels(val.parallels)\r\n            _scale = _projection.scale()\r\n            _rotate = _projection.rotate()\r\n            _path = d3.geo.path().projection(_projection)\r\n            _zoom.projection(_projection)\r\n\r\n            layout.lifeCycle().update()\r\n\r\n      , true #deep watch\r\n\r\n      scope.$watch 'geojson', (val) ->\r\n        if val isnt undefined and val isnt ''\r\n          _geoJson = val\r\n          layout.lifeCycle().update()\r\n\r\n\r\n  }","angular.module('wk.chart').directive 'horizontalArea', ($log) ->\r\n  lineCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n    link: (scope, element, attrs, host) ->\r\n      #$log.log 'linking s-line'\r\n      layerKeys = []\r\n      _layout = []\r\n      _tooltip = undefined\r\n      _ttHighlight = undefined\r\n      _circles = undefined\r\n      _scaleList = {}\r\n      _showMarkers = false\r\n      offset = 0\r\n      _id = 'line' + lineCntr++\r\n\r\n      #--- Tooltip handlers --------------------------------------------------------------------------------------------\r\n\r\n      ttMoveData = (idx) ->\r\n        ttLayers = _layout.map((l) -> {name:l.key, value:_scaleList.x.formatValue(l.value[idx].x), color:{'background-color': l.color}})\r\n        @headerName = _scaleList.y.axisLabel()\r\n        @headerValue = _scaleList.y.formatValue(_layout[0].value[idx].y)\r\n        @layers = @layers.concat(ttLayers)\r\n\r\n      ttMoveMarker = (idx) ->\r\n        _circles = this.selectAll('circle').data(_layout, (d) -> d.key)\r\n        _circles.enter().append('circle')\r\n        .attr('r', if _showMarkers then 8 else 5)\r\n        .style('fill', (d)-> d.color)\r\n        .style('fill-opacity', 0.6)\r\n        .style('stroke', 'black')\r\n        .style('pointer-events','none')\r\n        _circles.attr('cx', (d) -> _scaleList.x.scale()(d.value[idx].x))\r\n        _circles.exit().remove()\r\n        this.attr('transform', \"translate(0, #{_scaleList.y.scale()(_layout[0].value[idx].y) + offset})\")\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color) ->\r\n        layerKeys = x.layerKeys(data)\r\n        _layout = layerKeys.map((key) => {key:key, color:color.scale()(key), value:data.map((d)-> {y:y.value(d),x:x.layerValue(d, key)})})\r\n\r\n        offset = if y.isOrdinal() then y.scale().rangeBand() / 2 else 0\r\n\r\n        if _tooltip then _tooltip.data(data)\r\n\r\n        area = d3.svg.area()    # tricky. Draw this like a vertical chart and then rotate and position it.\r\n        .x((d) ->   options.width - y.scale()(d.y))\r\n        .y0((d) ->  x.scale()(d.x))\r\n        .y1((d) ->  x.scale()(0))\r\n\r\n        layers = this.selectAll(\".layer\")\r\n          .data(_layout, (d) -> d.key)\r\n        layers.enter().append('g')\r\n          .attr('class', \"layer\")\r\n          .append('path')\r\n          .attr('class','line')\r\n          .style('stroke', (d) -> d.color)\r\n          .style('fill', (d) -> d.color)\r\n          .style('opacity', 0)\r\n          .style('pointer-events', 'none')\r\n        layers.select('.line')\r\n          .attr('transform', \"translate(0,#{options.width + offset})rotate(-90)\") #rotate and position chart\r\n          .transition().duration(options.duration)\r\n          .attr('d', (d) -> area(d.value))\r\n          .style('opacity', 0.7).style('pointer-events', 'none')\r\n        layers.exit().transition().duration(options.duration)\r\n          .style('opacity', 0)\r\n          .remove()\r\n\r\n      #--- Configuration and registration ------------------------------------------------------------------------------\r\n\r\n      host.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        @layerScale('color')\r\n        @getKind('y').domainCalc('extent').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true).domainCalc('extent')\r\n        _tooltip = host.behavior().tooltip\r\n        _tooltip.markerScale(_scaleList.y)\r\n        _tooltip.on \"enter.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveData.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveMarker.#{_id}\", ttMoveMarker\r\n\r\n      host.lifeCycle().on 'draw', draw\r\n\r\n      #--- Property Observers ------------------------------------------------------------------------------------------\r\n\r\n      attrs.$observe 'markers', (val) ->\r\n        if val is '' or val is 'true'\r\n          _showMarkers = true\r\n        else\r\n          _showMarkers = false\r\n\r\n\r\n\r\n  }","angular.module('wk.chart').directive 'horizontalClusteredBar', ($log, utils)->\r\n\r\n  hClusteredBarCntr = 0\r\n\r\n  return {\r\n    restrict: 'A'\r\n    require: '^layout'\r\n\r\n    link: (scope, element, attrs, host) ->\r\n\r\n      _id = \"hClusteredBar#{hClusteredBarCntr++}\"\r\n\r\n      layers = null\r\n      layerKeysOld = []\r\n      yKeysOld = []\r\n      clusterOld = []\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      getXByKey = (stack, key) ->\r\n        i = 0\r\n        while i < stack.length\r\n          if stack[i].key is key\r\n            return stack[i]\r\n          i++\r\n\r\n      getLayerByKey = (layout, yKey, layerKey) ->\r\n        s = getyByKey(layout, yKey)\r\n        if s\r\n          i = 0\r\n          while i < s.layers.length\r\n            if s.layers[i].layerKey is layerKey\r\n              return s.layers[i]\r\n            i++\r\n\r\n      getYPredY = (key, layout) ->\r\n        pred = getYByKey(layout, key)\r\n        if pred then pred.x + pred.width * 1.05 else 0\r\n\r\n      getYSuccY = (key, layout) ->\r\n        succ = getYByKey(layout, key)\r\n        if succ then succ.y - succ.width * 0.05 else layout[layout.length-1].y + layout[layout.length-1].width * 1.05\r\n\r\n      getLPredy = (yKey, layerKey, layout) ->\r\n        pred = getLayerByKey(layout, xKey, layerKey)\r\n        if pred then pred.x + pred.width * 1.05 else 0\r\n\r\n      getLSuccy = (yKey, layerKey, layout) ->\r\n        succ = getLayerByKey(layout, yKey, layerKey)\r\n        if succ then succ.y + succ.width * 0.05 else layout[layout.length-1].y + layout[layout.length-1].width * 1.05\r\n\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      _tooltip = undefined\r\n      _scaleList = {}\r\n\r\n      ttEnter = (data) ->\r\n        ttLayers = data.layers.map((l) -> {name:l.layerKey, value:_scaleList.y.formatValue(l.value), color: {'background-color': l.color}})\r\n        @headerName = _scaleList.y.axisLabel()\r\n        @headerValue = _scaleList.y.formatValue(data.key)\r\n        @layers = @layers.concat(ttLayers)\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color) ->\r\n        #$log.info \"rendering clustered-bar\"\r\n\r\n        # map data to the right format for rendering\r\n        layerKeysNew = x.layerKeys(data)\r\n        yKeysNew = y.value(data)\r\n\r\n        #yDeletedSucc = utils.diff(layerKeysOld,layerKeysNew,1)\r\n        #yAddedPred = utils.diff(layerKeysNew, layerKeysOld, -1)\r\n        #lDeletedSucc = utils.diff(yKeysOld, xKeysNew,1)\r\n        #lAddedPred = utils.diff(yKeysNew,xKeysOld,-1)\r\n\r\n        clusterY = d3.scale.ordinal().domain(x.layerKeys(data)).rangeBands([0,y.scale().rangeBand()], 0.1)\r\n\r\n        cluster = data.map((d) -> l = {\r\n          key:y.value(d), data:d, y:y.map(d), width: y.scale().rangeBand(y.value(d))\r\n          layers: layerKeysNew.map((k) -> {layerKey: k, color:color.scale()(k), key:y.value(d), value: d[k], y:clusterY(k), x: x.scale()(d[k]), width:x.scale()(0) - x.scale()(d[k]), height:clusterY.rangeBand(k)})}\r\n        )\r\n\r\n        if not layers\r\n          layers = @selectAll('.layer')\r\n\r\n        layers = layers.data(cluster, (d) -> d.key)\r\n\r\n        if clusterOld.length is 0\r\n          layers.enter().append('g')\r\n            .attr('class', 'layer').call(_tooltip.tooltip)\r\n            .attr('transform',(d) -> \"translate(0,#{d.y}) scale(1,1)\")\r\n            .style({opacity: 0})\r\n        ###\r\n        else\r\n          layers.enter().append('g')\r\n            .attr('class', 'layer').call(_tooltip.tooltip)\r\n            .attr('transform', (d)-> \"translate(0, #{getyPredy(yAddedPred[d.key], clusterOld)}) scale(1,1)\")\r\n        ###\r\n        layers\r\n          .transition().duration(options.duration)\r\n            .attr('transform',(d) -> \"translate(0, #{d.y}) scale(1,1)\")\r\n            .style('opacity', 1)\r\n        ###\r\n        layers.exit()\r\n          .transition().duration(options.duration)\r\n            .attr('transform',(d) -> \"translate(#{x.scale()(0)},#{getySuccy(yDeletedSucc[d.key], cluster)}) scale(0,0)\")\r\n            .remove()\r\n        ###\r\n        enterScale = 0\r\n\r\n        bars = layers.selectAll('.bar')\r\n          .data(\r\n            (d) -> d.layers\r\n          , (d) -> d.layerKey + '|' + d.key\r\n          )\r\n\r\n        if clusterOld.length is 0\r\n          bars.enter().append('rect')\r\n          .attr('class', 'bar')\r\n        ###\r\n        else\r\n          bars.enter().append('rect')\r\n            .attr('class', 'bar')\r\n            .attr('x', (d) -> getLPredX(d.key, lAddedPred[d.layerKey], clusterOld))\r\n            .attr('width',  0)\r\n            .attr('height', 0)\r\n            .attr('y', y.scale()(0))\r\n        ###\r\n\r\n        bars.style('fill', (d) -> color.scale()(d.layerKey)).transition().duration(options.duration)\r\n          .attr('width', (d) -> Math.abs(d.width))\r\n          .attr('x', (d) -> Math.min(x.scale()(0), d.x))\r\n          .attr('y', (d) -> d.y)\r\n          .attr('height', (d) -> d.height)\r\n        ###\r\n        bars.exit()\r\n          .transition().duration(options.duration)\r\n          .attr('width',0)\r\n          .attr('height', 0)\r\n          .attr('x', (d) -> getLSuccX(d.key, lDeletedSucc[d.layerKey], cluster))\r\n          .attr('y', y.scale()(0))\r\n          .remove()\r\n\r\n        layerKeysOld = layerKeysNew\r\n        clusterOld = cluster\r\n        xKeysOld = xKeysNew\r\n        ###\r\n      #-------------------------------------------------------------------------------------------------------------------\r\n\r\n      host.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        @getKind('y').domainCalc('max').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true)\r\n        @layerScale('color')\r\n        _tooltip = host.behavior().tooltip\r\n        _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n      host.lifeCycle().on 'draw', draw\r\n\r\n  }","angular.module('wk.chart').directive 'horizontalLine', ($log) ->\r\n  lineCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n    link: (scope, element, attrs, host) ->\r\n      #$log.log 'linking s-line'\r\n      layerKeys = []\r\n      _layout = []\r\n      _tooltip = undefined\r\n      _ttHighlight = undefined\r\n      _circles = undefined\r\n      _showMarkers = false\r\n      _scaleList = {}\r\n      offset = 0\r\n      _id = 'line' + lineCntr++\r\n\r\n      prepData = (x, y, color) ->\r\n        #layerKeys = y.layerKeys(@)\r\n        #_layout = layerKeys.map((key) => {key:key, color:color.scale()(key), value:@map((d)-> {x:x.value(d),y:y.layerValue(d, key)})})\r\n\r\n      ttEnter = (idx, axisX, cntnr) ->\r\n        cntnrSel = d3.select(cntnr)\r\n        cntnrWidth = cntnrSel.attr('width')\r\n        parent = d3.select(cntnr.parentElement)\r\n        _ttHighlight = parent.append('g')\r\n        _ttHighlight.append('line').attr({x1:0, x2:cntnrWidth}).style({'pointer-events':'none', stroke:'lightgrey', 'stroke-width':1})\r\n        _circles = _ttHighlight.selectAll('circle').data(_layout,(d) -> d.key)\r\n        _circles.enter().append('circle').attr('r', 5).attr('fill', (d)-> d.color).attr('fill-opacity', 0.6).attr('stroke', 'black').style('pointer-events','none')\r\n\r\n        _ttHighlight.attr('transform', \"translate(0,#{_scaleList.y.scale()(_layout[0].value[idx].y)+offset})\")\r\n\r\n      ttMoveData = (idx) ->\r\n        ttLayers = _layout.map((l) -> {name:l.key, value:_scaleList.x.formatValue(l.value[idx].x), color:{'background-color': l.color}})\r\n        @headerName = _scaleList.y.axisLabel()\r\n        @headerValue = _scaleList.y.formatValue(_layout[0].value[idx].y)\r\n        @layers = @layers.concat(ttLayers)\r\n\r\n      ttMoveMarker = (idx) ->\r\n        _circles = this.selectAll('circle').data(_layout, (d) -> d.key)\r\n        _circles.enter().append('circle')\r\n        .attr('r', if _showMarkers then 8 else 5)\r\n        .style('fill', (d)-> d.color)\r\n        .style('fill-opacity', 0.6)\r\n        .style('stroke', 'black')\r\n        .style('pointer-events','none')\r\n        _circles.attr('cx', (d) -> _scaleList.x.scale()(d.value[idx].x))\r\n        _circles.exit().remove()\r\n        this.attr('transform', \"translate(0,#{_scaleList.y.scale()(_layout[0].value[idx].y) + offset})\")\r\n\r\n\r\n      setTooltip = (tooltip, overlay) ->\r\n        _tooltip = tooltip\r\n        tooltip(overlay)\r\n        tooltip.isHorizontal(true)\r\n        tooltip.refreshOnMove(true)\r\n        tooltip.on \"move.#{_id}\", ttMove\r\n        tooltip.on \"enter.#{_id}\", ttEnter\r\n        tooltip.on \"leave.#{_id}\", ttLeave\r\n\r\n\r\n      draw = (data, options, x, y, color) ->\r\n        layerKeys = x.layerKeys(data)\r\n        _layout = layerKeys.map((key) => {key:key, color:color.scale()(key), value:data.map((d)-> {y:y.value(d),x:x.layerValue(d, key)})})\r\n\r\n        offset = if y.isOrdinal() then y.scale().rangeBand() / 2 else 0\r\n\r\n        if _tooltip then _tooltip.data(data)\r\n\r\n        line = d3.svg.line()\r\n          .x((d) -> x.scale()(d.x))\r\n          .y((d) -> y.scale()(d.y))\r\n\r\n        layers = this.selectAll(\".layer\")\r\n          .data(_layout, (d) -> d.key)\r\n        layers.enter().append('g')\r\n          .attr('class', \"layer\")\r\n          .append('path')\r\n          .attr('class','line')\r\n          .style('stroke', (d) -> d.color)\r\n          .style('opacity', 0)\r\n          .style('pointer-events', 'none')\r\n        layers.select('.line')\r\n          .attr('transform', \"translate(0,#{offset})\")\r\n          .transition().duration(options.duration)\r\n            .attr('d', (d) -> line(d.value))\r\n            .style('opacity', 1).style('pointer-events', 'none')\r\n        layers.exit().transition().duration(options.duration)\r\n          .style('opacity', 0)\r\n          .remove()\r\n\r\n      #--- Configuration and registration ------------------------------------------------------------------------------\r\n\r\n      host.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        @layerScale('color')\r\n        @getKind('y').domainCalc('extent').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true).domainCalc('extent')\r\n        _tooltip = host.behavior().tooltip\r\n        _tooltip.markerScale(_scaleList.y)\r\n        _tooltip.on \"enter.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveData.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveMarker.#{_id}\", ttMoveMarker\r\n\r\n      host.lifeCycle().on 'draw', draw\r\n\r\n      #--- Property Observers ------------------------------------------------------------------------------------------\r\n\r\n      attrs.$observe 'markers', (val) ->\r\n        if val is '' or val is 'true'\r\n          _showMarkers = true\r\n        else\r\n          _showMarkers = false\r\n\r\n\r\n  }","angular.module('wk.chart').directive 'line', ($log, behavior, utils, timing) ->\r\n  lineCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n    link: (scope, element, attrs, host) ->\r\n      #$log.log 'linking s-line'\r\n      _layerKeys = []\r\n      _layout = []\r\n      _initialOpacity = 1\r\n\r\n      _tooltip = undefined\r\n      _ttHighlight = undefined\r\n      _circles = undefined\r\n      _showMarkers = false\r\n      _scaleList = {}\r\n      offset = 0\r\n      _id = 'line' + lineCntr++\r\n      line = undefined\r\n      markers = undefined\r\n\r\n\r\n      #--- Tooltip Event Handlers --------------------------------------------------------------------------------------\r\n\r\n      ttMoveData = (idx) ->\r\n        ttLayers = _layout.map((l) -> {name:l.key, value:_scaleList.y.formatValue(l.value[idx].y), color:{'background-color': l.color}})\r\n        @headerName = _scaleList.x.axisLabel()\r\n        @headerValue = _scaleList.x.formatValue(_layout[0].value[idx].x)\r\n        @layers = @layers.concat(ttLayers)\r\n\r\n      ttMoveMarker = (idx) ->\r\n        _circles = this.selectAll(\".marker-#{_id}\").data(_layout, (d) -> d.key)\r\n        _circles.enter().append('circle').attr('class',\"marker-#{_id}\")\r\n          .attr('r', if _showMarkers then 8 else 5)\r\n          .style('fill', (d)-> d.color)\r\n          .style('fill-opacity', 0.6)\r\n          .style('stroke', 'black')\r\n          .style('pointer-events','none')\r\n        _circles.attr('cy', (d) -> _scaleList.y.scale()(d.value[idx].y))\r\n        _circles.exit().remove()\r\n        this.attr('transform', \"translate(#{_scaleList.x.scale()(_layout[0].value[idx].x) + offset})\")\r\n\r\n      #--- Draw --------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color) ->\r\n\r\n        if not options.skip\r\n          _layerKeys = y.layerKeys(data)\r\n          _layout = _layerKeys.map((key) ->\r\n            {\r\n              key:key,\r\n              color:color.scale()(key),\r\n              value: data.map((d) ->\r\n                {\r\n                  x: x.value(d),\r\n                  y: y.layerValue(d, key),\r\n                  color: color.scale()(key),\r\n                  key: key\r\n                })\r\n            }\r\n          )\r\n\r\n        offset = if x.isOrdinal() then x.scale().rangeBand() / 2 else 0\r\n\r\n        if _tooltip then _tooltip.data(data)\r\n\r\n        markers = (layer, duration) ->\r\n          if _showMarkers\r\n            m = layer.selectAll('.marker').data(\r\n                (l) -> l.value\r\n              , (d) -> d.x\r\n            )\r\n            m.enter().append('circle').attr('class','marker selectable')\r\n              .attr('r', 5)\r\n              .style('fill', (d) -> d.color)\r\n              .style('pointer-events','none')\r\n              .style('opacity', _initialOpacity)\r\n            m.transition().duration(duration)\r\n              .attr('cy', (d) -> y.scale()(d.y))\r\n              .attr('cx', (d) -> x.scale()(d.x) + offset)\r\n              .style('opacity', 1)\r\n            m.exit().transition().duration(duration).style('opacity', 0).remove()\r\n\r\n        line = d3.svg.line()\r\n          .x((d) -> x.scale()(d.x))\r\n          .y((d) -> y.scale()(d.y))\r\n\r\n        layers = this.selectAll(\".layer\")\r\n          .data(_layout, (d) -> d.key)\r\n        enter = layers.enter().append('g').attr('class', \"layer\")\r\n        enter.append('path')\r\n          .attr('class','line')\r\n          .style('stroke', (d) -> d.color)\r\n          .style('opacity', _initialOpacity)\r\n          .style('pointer-events', 'none')\r\n        layers.select('.line').attr('transform', \"translate(#{offset})\").transition().duration(options.duration)\r\n          .attr('d', (d) -> line(d.value))\r\n          .style('opacity', 1).style('pointer-events', 'none')\r\n\r\n        layers.exit().transition().duration(options.duration)\r\n          .style('opacity', 0)\r\n          .remove()\r\n\r\n        layers.call(markers, options.duration)\r\n\r\n        _initialOpacity = 0\r\n\r\n      brush = (data, options, x, y, color) ->\r\n        layers = this.selectAll(\".layer\")\r\n        layers.select('.line')\r\n          .attr('d', (d) -> line(d.value))\r\n        layers.call(markers, 0)\r\n\r\n      #--- Configuration and registration ------------------------------------------------------------------------------\r\n\r\n      host.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        @layerScale('color')\r\n        @getKind('y').domainCalc('extent').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true).domainCalc('extent')\r\n        _tooltip = host.behavior().tooltip\r\n        _tooltip.markerScale(_scaleList.x)\r\n        _tooltip.on \"enter.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveData.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveMarker.#{_id}\", ttMoveMarker\r\n\r\n      host.lifeCycle().on 'draw', draw\r\n      host.lifeCycle().on 'brushDraw', brush\r\n\r\n      #--- Property Observers ------------------------------------------------------------------------------------------\r\n\r\n      attrs.$observe 'markers', (val) ->\r\n        if val is '' or val is 'true'\r\n          _showMarkers = true\r\n        else\r\n          _showMarkers = false\r\n  }","angular.module('wk.chart').directive 'pie', ($log, utils) ->\r\n  pieCntr = 0\r\n\r\n  return {\r\n  restrict: 'EA'\r\n  require: '^layout'\r\n  link: (scope, element, attrs, layout) ->\r\n\r\n    # set chart specific defaults\r\n\r\n    _id = \"pie#{pieCntr++}\"\r\n\r\n    arcs = null\r\n    oldKeys = []\r\n    _scaleList = []\r\n    _selected = undefined\r\n    _tooltip = undefined\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    ttEnter = (data) ->\r\n      @headerName = _scaleList.color.axisLabel()\r\n      @headerValue = _scaleList.size.axisLabel()\r\n      @layers.push({name: _scaleList.color.formattedValue(data.data), value: _scaleList.size.formattedValue(data.data), color:{'background-color': _scaleList.color.map(data.data)}})\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    initialShow = true\r\n\r\n    init = (s) ->\r\n      if initialShow\r\n        s.style('opacity', 0)\r\n\r\n    draw = (data, options, x, y, color, size) ->\r\n      #$log.debug 'drawing pie chart v2'\r\n\r\n      if not arcs\r\n        arcs = @selectAll('.arc')\r\n\r\n      r = Math.min(options.width, options.height) / 2 - 10 #for glow shadow\r\n\r\n      arc = d3.svg.arc()\r\n        .outerRadius(r)\r\n        .innerRadius(0)\r\n\r\n      pie = d3.layout.pie()\r\n        .sort(null)\r\n        .value(size.value)\r\n\r\n      arcTween = (a) ->\r\n        i = d3.interpolate(this._current, a)\r\n        this._current = i(0)\r\n        return (t) ->\r\n          arc(i(t))\r\n\r\n      oldPie = arcs.data()\r\n      newPie = pie(data)\r\n\r\n      getNeighbour = (d, i, from) ->\r\n        # find neighbour in the data\r\n        domain = color.scale.domain()\r\n        domIdx = domain.indexOf(key(d))\r\n        a = findArc(domain, domIdx, from)\r\n        #$log.info a\r\n        return a or d\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      findArcByKey = (key, pie) ->\r\n        for a in pie\r\n          if color.value(a.data) is key\r\n            return a\r\n\r\n      getPred = (key, d) ->\r\n        pred = findArcByKey(key, oldPie)\r\n        if pred then {startAngle:pred.endAngle, endAngle:pred.endAngle} else if oldPie.length >0 then {startAngle:0, endAngle:0} else d\r\n\r\n      getSucc = (key,d) ->\r\n        succ = findArcByKey(key, newPie)\r\n        if succ\r\n          d.startAngle = succ.startAngle\r\n          d.endAngle = succ.startAngle\r\n        else\r\n          d.startAngle = Math.PI * 2\r\n          d.endAngle = Math.PI * 2\r\n        return d\r\n\r\n      newKeys = color.value(data)\r\n\r\n      deletedSucc = utils.diff(oldKeys, newKeys, 1)\r\n      addedPred = utils.diff(newKeys, oldKeys, -1)\r\n\r\n      #$log.info 'Pie: deleted, added', deletedSucc, addedPred\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      arcs = arcs\r\n        .data(newPie,(d) -> color.value(d.data))\r\n\r\n      arcs.enter().append('path')\r\n        .each((d) -> this._current = getPred(addedPred[color.value(d.data)], d))\r\n        .attr('class','arc selectable')\r\n        .style('fill', (d) ->  color.map(d.data))\r\n        .call(init)\r\n        .call(_tooltip.tooltip)\r\n        .call(_selected)\r\n\r\n      arcs\r\n        .attr('transform', \"translate(#{options.width / 2},#{options.height / 2})\")\r\n        .transition().duration(options.duration)\r\n          .style('opacity', 1)\r\n          .attrTween('d',arcTween)\r\n\r\n      arcs.exit().datum((d) -> getSucc(deletedSucc[color.value(d.data)],d))\r\n        .transition().duration(options.duration)\r\n        .attrTween('d',arcTween)\r\n      .remove()\r\n\r\n      oldKeys = newKeys\r\n      initialShow = false\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    layout.lifeCycle().on 'configure', ->\r\n      _scaleList = this.getScales(['size', 'color'])\r\n      _tooltip = layout.behavior().tooltip\r\n      _selected = layout.behavior().selected\r\n      _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n    layout.lifeCycle().on 'draw', draw\r\n  }","angular.module('wk.chart').directive 'scatter', ($log, utils) ->\r\n  scatterCnt = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: '^layout'\r\n    link: (scope, element, attrs, layout) ->\r\n\r\n      _tooltip = undefined\r\n      _selected = undefined\r\n      _id = 'scatter' + scatterCnt++\r\n      _scaleList = []\r\n\r\n      ttEnter = (data) ->\r\n        for sName, scale of _scaleList\r\n          @layers.push({\r\n            name: scale.axisLabel(),\r\n            value: scale.formattedValue(data),\r\n            color: if sName is 'color' then {'background-color':scale.map(data)} else undefined,\r\n            path: if sName is 'shape' then d3.svg.symbol().type(scale.map(data)).size(80)() else undefined\r\n            class: if sName is 'shape' then 'tt-svg-shape' else ''\r\n          })\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      initialShow = true\r\n\r\n\r\n\r\n      draw = (data, options, x, y, color, size, shape) ->\r\n        #$log.debug 'drawing scatter chart'\r\n        init = (s) ->\r\n          if initialShow\r\n            s.style('fill', color.map)\r\n            .attr('transform', (d)-> \"translate(#{x.map(d)},#{y.map(d)})\").style('opacity', 1)\r\n          initialShow = false\r\n\r\n        points = @selectAll('.points')\r\n          .data(data)\r\n        points.enter()\r\n          .append('path').attr('class', 'points selectable')\r\n          .attr('transform', (d)-> \"translate(#{x.map(d)},#{y.map(d)})\")\r\n          .call(init)\r\n          .call(_tooltip.tooltip)\r\n          .call(_selected)\r\n        points\r\n          .transition().duration(options.duration)\r\n          .attr('d', d3.svg.symbol().type((d) -> shape.map(d)).size((d) -> size.map(d) * size.map(d)))\r\n          .style('fill', color.map)\r\n          .attr('transform', (d)-> \"translate(#{x.map(d)},#{y.map(d)})\").style('opacity', 1)\r\n\r\n        points.exit().remove()\r\n\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      layout.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color', 'size', 'shape'])\r\n        @getKind('y').domainCalc('extent').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true).domainCalc('extent')\r\n        _tooltip = layout.behavior().tooltip\r\n        _selected = layout.behavior().selected\r\n        _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n      layout.lifeCycle().on 'draw', draw\r\n  }\r\n","angular.module('wk.chart').directive 'simpleBar', ($log, utils)->\r\n  sBarCntr = 0\r\n  return {\r\n  restrict: 'A'\r\n  require: '^layout'\r\n\r\n  link: (scope, element, attrs, host) ->\r\n\r\n    _id = \"simpleBar#{sBarCntr++}\"\r\n\r\n    bars = null\r\n    oldLayout = []\r\n    oldKeys = []\r\n    _scaleList = {}\r\n    _selected = undefined\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    getXByKey = (key, layout) ->\r\n      for l in layout\r\n        if l.key is key\r\n          return l\r\n\r\n    getPredX = (key, layout) ->\r\n      pred = getXByKey(key, layout)\r\n      if pred then pred.x + pred.width * 1.05 else 0\r\n\r\n    getSuccX = (key, layout) ->\r\n      succ = getXByKey(key, layout)\r\n      if succ then succ.x - succ.width * 0.05 else layout[layout.length - 1].x + layout[layout.length - 1].width * 1.05\r\n\r\n\r\n    #--- Tooltip Event Handlers --------------------------------------------------------------------------------------\r\n\r\n    _tooltip = undefined\r\n\r\n    ttEnter = (data) ->\r\n      @headerName = _scaleList.x.axisLabel()\r\n      @headerValue = _scaleList.y.axisLabel()\r\n      @layers.push({name: _scaleList.color.formattedValue(data.data), value: _scaleList.y.formattedValue(data.data), color:{'background-color': _scaleList.color.map(data.data)}})\r\n\r\n    #--- Draw --------------------------------------------------------------------------------------------------------\r\n\r\n    draw = (data, options, x, y, color) ->\r\n\r\n      if not bars\r\n        bars = @selectAll('.bars')\r\n      #$log.log \"rendering stacked-bar\"\r\n\r\n      layout = data.map((d) -> {data:d, key:x.value(d), value:y.value(d), x:x.map(d), y:y.map(d), color:color.map(d), width:x.scale().rangeBand(x.value(d))})\r\n      newKeys = layout.map((d) -> d.key)\r\n\r\n      deletedSucc = utils.diff(oldKeys, newKeys, 1)\r\n      addedPred = utils.diff(newKeys, oldKeys, -1)\r\n\r\n      bars = bars.data(layout, (d) -> d.key)\r\n\r\n      if oldLayout.length is 0\r\n        bars.enter().append('rect')\r\n          .attr('class', 'bar selectable')\r\n          .style('opacity', 0)\r\n          .call(_tooltip.tooltip)\r\n          .call(_selected)\r\n      else\r\n        bars.enter().append('rect')\r\n          .attr('class', 'bar selectable')\r\n          .attr('x', (d) -> getPredX(addedPred[d.key], oldLayout))\r\n          .attr('width', 0)\r\n          .call(_tooltip.tooltip)\r\n          .call(_selected)\r\n\r\n      bars.style('fill', (d) -> d.color).transition().duration(options.duration)\r\n        .attr('y', (d) -> Math.min(y.scale()(0), d.y))\r\n        .attr('width', (d) -> d.width)\r\n        .attr('height', (d) -> Math.abs(y.scale()(0) - d.y))\r\n        .attr('x', (d) -> d.x)\r\n        .style('opacity', 1)\r\n\r\n      bars.exit()\r\n        .transition().duration(options.duration)\r\n        .attr('x', (d) -> getSuccX(deletedSucc[d.key], layout))\r\n        .attr('width', 0)\r\n        .remove()\r\n\r\n      oldLayout = layout\r\n      oldKeys = newKeys\r\n\r\n    #--- Configuration and registration ------------------------------------------------------------------------------\r\n\r\n    host.lifeCycle().on 'configure', ->\r\n      _scaleList = @getScales(['x', 'y', 'color'])\r\n      @getKind('y').domainCalc('total').resetOnNewData(true)\r\n      @getKind('x').resetOnNewData(true)\r\n      _tooltip = host.behavior().tooltip\r\n      _selected = host.behavior().selected\r\n      _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n    host.lifeCycle().on 'draw', draw\r\n\r\n  }","angular.module('wk.chart').directive 'spider', ($log, utils) ->\r\n  spiderCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n\r\n    link: (scope, element, attrs, layout) ->\r\n      #$log.debug 'bubbleChart linked'\r\n\r\n      _tooltip = undefined\r\n      _scaleList = {}\r\n      _id = 'spider' + spiderCntr++\r\n      axis = d3.svg.axis()\r\n      _data = undefined\r\n\r\n      #--- Tooltip Event Handlers --------------------------------------------------------------------------------------\r\n\r\n      ttEnter = (data) ->\r\n        @layers = _data.map((d) ->  {name:_scaleList.x.value(d), value:_scaleList.y.formatValue(d[data]), color: {'background-color':_scaleList.color.scale()(data)}})\r\n\r\n      #--- Draw --------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color) ->\r\n        _data = data\r\n        $log.log data\r\n        # compute center of area\r\n        centerX = options.width/2\r\n        centerY = options.height/2\r\n        radius = d3.min([centerX, centerY]) * 0.8\r\n        textOffs = 20\r\n        nbrAxis = data.length\r\n        arc = Math.PI * 2 / nbrAxis\r\n        degr = 360 / nbrAxis\r\n\r\n        axisG = this.select('.axis')\r\n        if axisG.empty()\r\n          axisG = this.append('g').attr('class', 'axis')\r\n\r\n        ticks = y.scale().ticks(y.ticks())\r\n        y.scale().range([radius,0]) # tricks the way axis are drawn. Not pretty, but works :-)\r\n        axis.scale(y.scale()).orient('right').tickValues(ticks).tickFormat(y.tickFormat())\r\n        axisG.call(axis).attr('transform', \"translate(#{centerX},#{centerY-radius})\")\r\n        y.scale().range([0,radius])\r\n\r\n        lines = this.selectAll('.axisLine').data(data,(d) -> d.axis)\r\n        lines.enter()\r\n          .append('line').attr('class', 'axisLine')\r\n          .style('stroke', 'darkgrey')\r\n\r\n        lines\r\n          .attr({x1:0, y1:0, x2:0, y2:radius})\r\n          .attr('transform',(d,i) -> \"translate(#{centerX}, #{centerY})rotate(#{degr * i})\")\r\n\r\n        lines.exit().remove()\r\n\r\n        #draw tick lines\r\n        tickLine = d3.svg.line().x((d) -> d.x).y((d)->d.y)\r\n        tickPath = this.selectAll('.tickPath').data(ticks)\r\n        tickPath.enter().append('path').attr('class', 'tickPath')\r\n          .style('fill', 'none').style('stroke', 'lightgrey')\r\n\r\n        tickPath\r\n          .attr('d',(d) ->\r\n            p = data.map((a, i) -> {x:Math.sin(arc*i) * y.scale()(d),y:Math.cos(arc*i) * y.scale()(d)})\r\n            tickLine(p) + 'Z')\r\n          .attr('transform', \"translate(#{centerX}, #{centerY})\")\r\n\r\n        tickPath.exit().remove()\r\n\r\n        axisLabels = this.selectAll('.axisText').data(data,(d) -> x.value(d))\r\n        axisLabels.enter().append('text')\r\n          .attr('class', 'axisText')\r\n          .style('fill', 'black')\r\n          .attr('dy', '0.8em')\r\n          .attr('text-anchor', 'middle')\r\n        axisLabels\r\n          .attr({\r\n              x: (d, i) -> centerX + Math.sin(arc * i) * (radius + textOffs)\r\n              y: (d, i) -> centerY + Math.cos(arc * i) * (radius + textOffs)\r\n            })\r\n          .text((d) -> x.value(d))\r\n\r\n        # draw data lines\r\n\r\n        dataPath = d3.svg.line().x((d) -> d.x).y((d) -> d.y)\r\n\r\n        dataLine = this.selectAll('.dataLine').data(y.layerKeys(data))\r\n        dataLine.enter().append('path').attr('class', 'dataLine')\r\n          .style({\r\n            stroke:(d) -> color.scale()(d)\r\n            fill:(d) -> color.scale()(d)\r\n            'fill-opacity': 0.2\r\n            'stroke-width': 2\r\n          })\r\n          .call(_tooltip.tooltip)\r\n        dataLine.attr('d', (d) ->\r\n            p = data.map((a, i) -> {x:Math.sin(arc*i) * y.scale()(a[d]),y:Math.cos(arc*i) * y.scale()(a[d])})\r\n            dataPath(p) + 'Z'\r\n          )\r\n          .attr('transform', \"translate(#{centerX}, #{centerY})\")\r\n\r\n\r\n      #--- Configuration and registration --------------------------------------------------------------------------------\r\n\r\n      layout.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        _scaleList.y.domainCalc('max')\r\n        _scaleList.x.resetOnNewData(true)\r\n        #@layerScale('color')\r\n        _tooltip = layout.behavior().tooltip\r\n        _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n      layout.lifeCycle().on 'draw', draw\r\n\r\n  }","angular.module('wk.chart').directive 'stackedArea', ($log, utils) ->\r\n  stackedAreaCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n    link: (scope, element, attrs, host) ->\r\n\r\n      stack = d3.layout.stack()\r\n      offset = 'zero'\r\n      layers = null\r\n      _showMarkers = false\r\n      layerKeys = []\r\n      layerData = []\r\n      layoutNew = []\r\n      layoutOld = []\r\n      layerKeysOld = []\r\n      area = undefined\r\n      deletedSucc = {}\r\n      addedPred = {}\r\n      _tooltip = undefined\r\n      _ttHighlight = undefined\r\n      _circles = undefined\r\n      _scaleList = {}\r\n      scaleY = undefined\r\n      offs = 0\r\n      _id = 'area' + stackedAreaCntr++\r\n\r\n      #--- Tooltip Event Handlers --------------------------------------------------------------------------------------\r\n\r\n      ttMoveData = (idx) ->\r\n        ttLayers = layerData.map((l) -> {name:l.key, value:_scaleList.y.formatValue(l.layer[idx].yy), color: {'background-color': l.color}})\r\n        @headerName = _scaleList.x.axisLabel()\r\n        @headerValue = _scaleList.x.formatValue(layerData[0].layer[idx].x)\r\n        @layers = @layers.concat(ttLayers)\r\n\r\n      ttMoveMarker = (idx) ->\r\n        _circles = this.selectAll(\".marker-#{_id}\").data(layerData, (d) -> d.key)\r\n        _circles.enter().append('circle').attr('class',\"marker-#{_id}\")\r\n          .attr('r', if _showMarkers then 8 else 5)\r\n          .style('fill', (d)-> d.color)\r\n          .style('fill-opacity', 0.6)\r\n          .style('stroke', 'black')\r\n          .style('pointer-events','none')\r\n        _circles.attr('cy', (d) -> scaleY(d.layer[idx].y + d.layer[idx].y0))\r\n        _circles.exit().remove()\r\n\r\n        this.attr('transform', \"translate(#{_scaleList.x.scale()(layerData[0].layer[idx].x)+offs})\")\r\n\r\n      #-------------------------------------------------------------------------------------------------------------------\r\n\r\n      getLayerByKey = (key, layout) ->\r\n        for l in layout\r\n          if l.key is key\r\n            return l\r\n\r\n      layout = stack.values((d)->d.layer).y((d) -> d.yy)\r\n\r\n\r\n      #-------------------------------------------------------------------------------------------------------------------\r\n      ###\r\n      prepData = (x,y,color) ->\r\n\r\n        layoutOld = layoutNew.map((d) -> {key: d.key, path: area(d.layer.map((p) -> {x: p.x, y: 0, y0: p.y + p.y0}))})\r\n        layerKeysOld = layerKeys\r\n\r\n        layerKeys = y.layerKeys(@)\r\n        layerData = layerKeys.map((k) => {key: k, color:color.scale()(k), layer: @map((d) -> {x: x.value(d), yy: +y.layerValue(d,k), y0: 0})}) # yy: need to avoid overwriting by layout calc -> see stack y accessor\r\n        #layoutNew = layout(layerData)\r\n\r\n        deletedSucc = utils.diff(layerKeysOld, layerKeys, 1)\r\n        addedPred = utils.diff(layerKeys, layerKeysOld, -1)\r\n      ###\r\n      #--- Draw --------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color) ->\r\n        #$log.log \"rendering Area Chart\"\r\n\r\n\r\n        layerKeys = y.layerKeys(data)\r\n        deletedSucc = utils.diff(layerKeysOld, layerKeys, 1)\r\n        addedPred = utils.diff(layerKeys, layerKeysOld, -1)\r\n\r\n        layerData = layerKeys.map((k) => {key: k, color:color.scale()(k), layer: data.map((d) -> {x: x.value(d), yy: +y.layerValue(d,k), y0: 0})}) # yy: need to avoid overwriting by layout calc -> see stack y accessor\r\n        layoutNew = layout(layerData)\r\n\r\n        offs = if x.isOrdinal() then x.scale().rangeBand() / 2 else 0\r\n\r\n        if _tooltip then _tooltip.data(data)\r\n\r\n        if not layers\r\n          layers = this.selectAll('.layer')\r\n\r\n        if offset is 'expand'\r\n          scaleY = y.scale().copy()\r\n          scaleY.domain([0, 1])\r\n        else scaleY = y.scale()\r\n\r\n        area = d3.svg.area()\r\n          .x((d) ->  x.scale()(d.x))\r\n          .y0((d) ->  scaleY(d.y0 + d.y))\r\n          .y1((d) ->  scaleY(d.y0))\r\n\r\n        layers = layers\r\n          .data(layoutNew, (d) -> d.key)\r\n\r\n        if layoutOld.length is 0\r\n          layers.enter()\r\n            .append('path').attr('class', 'area')\r\n            .style('fill', (d, i) -> color.scale()(d.key)).style('opacity', 0)\r\n            .style('pointer-events', 'none')\r\n            .style('opacity', 0.7)\r\n        else\r\n          layers.enter()\r\n            .append('path').attr('class', 'area')\r\n            .attr('d', (d) -> if addedPred[d.key] then getLayerByKey(addedPred[d.key], layoutOld).path else area(d.layer.map((p) ->  {x: p.x, y: 0, y0: 0})))\r\n            .style('fill', (d, i) -> color.scale()(d.key))\r\n            .style('pointer-events', 'none')\r\n            .style('opacity', 0.7)\r\n\r\n        layers\r\n          .attr('transform', \"translate(#{offs})\")\r\n          .transition().duration(options.duration)\r\n            .attr('d', (d) -> area(d.layer))\r\n\r\n\r\n        layers.exit().transition().duration(options.duration)\r\n          .attr('d', (d) ->\r\n            succ = deletedSucc[d.key]\r\n            if succ then area(getLayerByKey(succ, layoutNew).layer.map((p) -> {x: p.x, y: 0, y0: p.y0})) else area(layoutNew[layoutNew.length - 1].layer.map((p) -> {x: p.x, y: 0, y0: p.y0 + p.y}))\r\n          )\r\n          .remove()\r\n\r\n        layoutOld = layoutNew.map((d) -> {key: d.key, path: area(d.layer.map((p) -> {x: p.x, y: 0, y0: p.y + p.y0}))})\r\n        layerKeysOld = layerKeys\r\n\r\n      #--- Configuration and registration ------------------------------------------------------------------------------\r\n\r\n      host.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        @layerScale('color')\r\n        @getKind('y').domainCalc('total').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true).domainCalc('extent')\r\n        _tooltip = host.behavior().tooltip\r\n        _tooltip.markerScale(_scaleList.x)\r\n        _tooltip.on \"enter.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveData.#{_id}\", ttMoveData\r\n        _tooltip.on \"moveMarker.#{_id}\", ttMoveMarker\r\n\r\n      host.lifeCycle().on 'draw', draw\r\n\r\n      #--- Property Observers ------------------------------------------------------------------------------------------\r\n\r\n      attrs.$observe 'stackedArea', (val) ->\r\n        if val in ['zero', 'silhouette', 'expand', 'wiggle']\r\n          offset = val\r\n        stack.offset(offset)\r\n        host.lifeCycle().redraw()\r\n\r\n      attrs.$observe 'markers', (val) ->\r\n        if val is '' or val is 'true'\r\n          _showMarkers = true\r\n        else\r\n          _showMarkers = false\r\n  }","angular.module('wk.chart').directive 'stackedBar', ($log, utils) ->\r\n\r\n  stackedBarCntr = 0\r\n  return {\r\n    restrict: 'A'\r\n    require: 'layout'\r\n    link: (scope, element, attrs, host) ->\r\n\r\n      #$log.log 'linking Stacked bar'\r\n\r\n      _id = \"stackedBar#{stackedBarCntr++}\"\r\n\r\n      layers = null\r\n\r\n      stack = []\r\n      oldKeys = []\r\n      oldXKeys = []\r\n      oldStack = []\r\n      _tooltip = ()->\r\n      _scaleList = {}\r\n      _selected = undefined\r\n\r\n      ttEnter = (data) ->\r\n        ttLayers = data.layers.map((l) -> {name:l.layerKey, value:_scaleList.y.formatValue(l.value), color: {'background-color': l.color}})\r\n        @headerName = _scaleList.x.axisLabel()\r\n        @headerValue = _scaleList.x.formatValue(data.key)\r\n        @layers = @layers.concat(ttLayers)\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      getXByKey = (stack, key) ->\r\n        i = 0\r\n        while i < stack.length\r\n          if stack[i].key is key\r\n            return stack[i]\r\n          i++\r\n\r\n      getLayerByKey = (stack, xKey, layerKey) ->\r\n        s = getXByKey(stack, xKey)\r\n        if s\r\n          i = 0\r\n          while i < s.layers.length\r\n            if s.layers[i].layerKey is layerKey\r\n              return s.layers[i]\r\n            i++\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n      draw = (data, options, x, y, color, size, shape) ->\r\n        if not layers\r\n          layers = @selectAll(\".layer\")\r\n        #$log.debug \"drawing stacked-bar\"\r\n\r\n\r\n        layerKeys = y.layerKeys(data)\r\n        xKeys = x.value(data)\r\n\r\n        lDeletedSucc = utils.diff(oldKeys,layerKeys,1)\r\n        lAddedPred = utils.diff(layerKeys, oldKeys, -1)\r\n        xDeletedSucc = utils.diff(oldXKeys, xKeys,1)\r\n        xAddedPred = utils.diff(xKeys,oldXKeys,-1)\r\n\r\n        stack = []\r\n        for d in data\r\n          y0 = 0\r\n          l = {key:x.value(d), layers:[], data:d, x:x.map(d), width:x.scale().rangeBand()}\r\n          if l.x isnt undefined\r\n            l.layers = layerKeys.map((k) ->\r\n              layer = {layerKey:k, key:l.key, value:d[k], height:  y.scale()(0) - y.scale()(+d[k]), width: x.scale().rangeBand(), y: y.scale()(+y0 + +d[k]), color: color.scale()(k)}\r\n              y0 += +d[k]\r\n              return layer\r\n            )\r\n            stack.push(l)\r\n\r\n        layers = layers\r\n          .data(stack, (d)-> d.key)\r\n\r\n        if oldStack.length is 0\r\n          layers.enter().append('g')\r\n            .attr('class', \"layer\").attr('transform',(d) -> \"translate(#{d.x},0) scale(1,1)\").style('opacity',0).call(_tooltip.tooltip)\r\n        else\r\n          layers.enter().append('g')\r\n            .attr('class', \"layer\").attr('transform',(d) ->\r\n              pred = getXByKey(oldStack, xAddedPred[d.key])\r\n              tx = if pred then pred.x + pred.width * 1.05 else 0\r\n              return \"translate(#{tx},0) scale(0,1)\"\r\n            ).call(_tooltip.tooltip)\r\n\r\n        layers\r\n          .transition().duration(options.duration)\r\n          .attr('transform',(d) ->\r\n            return \"translate(#{d.x},0) scale(1,1)\").style('opacity', 1)\r\n\r\n        layers.exit()\r\n          .transition().duration(options.duration)\r\n          .attr('transform',(d, i) ->\r\n            succ = getXByKey(stack, xDeletedSucc[d.key])\r\n            tx = if succ then succ.x - succ.width * 0.05 else if stack.length > 0 then stack[stack.length-1].x + stack[stack.length-1].width else 0\r\n            return \"translate(#{tx},#{y.scale()(0)}) scale(0,0)\")\r\n          .remove()\r\n\r\n        bars = layers.selectAll('.bar')\r\n          .data(\r\n            (d) -> d.layers\r\n          , (d) -> d.layerKey + '|' + d.key\r\n          )\r\n\r\n        if oldStack.length is 0\r\n          bars.enter().append('rect')\r\n            .attr('class', 'bar')\r\n            .call(_selected)\r\n        else\r\n          bars.enter().append('rect')\r\n            .attr('class', 'bar selectable')\r\n            .attr('y', (d) ->\r\n              pred = getLayerByKey(oldStack, d.key, lAddedPred[d.layerKey])\r\n              return if pred then pred.y else y.scale()(0)\r\n            )\r\n            .attr('height', 0).attr('width',(d) -> d.width)\r\n            .call(_selected)\r\n\r\n\r\n        bars.style('fill', (d) -> d.color)\r\n          .transition().duration(options.duration)\r\n            .attr('y', (d) -> d.y)\r\n            .attr('width', (d) -> d.width)\r\n            .attr('height', (d) -> d.height)\r\n\r\n        bars.exit()\r\n          .transition().duration(options.duration)\r\n          .attr('height',0)\r\n          .attr('y', (d) ->\r\n            succ = getLayerByKey(stack, d.key, lDeletedSucc[d.layerKey])\r\n            if succ\r\n              return succ.y + succ.height\r\n            else\r\n              x = getXByKey(stack, d.key)\r\n              return x.layers[x.layers.length - 1].y\r\n          )\r\n          .remove()\r\n\r\n        oldKeys = layerKeys\r\n        oldXKeys = xKeys\r\n        oldStack = stack\r\n\r\n      #-----------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n      host.lifeCycle().on 'configure', ->\r\n        _scaleList = @getScales(['x', 'y', 'color'])\r\n        @getKind('y').domainCalc('total').resetOnNewData(true)\r\n        @getKind('x').resetOnNewData(true)\r\n        @layerScale('color')\r\n        _tooltip = host.behavior().tooltip\r\n        _selected = host.behavior().selected\r\n        _tooltip.on \"enter.#{_id}\", ttEnter\r\n\r\n      host.lifeCycle().on 'draw', draw\r\n      host.lifeCycle().on 'brushDraw', draw\r\n  }","angular.module('wk.chart').factory 'behaviorBrush', ($log, $window, selectionSharing, timing) ->\r\n\r\n  behaviorBrush = () ->\r\n\r\n    me = () ->\r\n\r\n    _active = false\r\n    _overlay = undefined\r\n    _extent = undefined\r\n    _startPos = undefined\r\n    _evTargetData = undefined\r\n    _area = undefined\r\n    _chart = undefined\r\n    _data = undefined\r\n    _areaSelection = undefined\r\n    _areaBox = undefined\r\n    _backgroundBox = undefined\r\n    _container = undefined\r\n    _selectables =  undefined\r\n    _brushGroup = undefined\r\n    _x = undefined\r\n    _y = undefined\r\n    _tooltip = undefined\r\n    _brushXY = false\r\n    _brushX = false\r\n    _brushY = false\r\n    _boundsIdx = undefined\r\n    _boundsValues = undefined\r\n    _boundsDomain = undefined\r\n    _brushEvents = d3.dispatch('brushStart', 'brush', 'brushEnd')\r\n\r\n    left = top = right = bottom = startTop = startLeft = startRight = startBottom = undefined\r\n\r\n    #--- Brush utility functions ----------------------------------------------------------------------------------------\r\n\r\n    positionBrushElements = (left, right, top, bottom) ->\r\n      width = right - left\r\n      height = bottom - top\r\n\r\n      # position resize-handles into the right corners\r\n      if _brushXY\r\n        _overlay.selectAll('.n').attr('transform', \"translate(#{left},#{top})\").select('rect').attr('width', width)\r\n        _overlay.selectAll('.s').attr('transform', \"translate(#{left},#{bottom})\").select('rect').attr('width', width)\r\n        _overlay.selectAll('.w').attr('transform', \"translate(#{left},#{top})\").select('rect').attr('height', height)\r\n        _overlay.selectAll('.e').attr('transform', \"translate(#{right},#{top})\").select('rect').attr('height', height)\r\n        _overlay.selectAll('.ne').attr('transform', \"translate(#{right},#{top})\")\r\n        _overlay.selectAll('.nw').attr('transform', \"translate(#{left},#{top})\")\r\n        _overlay.selectAll('.se').attr('transform', \"translate(#{right},#{bottom})\")\r\n        _overlay.selectAll('.sw').attr('transform', \"translate(#{left},#{bottom})\")\r\n        _extent.attr('width', width).attr('height', height).attr('x', left).attr('y', top)\r\n      if _brushX\r\n        _overlay.selectAll('.w').attr('transform', \"translate(#{left},0)\").select('rect').attr('height', height)\r\n        _overlay.selectAll('.e').attr('transform', \"translate(#{right},0)\").select('rect').attr('height', height)\r\n        _overlay.selectAll('.e').select('rect').attr('height', _areaBox.height)\r\n        _overlay.selectAll('.w').select('rect').attr('height', _areaBox.height)\r\n        _extent.attr('width', width).attr('height', _areaBox.height).attr('x', left).attr('y', 0)\r\n      if _brushY\r\n        _overlay.selectAll('.n').attr('transform', \"translate(0,#{top})\").select('rect').attr('width', width)\r\n        _overlay.selectAll('.s').attr('transform', \"translate(0,#{bottom})\").select('rect').attr('width', width)\r\n        _overlay.selectAll('.n').select('rect').attr('width', _areaBox.width)\r\n        _overlay.selectAll('.s').select('rect').attr('width', _areaBox.width)\r\n        _extent.attr('width', _areaBox.width).attr('height', height).attr('x', 0).attr('y', top)\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    getSelectedObjects = () ->\r\n      er = _extent.node().getBoundingClientRect()\r\n      _selectables.each((d) ->\r\n          cr = this.getBoundingClientRect()\r\n          xHit = er.left < cr.right - cr.width / 3 and cr.left + cr.width / 3 < er.right\r\n          yHit = er.top < cr.bottom - cr.height / 3 and cr.top + cr.height / 3 < er.bottom\r\n          d3.select(this).classed('selected', yHit and xHit)\r\n        )\r\n      return _container.selectAll('.selected').data()\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    setSelection = (left, right, top, bottom) ->\r\n      if _brushX\r\n        _boundsIdx = [me.x().invert(left), me.x().invert(right)]\r\n        if me.x().isOrdinal()\r\n          _boundsValues = _data.map((d) -> me.x().value(d)).slice(_boundsIdx[0], _boundsIdx[1] + 1)\r\n        else\r\n          _boundsValues = [me.x().value(_data[_boundsIdx[0]]), me.x().value(_data[_boundsIdx[1]])]\r\n        _boundsDomain = _data.slice(_boundsIdx[0], _boundsIdx[1] + 1)\r\n      if _brushY\r\n        _boundsIdx = [me.y().invert(bottom), me.y().invert(top)]\r\n        if me.y().isOrdinal()\r\n          _boundsValues = _data.map((d) -> me.y().value(d)).slice(_boundsIdx[0], _boundsIdx[1] + 1)\r\n        else\r\n          _boundsValues = [me.y().value(_data[_boundsIdx[0]]), me.y().value(_data[_boundsIdx[1]])]\r\n        _boundsDomain = _data.slice(_boundsIdx[0], _boundsIdx[1] + 1)\r\n      if _brushXY\r\n        _boundsIdx = []\r\n        _boundsValues = []\r\n        _boundsDomain = getSelectedObjects()\r\n\r\n    #--- BrushStart Event Handler --------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n    brushStart = () ->\r\n      #register a mouse handlers for the brush\r\n      d3.event.preventDefault()\r\n      _evTargetData = d3.select(d3.event.target).datum()\r\n      _areaBox = _area.getBBox()\r\n      _startPos = d3.mouse(_area)\r\n      startTop = top\r\n      startLeft = left\r\n      startRight = right\r\n      startBottom = bottom\r\n      d3.select(_area).style('pointer-events','none').selectAll(\".resize\").style(\"display\", null)\r\n      d3.select('body').style('cursor', d3.select(d3.event.target).style('cursor'))\r\n\r\n      d3.select($window).on('mousemove.brush', brushMove).on('mouseup.brush', brushEnd)\r\n\r\n      _tooltip.hide(true)\r\n      _boundsIdx = undefined\r\n      _selectables = _container.selectAll('.selectable')\r\n      _brushEvents.brushStart()\r\n      timing.clear()\r\n      timing.init()\r\n\r\n    #--- BrushEnd Event Handler ----------------------------------------------------------------------------------------\r\n\r\n    brushEnd = () ->\r\n      #de-register handlers\r\n\r\n      d3.select($window).on 'mousemove.brush', null\r\n      d3.select($window).on 'mouseup.brush', null\r\n      d3.select(_area).style('pointer-events','all').selectAll('.resize').style('display', null) # show the resize handlers\r\n      d3.select('body').style('cursor', null)\r\n      if bottom - top is 0 or right - left is 0\r\n        #brush is empty\r\n        d3.select(_area).selectAll('.resize').style('display', 'none')\r\n      _tooltip.hide(false)\r\n      _brushEvents.brushEnd(_boundsIdx)\r\n      timing.report()\r\n\r\n    #--- BrushMove Event Handler ---------------------------------------------------------------------------------------\r\n\r\n    brushMove = () ->\r\n      $log.info 'brushmove'\r\n      pos = d3.mouse(_area)\r\n      deltaX = pos[0] - _startPos[0]\r\n      deltaY = pos[1] - _startPos[1]\r\n\r\n      # this elaborate code is needed to deal with scenarios when mouse moves fast and the events do not hit x/y + delta\r\n      # does not hi the 0 point maye there is a more elegant way to write this, but for now it works :-)\r\n\r\n      leftMv = (delta) ->\r\n        pos = startLeft + delta\r\n        left = if pos >= 0 then (if pos < startRight then pos else startRight) else 0\r\n        right = if pos <= _areaBox.width then (if pos < startRight then startRight else pos) else _areaBox.width\r\n\r\n      rightMv = (delta) ->\r\n        pos = startRight + delta\r\n        left = if pos >= 0 then (if pos < startLeft then pos else startLeft) else 0\r\n        right = if pos <= _areaBox.width then (if pos < startLeft then startLeft else pos) else _areaBox.width\r\n\r\n      topMv = (delta) ->\r\n        pos = startTop + delta\r\n        top = if pos >= 0 then (if pos < startBottom then pos else startBottom) else 0\r\n        bottom = if pos <= _areaBox.height then (if pos > startBottom then pos else startBottom ) else _areaBox.height\r\n\r\n      bottomMv = (delta) ->\r\n        pos = startBottom + delta\r\n        top = if pos >= 0 then (if pos < startTop then pos else startTop) else 0\r\n        bottom = if pos <= _areaBox.height then (if pos > startTop then pos else startTop ) else _areaBox.height\r\n\r\n      horMv = (delta) ->\r\n        if startLeft + delta >= 0\r\n          if startRight + delta <= _areaBox.width\r\n            left = startLeft + delta\r\n            right = startRight + delta\r\n          else\r\n            right = _areaBox.width\r\n            left = _areaBox.width - (startRight - startLeft)\r\n        else\r\n          left = 0\r\n          right = startRight - startLeft\r\n\r\n      vertMv = (delta) ->\r\n        if startTop + delta >= 0\r\n          if startBottom + delta <= _areaBox.height\r\n            top = startTop + delta\r\n            bottom = startBottom + delta\r\n          else\r\n            bottom = _areaBox.height\r\n            top = _areaBox.height - (startBottom - startTop)\r\n        else\r\n          top = 0\r\n          bottom = startBottom - startTop\r\n\r\n      switch _evTargetData.name\r\n        when 'background'\r\n          if deltaX + _startPos[0] > 0\r\n            left = if deltaX < 0 then _startPos[0] + deltaX else _startPos[0]\r\n            if left + Math.abs(deltaX) < _areaBox.width\r\n              right = left + Math.abs(deltaX)\r\n            else\r\n              right = _areaBox.width\r\n          else\r\n            left = 0\r\n\r\n          if deltaY + _startPos[1] > 0\r\n            top = if deltaY < 0 then _startPos[1] + deltaY else _startPos[1]\r\n            if top + Math.abs(deltaY) < _areaBox.height\r\n              bottom = top + Math.abs(deltaY)\r\n            else\r\n              bottom = _areaBox.height\r\n          else\r\n            top = 0\r\n\r\n        when 'extent'\r\n          vertMv(deltaY); horMv(deltaX)\r\n        when 'n'\r\n          topMv(deltaY)\r\n        when 's'\r\n          bottomMv(deltaY)\r\n        when 'w'\r\n          leftMv(deltaX)\r\n        when 'e'\r\n          rightMv(deltaX)\r\n        when 'nw'\r\n          topMv(deltaY); leftMv(deltaX)\r\n        when 'ne'\r\n          topMv(deltaY); rightMv(deltaX)\r\n        when 'sw'\r\n          bottomMv(deltaY); leftMv(deltaX)\r\n        when 'se'\r\n          bottomMv(deltaY); rightMv(deltaX)\r\n\r\n      positionBrushElements(left, right, top, bottom)\r\n      setSelection(left, right, top, bottom)\r\n      _brushEvents.brush(_boundsIdx, _boundsValues, _boundsDomain)\r\n      selectionSharing.setSelection _boundsValues, _brushGroup\r\n\r\n    #--- Brush ---------------------------------------------------------------------------------------------------------\r\n\r\n    me.brush = (s) ->\r\n      if arguments.length is 0 then return _overlay\r\n      else\r\n        if not _active then return\r\n        _overlay = s\r\n        _brushXY = me.x() and me.y()\r\n        _brushX = me.x() and not me.y()\r\n        _brushY = me.y() and not me.x()\r\n        # create the handler elements and register the handlers\r\n        s.style({'pointer-events': 'all', cursor: 'crosshair'})\r\n        #s.append('rect').attr('class', 'background').style({visibility:'hidden'}).datum({name:'background', cursor:''})\r\n        _extent = s.append('rect').attr({class:'extent', x:0, y:0, width:0, height:0}).style('cursor','move').datum({name:'extent'})\r\n        # resize handles for the sides\r\n        if _brushY or _brushXY\r\n          s.append('g').attr('class', 'resize n').style({cursor:'ns-resize', display:'none'})\r\n            .append('rect').attr({x:0, y: -3, width:0, height:6}).datum({name:'n'})\r\n          s.append('g').attr('class', 'resize s').style({cursor:'ns-resize', display:'none'})\r\n            .append('rect').attr({x:0, y: -3, width:0, height:6}).datum({name:'s'})\r\n        if _brushX or _brushXY\r\n          s.append('g').attr('class', 'resize w').style({cursor:'ew-resize', display:'none'})\r\n            .append('rect').attr({y:0, x: -3, width:6, height:0}).datum({name:'w'})\r\n          s.append('g').attr('class', 'resize e').style({cursor:'ew-resize', display:'none'})\r\n            .append('rect').attr({y:0, x: -3, width:6, height:0}).datum({name:'e'})\r\n        # resize handles for the corners\r\n        if _brushXY\r\n          s.append('g').attr('class', 'resize nw').style({cursor:'nwse-resize', display:'none'})\r\n          .append('rect').attr({x: -3, y: -3, width:6, height:6}).datum({name:'nw'})\r\n          s.append('g').attr('class', 'resize ne').style({cursor:'nesw-resize', display:'none'})\r\n          .append('rect').attr({x: -3, y: -3, width:6, height:6}).datum({name:'ne'})\r\n          s.append('g').attr('class', 'resize sw').style({cursor:'nesw-resize', display:'none'})\r\n          .append('rect').attr({x: -3, y: -3, width:6, height:6}).datum({name:'sw'})\r\n          s.append('g').attr('class', 'resize se').style({cursor:'nwse-resize', display:'none'})\r\n          .append('rect').attr({x: -3, y: -3, width:6, height:6}).datum({name:'se'})\r\n        #register handler. Please note, brush wants the mouse down exclusively !!!\r\n        s.on 'mousedown.brush', brushStart\r\n        return me\r\n\r\n    #--- Extent resize handler -----------------------------------------------------------------------------------------\r\n\r\n    resizeExtent = () ->\r\n      if _areaBox\r\n        $log.info 'resizeHandler'\r\n        newBox = _area.getBBox()\r\n        horizontalRatio = _areaBox.width / newBox.width\r\n        verticalRatio = _areaBox.height / newBox.height\r\n        top = top / verticalRatio\r\n        startTop = startTop / verticalRatio\r\n        bottom = bottom / verticalRatio\r\n        startBottom = startBottom / verticalRatio\r\n        left = left / horizontalRatio\r\n        startLeft = startLeft / horizontalRatio\r\n        right = right / horizontalRatio\r\n        startRight = startRight / horizontalRatio\r\n        _startPos[0] = _startPos[0] / horizontalRatio\r\n        _startPos[1] = _startPos[1] / verticalRatio\r\n        _areaBox = newBox\r\n        positionBrushElements(left, right, top, bottom)\r\n\r\n    #--- Brush Properties --------------------------------------------------------------------------------------------\r\n\r\n    me.chart = (val) ->\r\n      if arguments.length is 0 then return _chart\r\n      else\r\n        _chart = val\r\n        _chart.lifeCycle().on 'resize.brush', resizeExtent\r\n        return me #to enable chaining\r\n\r\n    me.active = (val) ->\r\n      if arguments.length is 0 then return _active\r\n      else\r\n        _active = val\r\n        return me #to enable chaining\r\n\r\n    me.x = (val) ->\r\n      if arguments.length is 0 then return _x\r\n      else\r\n        _x = val\r\n        return me #to enable chaining\r\n\r\n    me.y = (val) ->\r\n      if arguments.length is 0 then return _y\r\n      else\r\n        _y = val\r\n        return me #to enable chaining\r\n\r\n    me.area = (val) ->\r\n      if arguments.length is 0 then return _areaSelection\r\n      else\r\n        if not _areaSelection\r\n          _areaSelection = val\r\n          _area = _areaSelection.node()\r\n          #_areaBox = _area.getBBox() need to get when calculating size to deal with resizing\r\n          me.brush(_areaSelection)\r\n\r\n        return me #to enable chaining\r\n\r\n    me.container = (val) ->\r\n      if arguments.length is 0 then return _container\r\n      else\r\n        _container = val\r\n        _selectables = _container.selectAll('.selectable')\r\n        return me #to enable chaining\r\n\r\n    me.data = (val) ->\r\n      if arguments.length is 0 then return _data\r\n      else\r\n        _data = val\r\n        return me #to enable chaining\r\n\r\n    me.brushGroup = (val) ->\r\n      if arguments.length is 0 then return _brushGroup\r\n      else\r\n        _brushGroup = val\r\n        selectionSharing.createGroup(_brushGroup)\r\n        return me #to enable chaining\r\n\r\n    me.tooltip = (val) ->\r\n      if arguments.length is 0 then return _tooltip\r\n      else\r\n        _tooltip = val\r\n        return me #to enable chaining\r\n\r\n    me.on = (name, callback) ->\r\n      _brushEvents.on name, callback\r\n\r\n    me.extent = () ->\r\n      return _boundsIdx\r\n\r\n    me.events = () ->\r\n      return _brushEvents\r\n\r\n    me.empty = () ->\r\n      return _boundsIdx is undefined\r\n\r\n    return me\r\n  return behaviorBrush","angular.module('wk.chart').factory 'behaviorSelect', ($log) ->\r\n  selectId = 0\r\n\r\n  select = () ->\r\n\r\n    _id = \"select#{selectId++}\"\r\n    _container = undefined\r\n    _active = false\r\n    _selectionEvents = d3.dispatch('selected')\r\n\r\n    clicked = () ->\r\n      if not _active then return\r\n      obj = d3.select(this)\r\n      if not _active then return\r\n      if obj.classed('selectable')\r\n        isSelected = obj.classed('selected')\r\n        obj.classed('selected', not isSelected)\r\n        allSelected = _container.selectAll('.selected').data().map((d) -> if d.data then d.data else d)\r\n        # ensure that only the original values are reported back\r\n\r\n        _selectionEvents.selected(allSelected)\r\n\r\n    me = (sel) ->\r\n      if arguments.length is 0 then return me\r\n      else\r\n        sel\r\n          # register selection events\r\n          .on 'click', clicked\r\n        return me\r\n\r\n    me.id = () ->\r\n      return _id\r\n\r\n    me.active = (val) ->\r\n      if arguments.length is 0 then return _active\r\n      else\r\n        _active = val\r\n        return me #to enable chaining\r\n\r\n    me.container = (val) ->\r\n      if arguments.length is 0 then return _container\r\n      else\r\n        _container = val\r\n        return me #to enable chaining\r\n\r\n    me.events = () ->\r\n      return _selectionEvents\r\n\r\n    me.on = (name, callback) ->\r\n      _selectionEvents.on name, callback\r\n      return me\r\n\r\n    return me\r\n\r\n  return select","angular.module('wk.chart').factory 'behaviorTooltip', ($log, $document, $rootScope, $compile, $templateCache, templateDir) ->\r\n\r\n  behaviorTooltip = () ->\r\n\r\n    _active = false\r\n    _hide = false\r\n    _showMarkerLine = undefined\r\n    _markerG = undefined\r\n    _markerLine = undefined\r\n    _areaSelection = undefined\r\n    _area= undefined\r\n    _container = undefined\r\n    _markerScale = undefined\r\n    _data = undefined\r\n    _tooltipDispatch = d3.dispatch('enter', 'moveData', 'moveMarker', 'leave')\r\n\r\n    _templ = $templateCache.get(templateDir + 'toolTip.jade')\r\n    _templScope = $rootScope.$new(true)\r\n    _compiledTempl = $compile(_templ)(_templScope)\r\n    body = $document.find('body')\r\n\r\n    bodyRect = body[0].getBoundingClientRect()\r\n\r\n    me = () ->\r\n\r\n    #--- helper Functions ----------------------------------------------------------------------------------------------\r\n\r\n    positionBox = () ->\r\n      rect = _compiledTempl[0].getBoundingClientRect()\r\n      #d3.select(_compiledTempl[0]).style('height',height).style('width', width)\r\n      clientX = if bodyRect.right - 20 > d3.event.clientX + rect.width + 10 then d3.event.clientX + 10 else d3.event.clientX - rect.width - 10\r\n      clientY = if bodyRect.bottom - 20 > d3.event.clientY + rect.height + 10 then d3.event.clientY + 10 else d3.event.clientY - rect.height - 10\r\n      _templScope.position = {\r\n        position: 'absolute'\r\n        left: clientX + 'px'\r\n        top: clientY + 'px'\r\n        'z-index': 1500\r\n        opacity: 1\r\n      }\r\n      _templScope.$apply()\r\n\r\n    positionInitial = () ->\r\n      _templScope.position = {\r\n        position: 'absolute'\r\n        left: 0 + 'px'\r\n        top: 0 + 'px'\r\n        'z-index': 1500\r\n        opacity: 0\r\n      }\r\n      _templScope.$apply()  # ensure tooltip gets rendered\r\n      #wayit until it is rendered and then reposition\r\n      _.throttle positionBox, 200\r\n\r\n    #--- TooltipStart Event Handler ------------------------------------------------------------------------------------\r\n\r\n    tooltipEnter = () ->\r\n      if not _active or _hide then return\r\n      # append data div\r\n      body.append(_compiledTempl)\r\n      _templScope.layers = []\r\n\r\n      # get tooltip data value\r\n\r\n      if _showMarkerLine\r\n        _pos = d3.mouse(this)\r\n        value = _markerScale.invert(if _markerScale.isHorizontal() then _pos[0] else _pos[1])\r\n      else\r\n        value = d3.select(this).datum()\r\n\r\n      _templScope.ttShow = true\r\n      _tooltipDispatch.enter.apply(_templScope, [value]) # call layout to fill in data\r\n      positionInitial()\r\n\r\n      # create a marker line if required\r\n      if _showMarkerLine\r\n        #_area = this\r\n        _areaBox = _areaSelection.select('.background').node().getBBox()\r\n        _pos = d3.mouse(_area)\r\n        _markerG = _container.append('g')  # need to append marker to chart area to ensure it is on top of the chart elements Fix 10\r\n          .attr('class', 'tooltipMarker')\r\n        _markerLine = _markerG.append('line')\r\n        if _markerScale.isHorizontal()\r\n          _markerLine.attr({class:'markerLine', x0:0, x1:0, y0:0,y1:_areaBox.height})\r\n        else\r\n          _markerLine.attr({class:'markerLine', x0:0, x1:_areaBox.width, y0:0,y1:0})\r\n\r\n        _markerLine.style({stroke: 'darkgrey', 'pointer-events': 'none'})\r\n\r\n        _tooltipDispatch.moveMarker.apply(_markerG, [value])\r\n\r\n    #--- TooltipMove  Event Handler ------------------------------------------------------------------------------------\r\n\r\n    tooltipMove = () ->\r\n      if not _active or _hide then return\r\n      _pos = d3.mouse(_area)\r\n      positionBox()\r\n      if _showMarkerLine\r\n        #_markerG.attr('transform', \"translate(#{_pos[0]})\")\r\n        dataIdx = _markerScale.invert(if _markerScale.isHorizontal() then _pos[0] else _pos[1])\r\n        _tooltipDispatch.moveMarker.apply(_markerG, [dataIdx])\r\n        _templScope.layers = []\r\n        _tooltipDispatch.moveData.apply(_templScope, [dataIdx])\r\n      _templScope.$apply()\r\n\r\n    #--- TooltipLeave Event Handler ------------------------------------------------------------------------------------\r\n\r\n    tooltipLeave = () ->\r\n      #$log.debug 'tooltipLeave', _area\r\n      if _markerG\r\n        _markerG.remove()\r\n      _markerG = undefined\r\n      _templScope.ttShow = false\r\n      _compiledTempl.remove()\r\n\r\n    #--- Interface to brush --------------------------------------------------------------------------------------------\r\n\r\n    me.hide = (val) ->\r\n      if arguments.length is 0 then return _hide\r\n      else\r\n        _hide = val\r\n        if _markerG\r\n          _markerG.style('visibility', if _hide then 'hidden' else 'visible')\r\n        _templScope.ttShow = not _hide\r\n        _templScope.$apply()\r\n        return me #to enable chaining\r\n\r\n\r\n    #-- Tooltip properties ---------------------------------------------------------------------------------------------\r\n\r\n    me.active = (val) ->\r\n      if arguments.length is 0 then return _active\r\n      else\r\n        _active = val\r\n        return me #to enable chaining\r\n\r\n    me.area = (val) ->\r\n      if arguments.length is 0 then return _areaSelection\r\n      else\r\n        _areaSelection = val\r\n        _area = _areaSelection.node()\r\n        if _showMarkerLine\r\n          me.tooltip(_areaSelection)\r\n        return me #to enable chaining\r\n\r\n    me.container = (val) ->\r\n      if arguments.length is 0 then return _container\r\n      else\r\n        _container = val\r\n        return me #to enable chaining\r\n\r\n    me.markerScale = (val) ->\r\n      if arguments.length is 0 then return _markerScale\r\n      else\r\n        if val\r\n          _showMarkerLine = true\r\n          _markerScale = val\r\n        else\r\n          _showMarkerLine = false\r\n        return me #to enable chaining\r\n\r\n    me.data = (val) ->\r\n      if arguments.length is 0 then return _data\r\n      else\r\n        _data = val\r\n        return me #to enable chaining\r\n\r\n    me.on = (name, callback) ->\r\n      _tooltipDispatch.on name, callback\r\n\r\n    #--- Tooltip -------------------------------------------------------------------------------------------------------\r\n\r\n    me.tooltip = (s) -> # register the tooltip events with the selection\r\n      if arguments.length is 0 then return me\r\n      else  # set tooltip for an objects selection\r\n        s.on 'mouseenter.tooltip', tooltipEnter\r\n          .on 'mousemove.tooltip', tooltipMove\r\n          .on 'mouseleave.tooltip', tooltipLeave\r\n\r\n    return me\r\n\r\n  return behaviorTooltip","angular.module('wk.chart').factory 'behavior', ($log, $window, behaviorTooltip, behaviorBrush, behaviorSelect) ->\r\n\r\n  behavior = () ->\r\n\r\n    _tooltip = behaviorTooltip()\r\n    _brush = behaviorBrush()\r\n    _selection = behaviorSelect()\r\n    _brush.tooltip(_tooltip)\r\n\r\n    area = (area) ->\r\n      _brush.area(area)\r\n      _tooltip.area(area)\r\n\r\n    container = (container) ->\r\n      _brush.container(container)\r\n      _selection.container(container)\r\n      _tooltip.container(container)\r\n\r\n    chart = (chart) ->\r\n      _brush.chart(chart)\r\n\r\n    return {tooltip:_tooltip, brush:_brush, selected:_selection, overlay:area, container:container, chart:chart}\r\n  return behavior","angular.module('wk.chart').factory 'chart', ($log, layeredData, scaleList, container, behavior, d3Animation) ->\r\n\r\n  chartCntr = 0\r\n\r\n  chart = () ->\r\n\r\n    _id = \"chart#{chartCntr++}\"\r\n\r\n    me = () ->\r\n\r\n    #--- Variable declarations and defaults ----------------------------------------------------------------------------\r\n\r\n    _layouts = []               # List of layouts for the chart\r\n    _container = undefined    # the charts drawing container object\r\n    _allScales = undefined    # Holds all scales of the chart, regardless of scale owner\r\n    _ownedScales = undefined  # holds the scles owned by chart, i.e. share scales\r\n    _data = undefined           # pointer to the last data set bound to chart\r\n    _showTooltip = false        # tooltip property\r\n    _behavior = behavior()\r\n    _animationDuration = d3Animation.duration\r\n\r\n    #--- LifeCycle Dispatcher ------------------------------------------------------------------------------------------\r\n\r\n    _lifeCycle = d3.dispatch('configure', 'resize', 'prepareData', 'scaleDomains', 'sizeContainer', 'drawAxis', 'drawChart', 'newData', 'update', 'updateAttrs' )\r\n    _brush = d3.dispatch('draw', 'change')\r\n\r\n    #--- Getter/Setter Functions ---------------------------------------------------------------------------------------\r\n\r\n    me.id = (id) ->\r\n      return _id\r\n\r\n    me.showTooltip = (trueFalse) ->\r\n      if arguments.length is 0 then return _showTooltip\r\n      else\r\n        _showTooltip = trueFalse\r\n        _behavior.tooltip.active(_showTooltip)\r\n        return me\r\n\r\n    me.addLayout = (layout) ->\r\n      if arguments.length is 0 then return _layouts\r\n      else\r\n        _layouts.push(layout)\r\n        return me\r\n\r\n    me.addScale = (scale, layout) ->\r\n      _allScales.add(scale)\r\n      if layout\r\n        layout.scales().add(scale)\r\n      else\r\n        _ownedScales.add(scale)\r\n      return me\r\n\r\n    me.animationDuration = (val) ->\r\n      if arguments.length is 0 then return _animationDuration\r\n      else\r\n        _animationDuration = val\r\n        return me #to enable chaining\r\n\r\n    #--- Getter Functions ----------------------------------------------------------------------------------------------\r\n\r\n    me.lifeCycle = (val) ->\r\n      return _lifeCycle\r\n\r\n    me.layouts = () ->\r\n      return _layouts\r\n\r\n    me.scales = () ->\r\n      return _ownedScales\r\n\r\n    me.allScales = () ->\r\n      return _allScales\r\n\r\n    me.hasScale = (scale) ->\r\n      return !!_allScales.has(scale)\r\n\r\n    me.container = () ->\r\n      return _container\r\n\r\n    me.brush = () ->\r\n      return _brush\r\n\r\n    me.getData = () ->\r\n      return _data\r\n\r\n    me.behavior = () ->\r\n      return _behavior\r\n\r\n    #--- Chart drawing life cycle --------------------------------------------------------------------------------------\r\n\r\n    me.execLifeCycleFull = (data, noAnimation) ->\r\n      if data\r\n        _data = data\r\n        _lifeCycle.prepareData(data, noAnimation)    # calls the registered layout types\r\n        _lifeCycle.scaleDomains(data, noAnimation)   # calls registered the scales\r\n        _lifeCycle.sizeContainer(data, noAnimation)  # calls container\r\n        _lifeCycle.drawAxis(noAnimation)              # calls container\r\n        _lifeCycle.drawChart(data, noAnimation)      # calls layout\r\n\r\n    me.resizeLifeCycle = (noAnimation) ->\r\n      if _data\r\n        _lifeCycle.sizeContainer(_data, noAnimation)  # calls container\r\n        _lifeCycle.drawAxis(noAnimation)              # calls container\r\n        _lifeCycle.drawChart(_data, noAnimation)\r\n\r\n    me.newDataLifeCycle = (data, noAnimation) ->\r\n      if data\r\n        _data = data\r\n        _lifeCycle.prepareData(data, noAnimation)    # calls the registered layout types\r\n        _lifeCycle.scaleDomains(data, noAnimation)\r\n        _lifeCycle.drawAxis(noAnimation)              # calls container\r\n        _lifeCycle.drawChart(data, noAnimation)\r\n\r\n    me.attributeChange = (noAnimation) ->\r\n      if _data\r\n        _lifeCycle.sizeContainer(_data, noAnimation)\r\n        _lifeCycle.drawAxis(noAnimation)              # calls container\r\n        _lifeCycle.drawChart(data, noAnimation)\r\n\r\n    me.brushExtentChanged = () ->\r\n      if _data\r\n        _lifeCycle.drawAxis(true)              # No Animation\r\n        _lifeCycle.drawChart(_data, true)\r\n\r\n    me.lifeCycle().on 'newData.chart', me.execLifeCycleFull\r\n    me.lifeCycle().on 'resize.chart', me.resizeLifeCycle\r\n    me.lifeCycle().on 'update.chart', (noAnimation) -> me.execLifeCycleFull(_data, noAnimation)\r\n    me.lifeCycle().on 'updateAttrs', me.attributeChange\r\n\r\n    #--- Initialization ------------------------------------------------------------------------------------------------\r\n\r\n    _behavior.chart(me)\r\n    _container = container().chart(me)   # the charts drawing container object\r\n    _allScales = scaleList()    # Holds all scales of the chart, regardless of scale owner\r\n    _ownedScales = scaleList()  # holds the scles owned by chart, i.e. share scales\r\n\r\n    return me\r\n\r\n  return chart","angular.module('wk.chart').factory 'container', ($log, $window, d3ChartMargins, scaleList, axisConfig, d3Animation, behavior) ->\r\n\r\n  containerCnt = 0\r\n\r\n  container = () ->\r\n\r\n    me = ()->\r\n\r\n    #--- Variable declarations and defaults ----------------------------------------------------------------------------\r\n\r\n    _containerId = 'cntnr' + containerCnt++\r\n    _chart = undefined\r\n    _element = undefined\r\n    _elementSelection = undefined\r\n    _layouts = []\r\n    _legends = []\r\n    _svg = undefined\r\n    _container = undefined\r\n    _spacedContainer = undefined\r\n    _chartArea = undefined\r\n    _margin = angular.copy(d3ChartMargins.default)\r\n    _innerWidth = 0\r\n    _innerHeight = 0\r\n    _data = undefined\r\n    _overlay = undefined\r\n    _behavior = undefined\r\n\r\n    #--- Utility Functions ---------------------------------------------------------------------------------------------\r\n\r\n    _genChartFrame = ()->\r\n      _svg = _elementSelection.append('div').attr('class', 'd3-chart')\r\n      .append('svg')\r\n      _svg.append('defs').append('clipPath').attr('id', \"clip-#{_containerId}\").append('rect')\r\n      _container= _svg.append('g').attr('class','d3-chart-container')\r\n      _overlay = _container.append('g').attr('class', 'overlay').style('pointer-events', 'all')\r\n      _overlay.append('rect').style('visibility', 'hidden').attr('class', 'background').datum({name:'background'})\r\n      _chartArea = _container.append('g').attr('class', 'chartArea')\r\n\r\n    _getAxis = (orient) ->\r\n      axis = _container.select(\".axis.#{orient}\")\r\n      if axis.empty()\r\n        axis = _container.append('g').attr('class',\"axis #{orient}\")\r\n      if orient is 'bottom'\r\n        axis.attr('transform', (d) -> \"translate(0, #{_innerHeight})\")\r\n      if orient is 'right'\r\n        axis.attr('transform', (d) -> \"translate(#{_innerWidth}, 0)\")\r\n      return axis\r\n\r\n    _removeAxis = (orient) ->\r\n      _container.select(\".axis.#{orient}\").remove()\r\n\r\n    _removeLabel = (orient) ->\r\n      _container.select(\".label.#{orient}\").remove()\r\n\r\n    _getLabel = (orient) ->\r\n      label = _container.select(\".label.#{orient}\")\r\n      if label.empty()\r\n        label = _container.append('g').attr('class',\"label #{orient}\")\r\n      switch orient\r\n        when 'top'\r\n          label.attr('transform', (d) -> \"translate(#{_innerWidth/2}, #{-_margin.top})\")\r\n        when 'bottom'\r\n          label.attr('transform', (d) -> \"translate(#{_innerWidth/2},#{_innerHeight+_margin.bottom})\")\r\n        when 'left'\r\n          label.attr('transform', (d) -> \"translate(#{-_margin.left},#{_innerHeight/2})rotate(-90)\")\r\n        when 'right'\r\n          label.attr('transform', (d) ->\"translate(#{_innerWidth+_margin.right},#{_innerHeight/2})rotate(90)\")\r\n      return label\r\n\r\n    #--- Getter/Setter Functions ---------------------------------------------------------------------------------------\r\n\r\n    me.id = () ->\r\n      return _containerId\r\n\r\n    me.chart = (chart) ->\r\n      if arguments.length is 0 then return _chart\r\n      else\r\n        _chart = chart\r\n        # register to lifecycle events\r\n        _chart.lifeCycle().on \"sizeContainer.#{me.id()}\", me.sizeContainer\r\n        _chart.lifeCycle().on \"drawAxis.#{me.id()}\", me.drawAxis\r\n        return me\r\n\r\n    me.element = (elem) ->\r\n      if arguments.length is 0 then return _element\r\n      else\r\n        _resizeHandler = () ->  me.chart().lifeCycle().resize(true) # no animation\r\n        _element = elem\r\n        _elementSelection = d3.select(_element)\r\n        if _elementSelection.empty()\r\n          $log.error \"Error: Element #{_element} does not exist\"\r\n        else\r\n          new ResizeSensor(_element.parentElement, _resizeHandler)\r\n          _genChartFrame()\r\n        return me\r\n\r\n    me.addLayout = (layout) ->\r\n      _layouts.push(layout)\r\n      return me\r\n\r\n    me.height = () ->\r\n      return _innerHeight\r\n\r\n    me.width = () ->\r\n      return _innerWidth\r\n\r\n    me.margins = () ->\r\n      return _margin\r\n\r\n    me.getChartArea = () ->\r\n      return _spacedContainer.select('.chartArea')\r\n\r\n    me.getOverlay = () ->\r\n      return _overlay\r\n\r\n    me.getContainer = () ->\r\n      return _spacedContainer\r\n\r\n    # Life Cycle Functions ---------------------------------------------------------------------------------------------\r\n    #--- Size Container  -----------------------------------------------------------------------------------------------\r\n\r\n    me.sizeContainer = () ->\r\n      #collect axis and label information about layouts registered with container\r\n      bounds = _elementSelection.node().getBoundingClientRect()\r\n      if bounds.width <= 0 then return # check if bounds have a meaningful value. Width is eventually 0 when called while browser layouts page after load. Will be called when layout is done, so just ignore the first call\r\n      _margin = angular.copy(d3ChartMargins.default)\r\n      for l in _layouts\r\n        for k, s of l.scales().allKinds()  #TODO: Not important -  find way to handle shared scales more efficiently\r\n          if s.showAxis()\r\n            axisPos = s.axisOrient()\r\n            _margin[axisPos] = d3ChartMargins.axis[axisPos]\r\n            if s.showLabel()\r\n              _margin[axisPos] += d3ChartMargins.label[axisPos]\r\n\r\n      _innerWidth = bounds.width - _margin.left - _margin.right\r\n      _innerHeight = bounds.height - _margin.top - _margin.bottom\r\n      _svg.select(\"#clip-#{_containerId} rect\").attr('width', _innerWidth).attr('height', _innerHeight)\r\n      _spacedContainer = _container.attr('transform', (d) -> \"translate(#{_margin.left}, #{_margin.top})\")\r\n      _spacedContainer.select('.chartArea').style('clip-path', \"url(#clip-#{_containerId})\")\r\n      _spacedContainer.select('.overlay').style('clip-path', \"url(#clip-#{_containerId})\")\r\n      _spacedContainer.select('.overlay>.background').attr('width', _innerWidth).attr('height', _innerHeight)\r\n      _chart.behavior().overlay(_overlay)\r\n      _chart.behavior().container(_spacedContainer)\r\n\r\n      return me\r\n\r\n    #--- Draw Axis -----------------------------------------------------------------------------------------------------\r\n\r\n    me.drawAxis = (notAnimated) ->\r\n      duration = if notAnimated then 0 else me.chart().animationDuration()\r\n      # set scales before drawing the axis\r\n      for l in _layouts\r\n        for k, s of l.scales().allKinds()\r\n          if s.isHorizontal()\r\n            s.range([0, _innerWidth])\r\n          if s.isVertical()\r\n            s.range([_innerHeight, 0])\r\n\r\n          if s.showAxis()\r\n            s.axis().scale(s.scale())\r\n            a = _getAxis(s.axisOrient())\r\n            if s.showGrid()\r\n              s.axis().tickSize(if s.isHorizontal() then -_innerHeight else -_innerWidth).tickPadding(6)\r\n            else\r\n              s.axis().tickSize(6)\r\n            s.axis().orient(s.axisOrient())\r\n            a.transition().duration(duration).call(s.axis())\r\n            a.selectAll('.tick').style('pointer-events', 'none')  # avoid fading of tooltip wne hovering over grid lines\r\n            if s.showLabel()\r\n              offs = axisConfig[s.kind()].labelOffset[s.axisOrient()]\r\n              lbl = _getLabel(s.axisOrient())\r\n              txt = lbl.selectAll('.label-text')\r\n              if txt.empty()\r\n                txt = lbl.append('text').attr('class','label-text').attr('dy', (d) -> offs)\r\n              txt.text(s.axisLabel()).attr('text-anchor','middle').style('font-size', axisConfig.labelFontSize)\r\n            else\r\n              _removeLabel(s.axisOrient())\r\n          if s.axisOrientOld() and s.axisOrientOld() isnt s.axisOrient()\r\n            _removeAxis(s.axisOrientOld())\r\n            _removeLabel(s.axisOrientOld())\r\n\r\n    #--- Brush Accelerator ---------------------------------------------------------------------------------------------\r\n\r\n    me.drawSingleAxis = (scale) ->\r\n      if scale.showAxis()\r\n        a = _spacedContainer.select(\".axis.#{scale.axis().orient()}\")\r\n        a.call(scale.axis())\r\n      return me\r\n\r\n    return me\r\n\r\n  return container","angular.module('wk.chart').factory 'layout', ($log, scale, scaleList, timing) ->\r\n\r\n  layoutCntr = 0\r\n\r\n  layout = () ->\r\n    _id = \"layout#{layoutCntr++}\"\r\n    _container = undefined\r\n    _data = undefined\r\n    _chart = undefined\r\n    _scaleList = scaleList()\r\n    _layoutLifeCycle = d3.dispatch('configure', 'draw', 'prepareData', 'brush', 'redraw', 'drawAxis', 'update', 'updateAttrs', 'brushDraw')\r\n\r\n    me = () ->\r\n\r\n    me.id = (id) ->\r\n      return _id\r\n\r\n    me.chart = (chart) ->\r\n      if arguments.length is 0 then return _chart\r\n      else\r\n        _chart = chart\r\n        _scaleList.parentScales(chart.scales())\r\n        _chart.lifeCycle().on \"configure.#{me.id()}\", () -> _layoutLifeCycle.configure.apply(me.scales()) #passthrough\r\n        _chart.lifeCycle().on \"drawChart.#{me.id()}\", me.draw # register for the drawing event\r\n        _chart.lifeCycle().on \"prepareData.#{me.id()}\", me.prepareData\r\n        return me\r\n\r\n    me.scales = () ->\r\n      return _scaleList\r\n\r\n    me.scaleProperties = () ->\r\n      return me.scales().getScaleProperties()\r\n\r\n    me.container = (obj) ->\r\n      if arguments.length is 0 then return _container\r\n      else\r\n        _container = obj\r\n        return me\r\n\r\n    me.behavior = () ->\r\n      me.chart().behavior()\r\n\r\n    me.prepareData = (data) ->\r\n      args = []\r\n      for kind in ['x','y', 'color']\r\n        args.push(_scaleList.getKind(kind))\r\n      _layoutLifeCycle.prepareData.apply(data, args)\r\n\r\n    me.lifeCycle = ()->\r\n      return _layoutLifeCycle\r\n\r\n\r\n    #--- DRYout from draw ----------------------------------------------------------------------------------------------\r\n\r\n    getDrawArea = () ->\r\n      container = _container.getChartArea()\r\n      drawArea = container.select(\".#{me.id()}\")\r\n      if drawArea.empty()\r\n        drawArea = container.append('g').attr('class', (d) -> me.id())\r\n      return drawArea\r\n\r\n    buildArgs = (data, notAnimated) ->\r\n      options = {\r\n        height:_container.height(),\r\n        width:_container.width(),\r\n        margins:_container.margins(),\r\n        duration: if notAnimated then 0 else me.chart().animationDuration()\r\n      }\r\n      args = [data, options]\r\n      for kind in ['x','y', 'color', 'size', 'shape']\r\n        args.push(_scaleList.getKind(kind))\r\n      return args\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    me.draw = (data, notAnimated) ->\r\n      _data = data\r\n\r\n      _layoutLifeCycle.draw.apply(getDrawArea(), buildArgs(data, notAnimated))\r\n\r\n      _layoutLifeCycle.on 'redraw', me.redraw\r\n      _layoutLifeCycle.on 'update', me.chart().lifeCycle().update\r\n      _layoutLifeCycle.on 'drawAxis', me.chart().lifeCycle().drawAxis\r\n      _layoutLifeCycle.on 'updateAttrs', me.chart().lifeCycle().updateAttrs\r\n\r\n      _layoutLifeCycle.on 'brush', (axis, notAnimated) ->\r\n        _container.drawSingleAxis(axis)\r\n        _layoutLifeCycle.brushDraw.apply(getDrawArea(), buildArgs(_data, notAnimated))\r\n\r\n    return me\r\n\r\n  return layout","angular.module('wk.chart').factory 'legend', ($log, $compile, $rootScope, $templateCache, templateDir) ->\r\n\r\n  legendCnt = 0\r\n\r\n  uniqueValues = (arr) ->\r\n    set = {}\r\n    for e in arr\r\n      set[e] = 0\r\n    return Object.keys(set)\r\n\r\n  legend = () ->\r\n\r\n    _id = \"legend-#{legendCnt++}\"\r\n    _position = 'top-right'\r\n    _scale = undefined\r\n    _templatePath = undefined\r\n    _legendScope = $rootScope.$new(true)\r\n    _template = undefined\r\n    _parsedTemplate = undefined\r\n    _containerDiv = undefined\r\n    _legendDiv = undefined\r\n    _title = undefined\r\n    _layout = undefined\r\n    _data = undefined\r\n    _options = undefined\r\n    _show = false\r\n    _showValues = false\r\n\r\n    me = {}\r\n\r\n    me.position = (pos) ->\r\n      if arguments.length is 0 then return _position\r\n      else\r\n        _position = pos\r\n        return me\r\n\r\n    me.show = (val) ->\r\n      if arguments.length is 0 then return _show\r\n      else\r\n        _show = val\r\n        return me #to enable chaining\r\n\r\n    me.showValues = (val) ->\r\n      if arguments.length is 0 then return _showValues\r\n      else\r\n        _showValues = val\r\n        return me #to enable chaining\r\n\r\n    me.div = (selection) ->\r\n      if arguments.length is 0 then return _legendDiv\r\n      else\r\n        _legendDiv = selection\r\n        return me\r\n\r\n    me.layout = (layout) ->\r\n      if arguments.length is 0 then return _layout\r\n      else\r\n        _layout = layout\r\n        return me\r\n\r\n    me.scale = (scale) ->\r\n      if arguments.length is 0 then return _scale\r\n      else\r\n        _scale = scale\r\n        return me\r\n\r\n    me.title = (title) ->\r\n      if arguments.length is 0 then return _title\r\n      else\r\n        _title = title\r\n        return me\r\n\r\n    me.template = (path) ->\r\n      if arguments.length is 0 then return _templatePath\r\n      else\r\n        _templatePath = path\r\n        _template = $templateCache.get(_templatePath)\r\n        _parsedTemplate = $compile(_template)(_legendScope)\r\n        return me\r\n\r\n    me.draw = (data, options) ->\r\n      _data = data\r\n      _options = options\r\n      #$log.info 'drawing Legend'\r\n      _containerDiv = _legendDiv or d3.select(me.scale().parent().container().element()).select('.d3-chart')\r\n      if me.show()\r\n        if _containerDiv.select('.d3ChartColorLegend').empty()\r\n          angular.element(_containerDiv.node()).append(_parsedTemplate)\r\n\r\n        if me.showValues()\r\n          layers = uniqueValues(_scale.value(data))\r\n        else\r\n          layers = _scale.layerKeys(data)\r\n\r\n        s = _scale.scale()\r\n        if me.layout()?.scales().layerScale()\r\n          s = me.layout().scales().layerScale().scale()\r\n        if _scale.kind() isnt 'shape'\r\n          _legendScope.legendRows = layers.map((d) -> {value:d, color:{'background-color':s(d)}})\r\n        else\r\n          _legendScope.legendRows = layers.map((d) -> {value:d, path:d3.svg.symbol().type(s(d)).size(80)()})\r\n          #$log.log _legendScope.legendRows\r\n        _legendScope.showLegend = true\r\n        _legendScope.position = {\r\n          position:'absolute'\r\n        }\r\n        if not _legendDiv\r\n          for p in _position.split('-')\r\n            _legendScope.position[p] = \"#{options.margins[p]}px\"\r\n        _legendScope.title = _title\r\n      else\r\n        _parsedTemplate.remove()\r\n      return me\r\n\r\n    me.register = (layout) ->\r\n      layout.lifeCycle().on \"draw.#{_id}\", me.draw\r\n      return me\r\n\r\n    me.template(templateDir + 'legend.jade')\r\n\r\n    me.redraw = () ->\r\n      if _data and _options\r\n        me.draw(_data, _options)\r\n      return me\r\n\r\n    return me\r\n\r\n  return legend","angular.module('wk.chart').factory 'scale', ($log, legend, formatDefaults) ->\r\n\r\n  scale = () ->\r\n    _id = ''\r\n    _scale = d3.scale.linear()\r\n    _scaleType = 'linear'\r\n    _isOrdinal = false\r\n    _domain = undefined\r\n    _domainCalc = undefined\r\n    _calculatedDomain = undefined\r\n    _resetOnNewData = false\r\n    _property = ''\r\n    _layerProp = ''\r\n    _layerExclude = []\r\n    _range = undefined\r\n    _rangePadding = 0.1\r\n    _rangeOuterPadding = 0\r\n    _inputFormatString = undefined\r\n    _inputFormatFn = (data) -> if isNaN(+data) or _.isDate(data) then data else +data\r\n\r\n    _showAxis = false\r\n    _axisOrient = undefined\r\n    _axisOrientOld = undefined\r\n    _axis = undefined\r\n    _ticks = undefined\r\n    _tickFormat = undefined\r\n    _showLabel = false\r\n    _axisLabel = undefined\r\n    _showGrid = false\r\n    _isHorizontal = false\r\n    _isVertical = false\r\n    _kind = undefined\r\n    _parent = undefined\r\n    _chart = undefined\r\n    _layout = undefined\r\n    _legend = legend()\r\n    _outputFormatString = undefined\r\n    _outputFormatFn = undefined\r\n\r\n    me = () ->\r\n\r\n    #---- utility functions ----------------------------------------------------------------------------------------\r\n\r\n    keys = (data) -> if _.isArray(data) then _.keys(data[0]) else _.keys(data)\r\n\r\n    layerTotal = (d, layerKeys) ->\r\n      layerKeys.reduce(\r\n        (prev, next) -> +prev + +me.layerValue(d,next)\r\n      , 0)\r\n\r\n    layerMax = (data, layerKeys) ->\r\n      d3.max(data, (d) -> d3.max(layerKeys, (k) -> me.layerValue(d,k)))\r\n\r\n    layerMin = (data, layerKeys) ->\r\n      d3.min(data, (d) -> d3.min(layerKeys, (k) -> me.layerValue(d,k)))\r\n\r\n    parsedValue = (v) ->\r\n      if _inputFormatFn.parse then _inputFormatFn.parse(v) else _inputFormatFn(v)\r\n\r\n    calcDomain = {\r\n      extent: (data) ->\r\n        layerKeys = me.layerKeys(data)\r\n        return [layerMin(data, layerKeys), layerMax(data, layerKeys)]\r\n      max: (data) ->\r\n        layerKeys = me.layerKeys(data)\r\n        return [0, layerMax(data, layerKeys)]\r\n      totalExtent: (data) ->\r\n        if data[0].hasOwnProperty('total')\r\n          return d3.extent(data.map((d) ->\r\n            d.total))\r\n        else\r\n          layerKeys = me.layerKeys(data)\r\n          return d3.extent(data.map((d) ->\r\n            layerTotal(d, layerKeys)))\r\n      total: (data) ->\r\n        if data[0].hasOwnProperty('total')\r\n          return [0, d3.max(data.map((d) ->\r\n            d.total))]\r\n        else\r\n          layerKeys = me.layerKeys(data)\r\n          return [0, d3.max(data.map((d) ->\r\n            layerTotal(d, layerKeys)))]\r\n      }\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    me.id = () ->\r\n      return _kind + '.' + _parent.id()\r\n\r\n    me.kind = (kind) ->\r\n      if arguments.length is 0 then return _kind\r\n      else\r\n        _kind = kind\r\n        return me\r\n\r\n    me.parent = (parent) ->\r\n      if arguments.length is 0 then return _parent\r\n      else\r\n        _parent = parent\r\n        return me\r\n\r\n    me.chart = (val) ->\r\n      if arguments.length is 0 then return _chart\r\n      else\r\n        _chart = val\r\n        return me #to enable chaining\r\n\r\n    me.layout = (val) ->\r\n      if arguments.length is 0 then return _layout\r\n      else\r\n        _layout = val\r\n        return me #to enable chaining\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    me.scale = () ->\r\n      return _scale\r\n\r\n    me.legend = () ->\r\n      return _legend\r\n\r\n    me.isOrdinal = () ->\r\n      _isOrdinal\r\n\r\n    me.isHorizontal = (trueFalse) ->\r\n      if arguments.length is 0 then return _isHorizontal\r\n      else\r\n        _isHorizontal = trueFalse\r\n        if trueFalse\r\n          _isVertical = false\r\n        return me\r\n\r\n    me.isVertical = (trueFalse) ->\r\n      if arguments.length is 0 then return _isVertical\r\n      else\r\n        _isVertical = trueFalse\r\n        if trueFalse\r\n          _isHorizontal = false\r\n        return me\r\n\r\n    #-- ScaleType ------------------------------------------------------------------------------------------------------\r\n\r\n    me.scaleType = (type) ->\r\n      if arguments.length is 0 then return _scaleType\r\n      else\r\n        if d3.scale.hasOwnProperty(type) # support the full list of d3 scale types\r\n          _scale = d3.scale[type]()\r\n          _scaleType = type\r\n          me.format(formatDefaults.number)\r\n        else if type is 'time' # time scale is in d3.time object, not in d3.scale.\r\n          _scale = d3.time.scale()\r\n          _scaleType = 'time'\r\n          if _inputFormatString\r\n            me.dataFormat(_inputFormatString)\r\n          me.format(formatDefaults.date)\r\n        else\r\n          $log.error 'Error: illegal scale type:', type\r\n\r\n        _isOrdinal = _scaleType in ['ordinal', 'category10', 'category20', 'category20b', 'category20c']\r\n        if _range\r\n          me.range(_range)\r\n\r\n        if _showAxis\r\n          _axis.scale(_scale)\r\n        return me\r\n\r\n    #--- Domain functions ----------------------------------------------------------------------------------------------\r\n\r\n    me.domain = (dom) ->\r\n      if arguments.length is 0 then return _domain\r\n      else\r\n        _domain = dom\r\n        return me\r\n\r\n    me.domainCalc = (rule) ->\r\n      if arguments.length is 0\r\n        return if _isOrdinal then undefined else _domainCalc\r\n      else\r\n        if rule in ['min', 'max', 'extent', 'total', 'totalExtent']\r\n          _domainCalc = rule\r\n        else\r\n          $log.error 'illegal domain calculation rule:', rule, \" expected 'min', 'max', 'extent', 'total' or 'totalExtent'\"\r\n        return me\r\n\r\n    me.getDomain = (data) ->\r\n      if arguments.length is 0 then return _scale.domain()\r\n      else\r\n        if not _domain and me.domainCalc()\r\n            return _calculatedDomain\r\n        else\r\n          if _domain\r\n            return _domain\r\n          else\r\n            return me.value(data)\r\n\r\n    me.resetOnNewData = (trueFalse) ->\r\n      if arguments.length is 0 then return _resetOnNewData\r\n      else\r\n        _resetOnNewData = trueFalse\r\n        return me\r\n\r\n    #--- Range Functions -----------------------------------------------------------------------------------------------\r\n\r\n    me.range = (range) ->\r\n      if arguments.length is 0 then return _scale.range()\r\n      else\r\n        _range = range\r\n        if _isOrdinal\r\n          _scale.rangeBands(range, _rangePadding, _rangeOuterPadding)\r\n        else\r\n          _scale.range(range)\r\n        return me\r\n\r\n    #--- property related attributes -----------------------------------------------------------------------------------\r\n\r\n    me.property = (name) ->\r\n      if arguments.length is 0 then return _property\r\n      else\r\n        _property = name\r\n        return me\r\n\r\n    me.layerProperty = (name) ->\r\n      if arguments.length is 0 then return _layerProp\r\n      else\r\n        _layerProp = name\r\n        return me\r\n\r\n    me.layerExclude = (excl) ->\r\n      if arguments.length is 0 then return _layerExclude\r\n      else\r\n        _layerExclude = excl\r\n        return me\r\n\r\n    me.layerKeys = (data) ->\r\n      if _property\r\n        if _.isArray(_property)\r\n          return _.intersection(_property, keys(data))# ensure only keys also in the data are returned\r\n        else\r\n          return [_property] #always return an array !!!\r\n      else\r\n        keys(data).filter((d) -> not (d in _layerExclude))\r\n\r\n    #--- Data Formatting -----------------------------------------------------------------------------------------------\r\n\r\n    me.dataFormat = (format) ->\r\n      if arguments.length is 0 then return _inputFormatString\r\n      else\r\n        _inputFormatString = format\r\n        if _scaleType is 'time'\r\n          _inputFormatFn = d3.time.format(format)\r\n        else\r\n          _inputFormatFn = (d) -> d\r\n        return me()\r\n\r\n    #--- Core data transformation interface ----------------------------------------------------------------------------\r\n\r\n    me.value = (data) ->\r\n      if _layerProp\r\n        if _.isArray(data) then data.map((d) -> parsedValue(d[_property][_layerProp])) else parsedValue(data[_property][_layerProp])\r\n      else\r\n        if _.isArray(data) then data.map((d) -> parsedValue(d[_property])) else parsedValue(data[_property])\r\n\r\n    me.layerValue = (data, layerKey) ->\r\n      if _layerProp\r\n        parsedValue(data[layerKey][_layerProp])\r\n      else\r\n        parsedValue(data[layerKey])\r\n\r\n    me.formattedValue = (data) ->\r\n      me.formatValue(me.value(data))\r\n\r\n    me.formatValue = (val) ->\r\n      if _outputFormatString and val and  (val.getUTCDate or not isNaN(val))\r\n        _outputFormatFn(val)\r\n      else\r\n        val\r\n\r\n    me.map = (data) ->\r\n      if Array.isArray(data) then data.map((d) -> _scale(me.value(data))) else _scale(me.value(data))\r\n\r\n    me.invert = (mappedValue) ->\r\n      # takes a mapped value (pixel position , color value, returns the corresponding value in the input domain\r\n      # the type of inverse is dependent on the scale type for quantitative scales.\r\n      # Ordinal scales ...\r\n\r\n      if _.has(me.scale(),'invert') # i.e. the d3 scale supports the inverse calculation: linear, log, pow, sqrt\r\n        _data = me.chart().getData()\r\n\r\n        # bisect.left never returns 0 in this specific scenario. We need to move the val by an interval to hit the middle of the range and to ensure\r\n        # that the first element will be captured. Also ensures better visual experience with tooltips\r\n\r\n        range = _scale.range()\r\n        interval = (range[1] - range[0]) / _data.length\r\n        val = me.scale().invert(mappedValue - interval/2)\r\n\r\n        bisect = d3.bisector(me.value).left\r\n        idx = bisect(_data, val)\r\n        idx = if idx < 0 then 0 else if idx >= _data.length then _data.length - 1 else idx\r\n        return idx # the inverse value does not necessarily correspond to a value in the data\r\n\r\n      if _.has(me.scale(),'invertExtent') # d3 supports this for quantize, quantile, threshold. returns the range that gets mapped to the value\r\n        return me.scale().invertExtent(mappedValue) #TODO How should this be mapped correctly. Use case???\r\n\r\n      # d3 does not support invert for ordinal scales, thus things become a bit more tricky.\r\n      # in case we are setting the domain explicitly, we know tha the range values and the domain elements are in the same order\r\n      # in case the domain is set 'lazy' (i.e. as values are used) we cannot map range and domain values easily. Not clear how to do this effectively\r\n\r\n      if me.resetOnNewData()\r\n        domain = _scale.domain()\r\n        range = _scale.range()\r\n        if _isVertical\r\n          interval = range[0] - range[1]\r\n          idx = range.length - Math.floor(mappedValue / interval) - 1\r\n        else\r\n          interval = range[1] - range[0]\r\n          idx = Math.floor(mappedValue / interval)\r\n        return idx\r\n\r\n    me.invertOrdinal = (mappedValue) ->\r\n      if me.isOrdinal() and me.resetOnNewData()\r\n        idx = me.invert(mappedValue)\r\n        return _scale.domain()[idx]\r\n\r\n\r\n    #--- Axis Attributes and functions ---------------------------------------------------------------------------------\r\n\r\n    me.showAxis = (trueFalse) ->\r\n      if arguments.length is 0 then return _showAxis\r\n      else\r\n        _showAxis = trueFalse\r\n        if trueFalse\r\n          _axis = d3.svg.axis()\r\n        else\r\n          _axis = undefined\r\n        return me\r\n\r\n    me.axisOrient = (val) ->\r\n      if arguments.length is 0 then return _axisOrient\r\n      else\r\n        _axisOrientOld = _axisOrient\r\n        _axisOrient = val\r\n        return me #to enable chaining\r\n\r\n    me.axisOrientOld = (val) ->  #TODO This is not the best place to keep the old axis value. Only needed by container in case the axis position changes\r\n      if arguments.length is 0 then return _axisOrientOld\r\n      else\r\n        _axisOrientOld = val\r\n        return me #to enable chaining\r\n\r\n    me.axis = () ->\r\n      return _axis\r\n\r\n    me.ticks = (val) ->\r\n      if arguments.length is 0 then return _ticks\r\n      else\r\n        _ticks = val\r\n        if me.axis()\r\n          me.axis().ticks(_ticks)\r\n        return me #to enable chaining\r\n\r\n    me.tickFormat = (val) ->\r\n      if arguments.length is 0 then return _tickFormat\r\n      else\r\n        _tickFormat = val\r\n        if me.axis()\r\n          me.axis().tickFormat(val)\r\n        return me #to enable chaining\r\n\r\n    me.showLabel = (val) ->\r\n      if arguments.length is 0 then return _showLabel\r\n      else\r\n        _showLabel = val\r\n        return me #to enable chaining\r\n\r\n    me.axisLabel = (text) ->\r\n      if arguments.length is 0\r\n        return if _axisLabel then _axisLabel else me.property()\r\n      else\r\n        _axisLabel = text\r\n        return me\r\n\r\n    me.format = (val) ->\r\n      if arguments.length is 0 then return _outputFormatString\r\n      else\r\n        if val.length > 0\r\n          _outputFormatString = val\r\n        else\r\n          _outputFormatString = if me.scaleType() is 'time' then formatDefaults.date else formatDefaults.number\r\n        _outputFormatFn = if me.scaleType() is 'time' then d3.time.format(_outputFormatString) else d3.format(_outputFormatString)\r\n        return me #to enable chaining\r\n\r\n    me.showGrid = (trueFalse) ->\r\n      if arguments.length is 0 then return _showGrid\r\n      else\r\n        _showGrid = trueFalse\r\n        return me\r\n\r\n    #-- Register for drawing lifecycle events --------------------------------------------------------------------------\r\n\r\n    me.register = () ->\r\n      me.chart().lifeCycle().on \"scaleDomains.#{me.id()}\", (data) ->\r\n        # set the domain if required\r\n        if me.resetOnNewData()\r\n          _scale.domain(me.getDomain(data))\r\n\r\n      me.chart().lifeCycle().on \"prepareData.#{me.id()}\", (data) ->\r\n        # compute the domain range calculation if required\r\n        calcRule =  me.domainCalc()\r\n        if me.parent().scaleProperties\r\n          me.layerExclude(me.parent().scaleProperties())\r\n        if calcRule and calcDomain[calcRule]\r\n          _calculatedDomain = calcDomain[calcRule](data)\r\n\r\n    me.update = (noAnimation) ->\r\n      me.parent().lifeCycle().update(noAnimation)\r\n      return me\r\n\r\n    me.updateAttrs = () ->\r\n      me.parent().lifeCycle().updateAttrs()\r\n\r\n    me.drawAxis = () ->\r\n      me.parent().lifeCycle().drawAxis()\r\n      return me\r\n\r\n    return me\r\n\r\n  return scale","angular.module('wk.chart').factory 'scaleList', ($log) ->\r\n  return scaleList = () ->\r\n    _list = {}\r\n    _kindList = {}\r\n    _parentList = {}\r\n    _owner = undefined\r\n    _requiredScales = []\r\n    _layerScale = undefined\r\n\r\n    me = () ->\r\n\r\n    me.owner = (owner) ->\r\n      if arguments.length is 0 then return _owner\r\n      else\r\n        _owner = owner\r\n        return me\r\n\r\n    me.add = (scale) ->\r\n      if _list[scale.id()]\r\n        $log.error \"scaleList.add: scale #{scale.id()} already defined in scaleList of #{_owner.id()}. Duplicate scales are not allowed\"\r\n      _list[scale.id()] = scale\r\n      _kindList[scale.kind()] = scale\r\n      return me\r\n\r\n    me.hasScale = (scale) ->\r\n      s = me.getKind(scale.kind())\r\n      return s.id() is scale.id()\r\n\r\n    me.getKind = (kind) ->\r\n      if _kindList[kind] then _kindList[kind] else if _parentList.getKind then _parentList.getKind(kind) else undefined\r\n\r\n    me.hasKind = (kind) ->\r\n      return !!me.getKind(kind)\r\n\r\n    me.remove = (scale) ->\r\n      if not _list[scale.id()]\r\n        $log.warn \"scaleList.delete: scale #{scale.id()} not defined in scaleList of #{_owner.id()}. Ignoring\"\r\n        return me\r\n      delete _list[scale.id()]\r\n      delete me[scale.id]\r\n      return me\r\n\r\n    me.parentScales = (scaleList) ->\r\n      if arguments.length is 0 then return _parentList\r\n      else\r\n        _parentList = scaleList\r\n        return me\r\n\r\n    me.getOwned = () ->\r\n      _list\r\n\r\n    me.allKinds = () ->\r\n      ret = {}\r\n      if _parentList.allKinds\r\n        for k, s of _parentList.allKinds()\r\n          ret[k] = s\r\n      for k,s of _kindList\r\n        ret[k] = s\r\n      return ret\r\n\r\n    me.requiredScales = (req) ->\r\n      if arguments.length is 0 then return _requiredScales\r\n      else\r\n        _requiredScales = req\r\n        for k in req\r\n          if not me.hasKind(k)\r\n            throw \"Fatal Error: scale '#{k}' required but not defined\"\r\n      return me\r\n\r\n    me.getScales = (kindList) ->\r\n      l = {}\r\n      for kind in kindList\r\n        if me.hasKind(kind)\r\n          l[kind] = me.getKind(kind)\r\n        else\r\n          throw \"Fatal Error: scale '#{kind}' required but not defined\"\r\n      return l\r\n\r\n    me.getScaleProperties = () ->\r\n      l = []\r\n      for k,s of me.allKinds()\r\n        prop = s.property()\r\n        if prop\r\n          if Array.isArray(prop)\r\n            l.concat(prop)\r\n          else\r\n            l.push(prop)\r\n      return l\r\n\r\n    me.layerScale = (kind) ->\r\n      if arguments.length is 0\r\n        if _layerScale\r\n          return me.getKind(_layerScale)\r\n        return undefined\r\n      else\r\n        _layerScale = kind\r\n        return me\r\n\r\n    return me\r\n","angular.module('wk.chart').directive 'color', ($log, scale, legend, scaleUtils) ->\r\n  scaleCnt = 0\r\n  return {\r\n    restrict: 'E'\r\n    require: ['color','^chart', '?^layout']\r\n    controller: ($element) ->\r\n      me = scale()\r\n      #$log.log 'creating controller scaleColor'\r\n      return me\r\n\r\n    link: (scope, element, attrs, controllers) ->\r\n      me = controllers[0]\r\n      chart = controllers[1]\r\n      layout = controllers[2]\r\n      l = undefined\r\n\r\n      if not (chart or layout)\r\n        $log.error 'scale needs to be contained in a chart or layout directive '\r\n        return\r\n\r\n      name = 'color'\r\n      me.kind(name)\r\n      me.parent(layout or chart)\r\n      me.chart(chart)\r\n      me.scaleType('category20')\r\n      element.addClass(me.id())\r\n\r\n      chart.addScale(me, layout)\r\n      me.register()\r\n\r\n      #$log.log \"linking scale #{name} id:\", me.id(), 'layout:', (if layout then layout.id() else '') , 'chart:', chart.id()\r\n\r\n      #---Directive Attributes handling --------------------------------------------------------------------------------\r\n\r\n      scaleUtils.observeSharedAttributes(attrs, me)\r\n      scaleUtils.observeLegendAttributes(attrs, me, layout)\r\n\r\n  }","angular.module('wk.chart').service 'scaleUtils', ($log) ->\r\n\r\n  parseList = (val) ->\r\n    if val\r\n      l = val.trim().replace(/^\\[|\\]$/g, '').split(',').map((d) -> d.replace(/^[\\\"|']|[\\\"|']$/g, ''))\r\n      l = l.map((d) -> if isNaN(d) then d else +d)\r\n      return if l.length is 1 then return l[0] else l\r\n\r\n  return {\r\n\r\n    observeSharedAttributes: (attrs, me) ->\r\n      attrs.$observe 'type', (val) ->\r\n        if val isnt undefined\r\n          if d3.scale.hasOwnProperty(val) or val is 'time'\r\n            me.scaleType(val)\r\n          else\r\n            ## no scale defined, use default\r\n            $log.error \"Error: illegal scale value: #{val}. Using 'linear' scale instead\"\r\n            me.scaleType('linear')\r\n\r\n      attrs.$observe 'property', (val) ->\r\n        me.property(parseList(val)).update()\r\n\r\n      attrs.$observe 'layerProperty', (val) ->\r\n        if val and val.length > 0\r\n          me.layerProperty(val).update()\r\n\r\n      attrs.$observe 'range', (val) ->\r\n        range = parseList(val)\r\n        if Array.isArray(range)\r\n          me.range(range)\r\n          me.update()\r\n\r\n      attrs.$observe 'dateFormat', (val) ->\r\n        if val\r\n          if me.scaleType() is 'time'\r\n            me.dataFormat(val)\r\n            me.update()\r\n\r\n      attrs.$observe 'domain', (val) ->\r\n        if val\r\n          $log.info 'domain', val\r\n          parsedList = parseList(val)\r\n          if Array.isArray(parsedList)\r\n            me.domain(parsedList)\r\n            me.update()\r\n          else\r\n            $log.error \"domain #{name}: must be array, or comma-separated list, got\", val\r\n\r\n      attrs.$observe 'domainRange', (val) ->\r\n        if val\r\n          me.domainCalc(val)\r\n\r\n      attrs.$observe 'label', (val) ->\r\n        if val isnt undefined\r\n          me.axisLabel(val).updateAttrs()\r\n\r\n      attrs.$observe 'format', (val) ->\r\n        if val isnt undefined\r\n          me.format(val)\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    observeAxisAttributes: (attrs, me) ->\r\n\r\n      attrs.$observe 'tickFormat', (val) ->\r\n        if val isnt undefined\r\n          me.tickFormat(d3.format(val))\r\n\r\n      attrs.$observe 'ticks', (val) ->\r\n        if val isnt undefined\r\n          me.ticks(+val)\r\n          if me.axis()\r\n            me.updateAttrs()\r\n\r\n      attrs.$observe 'grid', (val) ->\r\n        if val isnt undefined\r\n          me.showGrid(val is '' or val is 'true').updateAttrs()\r\n\r\n      attrs.$observe 'showLabel', (val) ->\r\n        if val isnt undefined\r\n          me.showLabel(val is '' or val is 'true').update(true)\r\n\r\n    #-------------------------------------------------------------------------------------------------------------------\r\n\r\n    observeLegendAttributes: (attrs, me, layout) ->\r\n\r\n      attrs.$observe 'legend', (val) ->\r\n        if val isnt undefined\r\n          l = me.legend()\r\n          l.showValues(false)\r\n          switch val\r\n            when 'false'\r\n              l.show(false)\r\n            when 'top-left', 'top-right', 'bottom-left', 'bottom-right'\r\n              l.position(val).div(undefined).show(true)\r\n            when 'true', ''\r\n              l.position('top-right').show(true).div(undefined)\r\n            else\r\n              legendDiv = d3.select(val)\r\n              if legendDiv.empty()\r\n                $log.warn 'legend reference does not exist:', val\r\n                l.div(undefined).show(false)\r\n              else\r\n                l.div(legendDiv).position('top-left').show(true)\r\n\r\n          l.scale(me).layout(layout)\r\n          if me.parent()\r\n            l.register(me.parent())\r\n          l.redraw()\r\n\r\n      attrs.$observe 'valuesLegend', (val) ->\r\n        if val isnt undefined\r\n          l = me.legend()\r\n          l.showValues(true)\r\n          switch val\r\n            when 'false'\r\n              l.show(false)\r\n            when 'top-left', 'top-right', 'bottom-left', 'bottom-right'\r\n              l.position(val).div(undefined).show(true)\r\n            when 'true', ''\r\n              l.position('top-right').show(true).div(undefined)\r\n            else\r\n              legendDiv = d3.select(val)\r\n              if legendDiv.empty()\r\n                $log.warn 'legend reference does not exist:', val\r\n                l.div(undefined).show(false)\r\n              else\r\n                l.div(legendDiv).position('top-left').show(true)\r\n\r\n          l.scale(me).layout(layout)\r\n          if me.parent()\r\n            l.register(me.parent())\r\n          l.redraw()\r\n\r\n      attrs.$observe 'legendTitle', (val) ->\r\n        if val isnt undefined\r\n          me.legend().title(val).redraw()\r\n\r\n  }\r\n\r\n","angular.module('wk.chart').directive 'shape', ($log, scale, d3Shapes, scaleUtils) ->\r\n  scaleCnt = 0\r\n  return {\r\n    restrict: 'E'\r\n    require: ['shape','^chart', '?^layout']\r\n    controller: ($element) ->\r\n      me = scale()\r\n      #$log.log 'creating controller scaleSize'\r\n      return me\r\n\r\n    link: (scope, element, attrs, controllers) ->\r\n      me = controllers[0]\r\n      chart = controllers[1]\r\n      layout = controllers[2]\r\n\r\n      if not (chart or layout)\r\n        $log.error 'scale needs to be contained in a chart or layout directive '\r\n        return\r\n\r\n      name = 'shape'\r\n      me.kind(name)\r\n      me.parent(layout or chart)\r\n      me.chart(chart)\r\n      me.scaleType('ordinal')\r\n      me.scale().range(d3Shapes)\r\n      element.addClass(me.id())\r\n\r\n      chart.addScale(me, layout)\r\n      me.register()\r\n\r\n      #$log.log \"linking scale #{name} id:\", me.id(), 'layout:', (if layout then layout.id() else '') , 'chart:', chart.id()\r\n\r\n      #---Directive Attributes handling --------------------------------------------------------------------------------\r\n\r\n      scaleUtils.observeSharedAttributes(attrs, me)\r\n      scaleUtils.observeLegendAttributes(attrs, me, layout)\r\n  }","angular.module('wk.chart').directive 'size', ($log, scale, scaleUtils) ->\r\n  scaleCnt = 0\r\n  return {\r\n    restrict: 'E'\r\n    require: ['size','^chart', '?^layout']\r\n    controller: ($element) ->\r\n      me = scale()\r\n      #$log.log 'creating controller scaleSize'\r\n      return me\r\n\r\n    link: (scope, element, attrs, controllers) ->\r\n      me = controllers[0]\r\n      chart = controllers[1]\r\n      layout = controllers[2]\r\n\r\n      if not (chart or layout)\r\n        $log.error 'scale needs to be contained in a chart or layout directive '\r\n        return\r\n\r\n      name = 'size'\r\n      me.kind(name)\r\n      me.parent(layout or chart)\r\n      me.chart(chart)\r\n      me.scaleType('linear')\r\n      me.resetOnNewData(true)\r\n      element.addClass(me.id())\r\n\r\n      chart.addScale(me, layout)\r\n      me.register()\r\n\r\n      #$log.log \"linking scale #{name} id:\", me.id(), 'layout:', (if layout then layout.id() else '') , 'chart:', chart.id()\r\n\r\n      #---Directive Attributes handling --------------------------------------------------------------------------------\r\n\r\n      scaleUtils.observeSharedAttributes(attrs, me)\r\n      scaleUtils.observeLegendAttributes(attrs, me, layout)\r\n  }","angular.module('wk.chart').directive 'x', ($log, scale, scaleUtils) ->\r\n  scaleCnt = 0\r\n  return {\r\n    restrict: 'E'\r\n    require: ['x','^chart', '?^layout']\r\n    controller: ($element) ->\r\n      me = scale()\r\n      #$log.log 'creating controller scaleX'\r\n      return me\r\n\r\n    link: (scope, element, attrs, controllers) ->\r\n      me = controllers[0]\r\n      chart = controllers[1]\r\n      layout = controllers[2]\r\n\r\n      if not (chart or layout)\r\n        $log.error 'scale needs to be contained in a chart or layout directive '\r\n        return\r\n\r\n      name = 'x'\r\n      me.kind(name)\r\n      me.parent(layout or chart)\r\n      me.chart(chart)\r\n      me.scaleType('linear')\r\n      me.resetOnNewData(true)\r\n      me.isHorizontal(true)\r\n      me.register()\r\n      element.addClass(me.id())\r\n\r\n      chart.addScale(me, layout)\r\n\r\n      #$log.log \"linking scale #{name} id:\", me.id(), 'layout:', (if layout then layout.id() else '') , 'chart:', chart.id()\r\n\r\n      #---Directive Attributes handling --------------------------------------------------------------------------------\r\n\r\n      scaleUtils.observeSharedAttributes(attrs, me)\r\n\r\n      attrs.$observe 'axis', (val) ->\r\n        if val isnt undefined\r\n          if val isnt 'false'\r\n            if val in ['top', 'bottom']\r\n              me.axisOrient(val).showAxis(true)\r\n            else\r\n              me.axisOrient('bottom').showAxis(true)\r\n          else\r\n            me.showAxis(false).axisOrient(undefined)\r\n          me.update(true)\r\n\r\n      scaleUtils.observeAxisAttributes(attrs, me)\r\n      scaleUtils.observeLegendAttributes(attrs, me, layout)\r\n  }","angular.module('wk.chart').directive 'y', ($log, scale, legend, scaleUtils) ->\r\n  scaleCnt = 0\r\n  return {\r\n    restrict: 'E'\r\n    require: ['y','^chart', '?^layout']\r\n    controller: ($element) ->\r\n      me = scale()\r\n      #$log.log 'creating controller scaleY'\r\n      return me\r\n\r\n    link: (scope, element, attrs, controllers) ->\r\n      me = controllers[0]\r\n      chart = controllers[1]\r\n      layout = controllers[2]\r\n\r\n      if not (chart or layout)\r\n        $log.error 'scale needs to be contained in a chart or layout directive '\r\n        return\r\n\r\n      name = 'y'\r\n      me.kind(name)\r\n      me.parent(layout or chart)\r\n      me.chart(chart)\r\n      me.scaleType('linear')\r\n      me.isVertical(true)\r\n      me.resetOnNewData(true)\r\n      element.addClass(me.id())\r\n\r\n      chart.addScale(me, layout)\r\n      me.register()\r\n      #$log.log \"linking scale #{name} id:\", me.id(), 'layout:', (if layout then layout.id() else '') , 'chart:', chart.id()\r\n\r\n      #---Directive Attributes handling --------------------------------------------------------------------------------\r\n\r\n      scaleUtils.observeSharedAttributes(attrs, me)\r\n\r\n      attrs.$observe 'axis', (val) ->\r\n        if val isnt undefined\r\n          if val isnt 'false'\r\n            if val in ['left', 'right']\r\n              me.axisOrient(val).showAxis(true)\r\n            else\r\n              me.axisOrient('left').showAxis(true)\r\n          else\r\n            me.showAxis(false).axisOrient(undefined)\r\n          me.update(true)\r\n\r\n      scaleUtils.observeAxisAttributes(attrs, me)\r\n      scaleUtils.observeLegendAttributes(attrs, me, layout)\r\n  }","angular.module('wk.chart').service 'selectionSharing', ($log) ->\r\n  selection = {}\r\n  callbacks = {}\r\n\r\n  this.createGroup = (group) ->\r\n\r\n\r\n  this.setSelection = (selection, group) ->\r\n    if group\r\n      selection[group] = selection\r\n      if callbacks[group]\r\n        for cb in callbacks[group]\r\n          cb(selection)\r\n\r\n  this.getSelection = (group) ->\r\n    grp = group or 'default'\r\n    return selection[grp]\r\n\r\n  this.register = (group, callback) ->\r\n    if group\r\n      if not callbacks[group]\r\n        callbacks[group] = []\r\n      #ensure that callbacks are not registered more than once\r\n      if not _.contains(callbacks[group], callback)\r\n        callbacks[group].push(callback)\r\n\r\n  this.unregister = (group, callback) ->\r\n    if callbacks[group]\r\n      idx = callbacks[group].indexOf callback\r\n      if idx >= 0\r\n        callbacks[group].splice(idx, 1)\r\n\r\n  return this\r\n\r\n","angular.module('wk.chart').service 'timing', ($log) ->\r\n\r\n  timers = {}\r\n  elapsedStart = 0\r\n  elapsed = 0\r\n\r\n  this.init = () ->\r\n    elapsedStart = Date.now()\r\n\r\n  this.start = (topic) ->\r\n    top = timers[topic]\r\n    if not top\r\n      top = timers[topic] = {name:topic, start:0, total:0, callCnt:0, active: false}\r\n    top.start = Date.now()\r\n    top.active = true\r\n\r\n  this.stop = (topic) ->\r\n    if top = timers[topic]\r\n      top.active = false\r\n      top.total += Date.now() - top.start\r\n      top.callCnt += 1\r\n    elapsed = Date.now() - elapsedStart\r\n\r\n  this.report = () ->\r\n    for topic, val of timers\r\n      val.avg = val.total / val.callCnt\r\n    $log.info timers\r\n    $log.info 'Elapsed Time (ms)', elapsed\r\n    return timers\r\n\r\n  this.clear = () ->\r\n    timers = {}\r\n\r\n  return this","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function() {\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    this.ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            this.q = [];\n            this.add = function(ev) {\n                this.q.push(ev);\n            };\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = this.q.length; i < j; i++) {\n                    this.q[i].call();\n                }\n            };\n        }\n        /**\n         * @param {HTMLElement} element\n         * @param {String} prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            } else {\n                return element.style[prop];\n            }\n        }\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function} resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element.resizedAttached) {\n                element.resizedAttached = new EventQueue();\n                element.resizedAttached.add(resized);\n            } else if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0;';\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n            if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) {\n                element.style.position = 'relative';\n            }\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var shrinkChild = shrink.childNodes[0];\n            var lastWidth, lastHeight;\n            var reset = function() {\n                expandChild.style.width = expand.offsetWidth + 10 + 'px';\n                expandChild.style.height = expand.offsetHeight + 10 + 'px';\n                expand.scrollLeft = expand.scrollWidth;\n                expand.scrollTop = expand.scrollHeight;\n                shrink.scrollLeft = shrink.scrollWidth;\n                shrink.scrollTop = shrink.scrollHeight;\n                lastWidth = element.offsetWidth;\n                lastHeight = element.offsetHeight;\n            };\n            reset();\n            var changed = function() {\n                element.resizedAttached.call();\n            };\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n            addEvent(expand, 'scroll', function() {\n                if (element.offsetWidth > lastWidth || element.offsetHeight > lastHeight) {\n                    changed();\n                }\n                reset();\n            });\n            addEvent(shrink, 'scroll',function() {\n                if (element.offsetWidth < lastWidth || element.offsetHeight < lastHeight) {\n                    changed();\n                }\n                reset();\n            });\n        }\n        if (\"[object Array]\" === Object.prototype.toString.call(element)\n            || ('undefined' !== typeof jQuery && element instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && element instanceof Elements) //mootools\n            ) {\n            var i = 0, j = element.length;\n            for (; i < j; i++) {\n                attachResizeEvent(element[i], callback);\n            }\n        } else {\n            attachResizeEvent(element, callback);\n        }\n    }\n})();","// Copyright (c) 2013, Jason Davies, http://www.jasondavies.com\n// See LICENSE.txt for details.\n(function() {\n\nvar radians = Math.PI / 180,\n    degrees = 180 / Math.PI;\n\n// TODO make incremental rotate optional\n\nd3.geo.zoom = function() {\n  var projection,\n      zoomPoint,\n      event = d3.dispatch(\"zoomstart\", \"zoom\", \"zoomend\"),\n      zoom = d3.behavior.zoom()\n        .on(\"zoomstart\", function() {\n          var mouse0 = d3.mouse(this),\n              rotate = quaternionFromEuler(projection.rotate()),\n              point = position(projection, mouse0);\n          if (point) zoomPoint = point;\n\n          zoomOn.call(zoom, \"zoom\", function() {\n                projection.scale(d3.event.scale);\n                var mouse1 = d3.mouse(this),\n                    between = rotateBetween(zoomPoint, position(projection, mouse1));\n                projection.rotate(eulerFromQuaternion(rotate = between\n                    ? multiply(rotate, between)\n                    : multiply(bank(projection, mouse0, mouse1), rotate)));\n                mouse0 = mouse1;\n                event.zoom.apply(this, arguments);\n              });\n          event.zoomstart.apply(this, arguments);\n        })\n        .on(\"zoomend\", function() {\n          zoomOn.call(zoom, \"zoom\", null);\n          event.zoomend.apply(this, arguments);\n        }),\n      zoomOn = zoom.on;\n\n  zoom.projection = function(_) {\n    return arguments.length ? zoom.scale((projection = _).scale()) : projection;\n  };\n\n  return d3.rebind(zoom, event, \"on\");\n};\n\nfunction bank(projection, p0, p1) {\n  var t = projection.translate(),\n      angle = Math.atan2(p0[1] - t[1], p0[0] - t[0]) - Math.atan2(p1[1] - t[1], p1[0] - t[0]);\n  return [Math.cos(angle / 2), 0, 0, Math.sin(angle / 2)];\n}\n\nfunction position(projection, point) {\n  var t = projection.translate(),\n      spherical = projection.invert(point);\n  return spherical && isFinite(spherical[0]) && isFinite(spherical[1]) && cartesian(spherical);\n}\n\nfunction quaternionFromEuler(euler) {\n  var λ = .5 * euler[0] * radians,\n      φ = .5 * euler[1] * radians,\n      γ = .5 * euler[2] * radians,\n      sinλ = Math.sin(λ), cosλ = Math.cos(λ),\n      sinφ = Math.sin(φ), cosφ = Math.cos(φ),\n      sinγ = Math.sin(γ), cosγ = Math.cos(γ);\n  return [\n    cosλ * cosφ * cosγ + sinλ * sinφ * sinγ,\n    sinλ * cosφ * cosγ - cosλ * sinφ * sinγ,\n    cosλ * sinφ * cosγ + sinλ * cosφ * sinγ,\n    cosλ * cosφ * sinγ - sinλ * sinφ * cosγ\n  ];\n}\n\nfunction multiply(a, b) {\n  var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n      b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return [\n    a0 * b0 - a1 * b1 - a2 * b2 - a3 * b3,\n    a0 * b1 + a1 * b0 + a2 * b3 - a3 * b2,\n    a0 * b2 - a1 * b3 + a2 * b0 + a3 * b1,\n    a0 * b3 + a1 * b2 - a2 * b1 + a3 * b0\n  ];\n}\n\nfunction rotateBetween(a, b) {\n  if (!a || !b) return;\n  var axis = cross(a, b),\n      norm = Math.sqrt(dot(axis, axis)),\n      halfγ = .5 * Math.acos(Math.max(-1, Math.min(1, dot(a, b)))),\n      k = Math.sin(halfγ) / norm;\n  return norm && [Math.cos(halfγ), axis[2] * k, -axis[1] * k, axis[0] * k];\n}\n\nfunction eulerFromQuaternion(q) {\n  return [\n    Math.atan2(2 * (q[0] * q[1] + q[2] * q[3]), 1 - 2 * (q[1] * q[1] + q[2] * q[2])) * degrees,\n    Math.asin(Math.max(-1, Math.min(1, 2 * (q[0] * q[2] - q[3] * q[1])))) * degrees,\n    Math.atan2(2 * (q[0] * q[3] + q[1] * q[2]), 1 - 2 * (q[2] * q[2] + q[3] * q[3])) * degrees\n  ];\n}\n\nfunction cartesian(spherical) {\n  var λ = spherical[0] * radians,\n      φ = spherical[1] * radians,\n      cosφ = Math.cos(φ);\n  return [\n    cosφ * Math.cos(λ),\n    cosφ * Math.sin(λ),\n    Math.sin(φ)\n  ];\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) s += a[i] * b[i];\n  return s;\n}\n\nfunction cross(a, b) {\n  return [\n    a[1] * b[2] - a[2] * b[1],\n    a[2] * b[0] - a[0] * b[2],\n    a[0] * b[1] - a[1] * b[0]\n  ];\n}\n\n})();\n","function glow(url) {\r\n    var stdDeviation = 2,\r\n        rgb = \"#000\",\r\n        colorMatrix = \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\";\r\n\r\n    if (!arguments.length) {\r\n        url = \"glow\";\r\n    }\r\n\r\n    function my() {\r\n\r\n        var defs = this.append(\"defs\");\r\n\r\n        var filter = defs.append(\"filter\")\r\n            .attr(\"id\", url)\r\n            .attr(\"x\", \"-20%\")\r\n            .attr(\"y\", \"-20%\")\r\n            .attr(\"width\", \"140%\")\r\n            .attr(\"height\", \"140%\")\r\n            .call(function() {\r\n                this.append(\"feColorMatrix\")\r\n                    .attr(\"type\", \"matrix\")\r\n                    .attr(\"values\", colorMatrix);\r\n                this.append(\"feGaussianBlur\")\r\n                    .attr(\"stdDeviation\", stdDeviation)\r\n                    .attr(\"result\", \"coloredBlur\");\r\n            });\r\n\r\n        filter.append(\"feMerge\")\r\n            .call(function() {\r\n                this.append(\"feMergeNode\")\r\n                    .attr(\"in\", \"coloredBlur\");\r\n                this.append(\"feMergeNode\")\r\n                    .attr(\"in\", \"SourceGraphic\");\r\n            });\r\n    }\r\n\r\n    my.rgb = function(value) {\r\n        if (!arguments.length) return color;\r\n        rgb = value;\r\n        color = d3.rgb(value);\r\n        var matrix = \"0 0 0 red 0 0 0 0 0 green 0 0 0 0 blue 0 0 0 1 0\";\r\n        colorMatrix = matrix\r\n            .replace(\"red\", color.r)\r\n            .replace(\"green\", color.g)\r\n            .replace(\"blue\", color.b);\r\n\r\n        return my;\r\n    };\r\n\r\n    my.stdDeviation = function(value) {\r\n        if (!arguments.length) return stdDeviation;\r\n        stdDeviation = value;\r\n        return my;\r\n    };\r\n\r\n    return my;\r\n}\r\n","angular.module('wk.chart').factory 'layeredData', ($log) ->\r\n\r\n  layered = () ->\r\n    _data = []\r\n    _layerKeys = []\r\n    _x = undefined\r\n    _calcTotal = false\r\n    _min = Infinity\r\n    _max = -Infinity\r\n    _tMin = Infinity\r\n    _tMax = -Infinity\r\n\r\n    me = () ->\r\n\r\n    me.data = (dat) ->\r\n      if arguments.length Is 0\r\n        return _data\r\n      else\r\n        _data = dat\r\n        return me\r\n\r\n    me.layerKeys = (keys) ->\r\n      if arguments.length is 0\r\n        return _layerKeys\r\n      else\r\n        _layerKeys = keys\r\n        return me\r\n\r\n    me.x = (name) ->\r\n      if arguments.length is 0\r\n        return _x\r\n      else\r\n        _x = name\r\n        return me\r\n\r\n    me.calcTotal = (t_f) ->\r\n      if arguments.length is 0\r\n        return _calcTotal\r\n      else\r\n        _calcTotal = t_f\r\n        return me\r\n\r\n    me.min = () ->\r\n      _min\r\n\r\n    me.max = () ->\r\n      _max\r\n\r\n    me.minTotal = () ->\r\n      _tMin\r\n\r\n    me.maxTotal = () ->\r\n      _tMax\r\n\r\n    me.extent = () ->\r\n      [me.min(), me.max()]\r\n\r\n    me.totalExtent = () ->\r\n      [me.minTotal(), me.maxTotal()]\r\n\r\n    me.columns = (data) ->\r\n      if arguments.length is 1\r\n        #_layerKeys.map((k) -> {key:k, values:data.map((d) -> {x: d[_x], value: d[k], data: d} )})\r\n        res = []\r\n        _min = Infinity\r\n        _max = -Infinity\r\n        _tMin = Infinity\r\n        _tMax = -Infinity\r\n\r\n        for k, i in _layerKeys\r\n          res[i] = {key:k, value:[], min:Infinity, max:-Infinity}\r\n        for d, i in data\r\n          t = 0\r\n          xv = if typeof _x is 'string' then d[_x] else _x(d)\r\n\r\n          for l in res\r\n            v = +d[l.key]\r\n            l.value.push {x:xv, value: v, key:l.key}\r\n            if l.max < v then l.max = v\r\n            if l.min > v then l.min = v\r\n            if _max < v then _max = v\r\n            if _min > v then _min = v\r\n            if _calcTotal then t += +v\r\n          if _calcTotal\r\n            #total.value.push {x:d[_x], value:t, key:total.key}\r\n            if _tMax < t then _tMax = t\r\n            if _tMin > t then _tMin = t\r\n        return {min:_min, max:_max, totalMin:_tMin,totalMax:_tMax, data:res}\r\n      return me\r\n\r\n\r\n\r\n    me.rows = (data) ->\r\n      if arguments.length is 1\r\n        return data.map((d) -> {x: d[_x], layers: layerKeys.map((k) -> {key:k, value: d[k], x:d[_x]})})\r\n      return me\r\n\r\n\r\n    return me","angular.module('wk.chart').directive 'svgIcon', ($log) ->\r\n  ## insert svg path into interpolated HTML. Required prevent Angular from throwing error (Fix 22)\r\n  return {\r\n    restrict: 'E'\r\n    template: '<svg ng-style=\"style\"><path></path></svg>'\r\n    scope:\r\n      path: \"=\"\r\n      width: \"@\"\r\n    link: (scope, elem, attrs ) ->\r\n      scope.style = {  # fix IE problem with interpolating style values\r\n        height: '20px'\r\n        width: scope.width + 'px'\r\n        'vertical-align': 'middle'\r\n      }\r\n      scope.$watch 'path', (val) ->\r\n        if val\r\n          d3.select(elem[0]).select('path').attr('d', val).attr('transform', \"translate(8,8)\")\r\n  }","angular.module('wk.chart').service 'utils', ($log) ->\r\n\r\n  #---------------------------------------------------------------------------------------------------------------------\r\n\r\n  @diff = (a,b,direction) ->\r\n    notInB = (v) ->\r\n      b.indexOf(v) < 0\r\n\r\n    res = {}\r\n    i = 0\r\n    while i < a.length\r\n      if notInB(a[i])\r\n        res[a[i]] = undefined\r\n        j = i + direction\r\n        while 0 <= j < a.length\r\n          if notInB(a[j])\r\n            j += direction\r\n          else\r\n            res[a[i]] =  a[j]\r\n            break\r\n      i++\r\n    return res\r\n\r\n  #---------------------------------------------------------------------------------------------------------------------\r\n\r\n  id = 0\r\n  @getId = () ->\r\n    return 'Chart' + id++\r\n\r\n  #---------------------------------------------------------------------------------------------------------------------\r\n\r\n  @parseList = (val) ->\r\n    if val\r\n      l = val.trim().replace(/^\\[|\\]$/g, '').split(',').map((d) -> d.replace(/^[\\\"|']|[\\\"|']$/g, ''))\r\n      return if l.length is 1 then return l[0] else l\r\n    return undefined\r\n\r\n  #---------------------------------------------------------------------------------------------------------------------\r\n\r\n  return @\r\n"]}